Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

--edf=/opt/microchip/xc8/v2.10/pic/dat/en_msgs.txt -cs \
  -h+dist/free/production/SD.X.production.sym \
  --cmf=dist/free/production/SD.X.production.cmf -z -Q12F1840 \
  -o/tmp/xcXIEvRxe --defsym=__MPLAB_BUILD=1 \
  -Mdist/free/production/SD.X.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=02060h-020EFh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABIGRAM=02000h-020EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/0F000h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/xcXivdt7J.o dist/free/production/SD.X.production.o 

Object code version is 3.11

Machine type is 12F1840



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXivdt7J.o
                end_init                              8        8        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        2    1000E       0
dist/free/production/SD.X.production.o
                cinit                                 A        A       14        8       0
                intentry                              4        4        4        8       0
                text21                              6D9      6D9        A        8       0
                text20                              66E      66E       12        8       0
                text19                              6E3      6E3        7        8       0
                text18                              6CE      6CE        B        8       0
                text17                              624      624       1D        8       0
                text16                              6C0      6C0        E        8       0
                text15                              560      560       42        8       0
                text14                              46C      46C       8C        8       0
                text13                              607      607       1D        8       0
                text12                              5A2      5A2       3F        8       0
                text11                              3AC      3AC       C0        8       0
                text10                              65B      65B       13        8       0
                text9                               6A1      6A1       10        8       0
                text8                               2DE      2DE       CE        8       0
                text7                               6F0      6F0        5        8       0
                text6                               641      641       1A        8       0
                text5                               5E1      5E1       26        8       0
                text4                               4F8      4F8       68        8       0
                text3                               680      680       11        8       0
                text2                               691      691       10        8       0
                text1                                1E       1E      2C0        8       0
                maintext                            6B1      6B1        F        8       0
                cstackBANK0                          20       20       36       20       1
                cstackCOMMON                         70       70        E       70       1
                clrtext                             6EA      6EA        6        8       0
                bssBANK1                             A0       A0       10       A0       1
                bssBANK0                             56       56       11       20       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              8        8        2         0
                cinit                                 A        A       14         0
                intentry                              4        4        4         0
                reset_vec                             0        0        2         0
                text21                              6D9      6D9        A         0
                text20                              66E      66E       12         0
                text19                              6E3      6E3        7         0
                text18                              6CE      6CE        B         0
                text17                              624      624       1D         0
                text16                              6C0      6C0        E         0
                text15                              560      560       42         0
                text14                              46C      46C       8C         0
                text13                              607      607       1D         0
                text12                              5A2      5A2       3F         0
                text11                              3AC      3AC       C0         0
                text10                              65B      65B       13         0
                text9                               6A1      6A1       10         0
                text8                               2DE      2DE       CE         0
                text7                               6F0      6F0        5         0
                text6                               641      641       1A         0
                text5                               5E1      5E1       26         0
                text4                               4F8      4F8       68         0
                text3                               680      680       11         0
                text2                               691      691       10         0
                text1                                1E       1E      2C0         0
                maintext                            6B1      6B1        F         0
                clrtext                             6EA      6EA        6         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       36         1
                bssBANK0                             56       56       11         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       10         1

        CLASS   BANK2          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0006F1  0006F5         8       0  CODE        2
                cstackBANK0                    000020  000047  000067        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000010  0000B0        A0       1  BANK1       1
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00067-0006F               9           1
        BANK1            000B0-000EF              40           1
        BANK2            00120-0016F              50           1
        BIGRAM           02000-020EF              F0           1
        CODE             00002-00003               2           2
                         006F5-00FFF             10B
        CONST            00002-00003               2           2
                         006F5-00FFF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00002-00003               2           2
                         006F5-00FFF             100
        IDLOC            08000-08003               4           2
        RAM              00067-0006F               9           1
                         000B0-000EF              40
                         00120-0016F              50
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02060-020EF              90           1
        STRCODE          00002-00003               2           2
                         006F5-00FFF             90B
        STRING           00002-00003               2           2
                         006F5-00FFF             100

                                  Symbol Table

?_SD_Card_GetSize                 cstackCOMMON 00070
?_SD_Card_ProcessCRC              cstackCOMMON 00073
SD_Card_Command@a                 cstackCOMMON 00079
SD_Card_Command@cmd               cstackBANK0  00025
SD_Card_Command@crc               cstackBANK0  0002B
SD_Card_Command@i                 cstackBANK0  0002E
SD_Card_Command@i_734             cstackBANK0  0002D
SD_Card_Command@payload           cstackBANK0  00026
SD_Card_Command@response          cstackBANK0  0002C
SD_Card_Crc7@c                    cstackCOMMON 00076
SD_Card_Crc7@crc                  cstackCOMMON 00078
SD_Card_Crc7@data                 cstackCOMMON 00070
SD_Card_Crc7@i                    cstackCOMMON 00074
SD_Card_Crc7@j                    cstackCOMMON 00077
SD_Card_Crc7@len                  cstackCOMMON 00071
SD_Card_GetSize@c_size            cstackCOMMON 00078
SD_Card_GetSize@c_size_845        cstackCOMMON 00074
SD_Card_GetSize@c_size_mult       cstackCOMMON 0007B
SD_Card_GetSize@read_bl_len       cstackCOMMON 0007A
SD_Card_Init@i                    cstackBANK0  00034
SD_Card_Init@i_755                cstackBANK0  00035
SD_Card_Init@i_757                cstackBANK0  00037
SD_Card_Init@response             cstackBANK0  00036
SD_Card_ProcessCRC@crc            cstackCOMMON 00078
SD_Card_RWInit@addr               cstackBANK0  0002F
SD_Card_RWInit@readOrWrite        cstackBANK0  00033
SD_Card_RWInit@singleOrMultiBlock cstackBANK0  00034
SD_Card_ReadReg16@dst             cstackCOMMON 0007D
SD_Card_ReadReg16@i               cstackBANK0  00031
SD_Card_ReadReg16@reg             cstackBANK0  00030
SD_Card_WaitIfBusy@i              cstackCOMMON 00074
SD_Card_WaitStartToken@i          cstackCOMMON 00074
SD_SPI_Clock@count                cstackCOMMON 00072
SD_SPI_Clock@i                    cstackCOMMON 00073
SD_SPI_Read@response              cstackCOMMON 00072
SD_SPI_Write@byte                 cstackCOMMON 00070
_ANSELA                           (abs)        0018C
_APFCONbits                       (abs)        0011D
_GIE                              (abs)        0005F
_LATA                             (abs)        0010C
_OPTION_REG                       (abs)        00095
_OSCCON                           (abs)        00099
_OSCTUNE                          (abs)        00098
_PEIE                             (abs)        0005E
_PORTAbits                        (abs)        0000C
_SD_CID                           bssBANK1     000A0
_SD_CSD                           bssBANK0     00057
_SD_Card_Command                  text14       0046C
_SD_Card_Crc7                     text15       00560
_SD_Card_Disable                  text19       006E3
_SD_Card_Enable                   text16       006C0
_SD_Card_GetSize                  text8        002DE
_SD_Card_Init                     text11       003AC
_SD_Card_IsActive                 text7        006F0
_SD_Card_ProcessCRC               text6        00641
_SD_Card_RWEnd                    text5        005E1
_SD_Card_RWEnd$860                cstackBANK0  00031
_SD_Card_RWInit                   text4        004F8
_SD_Card_RWStartMulti             text3        00680
_SD_Card_RWStopMulti              text2        00691
_SD_Card_ReadReg16                text12       005A2
_SD_Card_WaitIfBusy               text17       00624
_SD_Card_WaitStartToken           text13       00607
_SD_FLAGS                         bssBANK0     00056
_SD_SPI_Clock                     text20       0066E
_SD_SPI_Init                      text10       0065B
_SD_SPI_Read                      text18       006CE
_SD_SPI_Write                     text21       006D9
_SSP1BUF                          (abs)        00211
_SSP1CON1bits                     (abs)        00215
_SSP1STATbits                     (abs)        00214
_TMR0IE                           (abs)        0005D
_TRISA                            (abs)        0008C
_TRISAbits                        (abs)        0008C
__CFG_BOREN$ON                    (abs)        00000
__CFG_BORV$LO                     (abs)        00000
__CFG_CLKOUTEN$OFF                (abs)        00000
__CFG_CP$OFF                      (abs)        00000
__CFG_CPD$OFF                     (abs)        00000
__CFG_FCMEN$OFF                   (abs)        00000
__CFG_FOSC$INTOSC                 (abs)        00000
__CFG_IESO$OFF                    (abs)        00000
__CFG_LVP$OFF                     (abs)        00000
__CFG_MCLRE$OFF                   (abs)        00000
__CFG_PLLEN$ON                    (abs)        00000
__CFG_PWRTE$ON                    (abs)        00000
__CFG_STVREN$ON                   (abs)        00000
__CFG_WDTE$OFF                    (abs)        00000
__CFG_WRT$OFF                     (abs)        00000
__Habs1                           abs1         00000
__Hbank0                          bank0        00000
__Hbank1                          bank1        00000
__Hbank10                         bank10       00000
__Hbank11                         bank11       00000
__Hbank12                         bank12       00000
__Hbank13                         bank13       00000
__Hbank14                         bank14       00000
__Hbank15                         bank15       00000
__Hbank16                         bank16       00000
__Hbank17                         bank17       00000
__Hbank18                         bank18       00000
__Hbank19                         bank19       00000
__Hbank2                          bank2        00000
__Hbank20                         bank20       00000
__Hbank21                         bank21       00000
__Hbank22                         bank22       00000
__Hbank23                         bank23       00000
__Hbank24                         bank24       00000
__Hbank25                         bank25       00000
__Hbank26                         bank26       00000
__Hbank27                         bank27       00000
__Hbank28                         bank28       00000
__Hbank29                         bank29       00000
__Hbank3                          bank3        00000
__Hbank30                         bank30       00000
__Hbank31                         bank31       00000
__Hbank4                          bank4        00000
__Hbank5                          bank5        00000
__Hbank6                          bank6        00000
__Hbank7                          bank7        00000
__Hbank8                          bank8        00000
__Hbank9                          bank9        00000
__Hbigram                         bigram       00000
__HbssBANK0                       bssBANK0     00000
__HbssBANK1                       bssBANK1     00000
__Hcinit                          cinit        0001E
__Hclrtext                        clrtext      00000
__Hcode                           code         00000
__Hcommon                         common       00000
__Hconfig                         config       08009
__HcstackBANK0                    cstackBANK0  00000
__HcstackCOMMON                   cstackCOMMON 00000
__Heeprom_data                    eeprom_data  00000
__Hend_init                       end_init     0000A
__Hfunctab                        functab      00000
__Hidloc                          idloc        00000
__Hinit                           init         00008
__Hintentry                       intentry     00008
__Hmaintext                       maintext     00000
__Hpowerup                        powerup      00000
__Hram                            ram          00000
__Hreset_vec                      reset_vec    00002
__Hsfr0                           sfr0         00000
__Hsfr1                           sfr1         00000
__Hsfr10                          sfr10        00000
__Hsfr11                          sfr11        00000
__Hsfr12                          sfr12        00000
__Hsfr13                          sfr13        00000
__Hsfr14                          sfr14        00000
__Hsfr15                          sfr15        00000
__Hsfr16                          sfr16        00000
__Hsfr17                          sfr17        00000
__Hsfr18                          sfr18        00000
__Hsfr19                          sfr19        00000
__Hsfr2                           sfr2         00000
__Hsfr20                          sfr20        00000
__Hsfr21                          sfr21        00000
__Hsfr22                          sfr22        00000
__Hsfr23                          sfr23        00000
__Hsfr24                          sfr24        00000
__Hsfr25                          sfr25        00000
__Hsfr26                          sfr26        00000
__Hsfr27                          sfr27        00000
__Hsfr28                          sfr28        00000
__Hsfr29                          sfr29        00000
__Hsfr3                           sfr3         00000
__Hsfr30                          sfr30        00000
__Hsfr31                          sfr31        00000
__Hsfr4                           sfr4         00000
__Hsfr5                           sfr5         00000
__Hsfr6                           sfr6         00000
__Hsfr7                           sfr7         00000
__Hsfr8                           sfr8         00000
__Hsfr9                           sfr9         00000
__Hspace_0                        (abs)        08009
__Hspace_1                        (abs)        000B0
__Hspace_2                        (abs)        00000
__Hspace_3                        (abs)        00000
__Hstack                          stack        00000
__Hstrings                        strings      00000
__Htext                           text         00000
__Labs1                           abs1         00000
__Lbank0                          bank0        00000
__Lbank1                          bank1        00000
__Lbank10                         bank10       00000
__Lbank11                         bank11       00000
__Lbank12                         bank12       00000
__Lbank13                         bank13       00000
__Lbank14                         bank14       00000
__Lbank15                         bank15       00000
__Lbank16                         bank16       00000
__Lbank17                         bank17       00000
__Lbank18                         bank18       00000
__Lbank19                         bank19       00000
__Lbank2                          bank2        00000
__Lbank20                         bank20       00000
__Lbank21                         bank21       00000
__Lbank22                         bank22       00000
__Lbank23                         bank23       00000
__Lbank24                         bank24       00000
__Lbank25                         bank25       00000
__Lbank26                         bank26       00000
__Lbank27                         bank27       00000
__Lbank28                         bank28       00000
__Lbank29                         bank29       00000
__Lbank3                          bank3        00000
__Lbank30                         bank30       00000
__Lbank31                         bank31       00000
__Lbank4                          bank4        00000
__Lbank5                          bank5        00000
__Lbank6                          bank6        00000
__Lbank7                          bank7        00000
__Lbank8                          bank8        00000
__Lbank9                          bank9        00000
__Lbigram                         bigram       00000
__LbssBANK0                       bssBANK0     00000
__LbssBANK1                       bssBANK1     00000
__Lcinit                          cinit        0000A
__Lclrtext                        clrtext      00000
__Lcode                           code         00000
__Lcommon                         common       00000
__Lconfig                         config       08007
__LcstackBANK0                    cstackBANK0  00000
__LcstackCOMMON                   cstackCOMMON 00000
__Leeprom_data                    eeprom_data  00000
__Lend_init                       end_init     00008
__Lfunctab                        functab      00000
__Lidloc                          idloc        00000
__Linit                           init         00008
__Lintentry                       intentry     00004
__Lmaintext                       maintext     00000
__Lpowerup                        powerup      00000
__Lram                            ram          00000
__Lreset_vec                      reset_vec    00000
__Lsfr0                           sfr0         00000
__Lsfr1                           sfr1         00000
__Lsfr10                          sfr10        00000
__Lsfr11                          sfr11        00000
__Lsfr12                          sfr12        00000
__Lsfr13                          sfr13        00000
__Lsfr14                          sfr14        00000
__Lsfr15                          sfr15        00000
__Lsfr16                          sfr16        00000
__Lsfr17                          sfr17        00000
__Lsfr18                          sfr18        00000
__Lsfr19                          sfr19        00000
__Lsfr2                           sfr2         00000
__Lsfr20                          sfr20        00000
__Lsfr21                          sfr21        00000
__Lsfr22                          sfr22        00000
__Lsfr23                          sfr23        00000
__Lsfr24                          sfr24        00000
__Lsfr25                          sfr25        00000
__Lsfr26                          sfr26        00000
__Lsfr27                          sfr27        00000
__Lsfr28                          sfr28        00000
__Lsfr29                          sfr29        00000
__Lsfr3                           sfr3         00000
__Lsfr30                          sfr30        00000
__Lsfr31                          sfr31        00000
__Lsfr4                           sfr4         00000
__Lsfr5                           sfr5         00000
__Lsfr6                           sfr6         00000
__Lsfr7                           sfr7         00000
__Lsfr8                           sfr8         00000
__Lsfr9                           sfr9         00000
__Lspace_0                        (abs)        00000
__Lspace_1                        (abs)        00000
__Lspace_2                        (abs)        00000
__Lspace_3                        (abs)        00000
__Lstack                          stack        00000
__Lstrings                        strings      00000
__Ltext                           text         00000
__S0                              (abs)        08009
__S1                              (abs)        000B0
__S2                              (abs)        00000
__S3                              (abs)        00000
___int_sp                         stack        00000
___latbits                        (abs)        00001
___sp                             stack        00000
___stackhi                        (abs)        020EF
___stacklo                        (abs)        02060
__end_of_SD_Card_Command          text14       004F8
__end_of_SD_Card_Crc7             text15       005A2
__end_of_SD_Card_Disable          text19       006EA
__end_of_SD_Card_Enable           text16       006CE
__end_of_SD_Card_GetSize          text8        003AC
__end_of_SD_Card_Init             text11       0046C
__end_of_SD_Card_IsActive         text7        006F5
__end_of_SD_Card_ProcessCRC       text6        0065B
__end_of_SD_Card_RWEnd            text5        00607
__end_of_SD_Card_RWInit           text4        00560
__end_of_SD_Card_RWStartMulti     text3        00691
__end_of_SD_Card_RWStopMulti      text2        006A1
__end_of_SD_Card_ReadReg16        text12       005E1
__end_of_SD_Card_WaitIfBusy       text17       00641
__end_of_SD_Card_WaitStartToken   text13       00624
__end_of_SD_SPI_Clock             text20       00680
__end_of_SD_SPI_Init              text10       0066E
__end_of_SD_SPI_Read              text18       006D9
__end_of_SD_SPI_Write             text21       006E3
__end_of__initialization          cinit        0001A
__end_of_init                     text9        006B1
__end_of_isr                      intentry     00008
__end_of_loop                     text1        002DE
__end_of_main                     maintext     006C0
__initialization                  cinit        0000A
__pbssBANK0                       bssBANK0     00056
__pbssBANK1                       bssBANK1     000A0
__pcstackBANK0                    cstackBANK0  00020
__pcstackCOMMON                   cstackCOMMON 00070
__pintentry                       intentry     00004
__pmaintext                       maintext     006B1
__ptext1                          text1        0001E
__ptext10                         text10       0065B
__ptext11                         text11       003AC
__ptext12                         text12       005A2
__ptext13                         text13       00607
__ptext14                         text14       0046C
__ptext15                         text15       00560
__ptext16                         text16       006C0
__ptext17                         text17       00624
__ptext18                         text18       006CE
__ptext19                         text19       006E3
__ptext2                          text2        00691
__ptext20                         text20       0066E
__ptext21                         text21       006D9
__ptext3                          text3        00680
__ptext4                          text4        004F8
__ptext5                          text5        005E1
__ptext6                          text6        00641
__ptext7                          text7        006F0
__ptext8                          text8        002DE
__ptext9                          text9        006A1
__size_of_SD_Card_Command         (abs)        00000
__size_of_SD_Card_Crc7            (abs)        00000
__size_of_SD_Card_Disable         (abs)        00000
__size_of_SD_Card_Enable          (abs)        00000
__size_of_SD_Card_GetSize         (abs)        00000
__size_of_SD_Card_Init            (abs)        00000
__size_of_SD_Card_IsActive        (abs)        00000
__size_of_SD_Card_ProcessCRC      (abs)        00000
__size_of_SD_Card_RWEnd           (abs)        00000
__size_of_SD_Card_RWInit          (abs)        00000
__size_of_SD_Card_RWStartMulti    (abs)        00000
__size_of_SD_Card_RWStopMulti     (abs)        00000
__size_of_SD_Card_ReadReg16       (abs)        00000
__size_of_SD_Card_WaitIfBusy      (abs)        00000
__size_of_SD_Card_WaitStartToken  (abs)        00000
__size_of_SD_SPI_Clock            (abs)        00000
__size_of_SD_SPI_Init             (abs)        00000
__size_of_SD_SPI_Read             (abs)        00000
__size_of_SD_SPI_Write            (abs)        00000
__size_of_init                    (abs)        00000
__size_of_isr                     (abs)        00000
__size_of_loop                    (abs)        00000
__size_of_main                    (abs)        00000
_init                             text9        006A1
_isr                              intentry     00004
_loop                             text1        0001E
_main                             maintext     006B1
btemp                             (abs)        0007E
clear_ram0                        clrtext      006EA
end_of_initialization             cinit        0001A
int$flags                         (abs)        0007E
intlevel0                         functab      00000
intlevel1                         functab      00000
intlevel2                         functab      00000
intlevel3                         functab      00000
intlevel4                         functab      00000
intlevel5                         functab      00000
loop@cardSize                     cstackBANK0  0003B
loop@i                            cstackBANK0  0003F
loop@i_310                        cstackBANK0  00041
loop@i_313                        cstackBANK0  00043
loop@i_315                        cstackBANK0  00045
loop@i_317                        cstackBANK0  00047
loop@i_318                        cstackBANK0  00050
loop@i_320                        cstackBANK0  00049
loop@i_322                        cstackBANK0  0004B
loop@i_325                        cstackBANK0  0004D
loop@i_326                        cstackBANK0  00052
loop@j                            cstackBANK0  0004F
loop@j_319                        cstackBANK0  00053
loop@j_321                        cstackBANK0  00054
loop@j_324                        cstackBANK0  00051
loop@p                            cstackBANK0  00055
loop@sum                          cstackBANK0  00037
loop@sum2                         cstackBANK0  00039
reset_vec                         reset_vec    00000
start                             init         00008
start_initialization              cinit        0000A
wtemp0                            (abs)        0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 21 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_SD_Card_Init
		_SD_SPI_Init
		_init
		_loop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _loop *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   45[BANK0 ] unsigned int 
  i               2   43[BANK0 ] unsigned int 
  i               2   41[BANK0 ] unsigned int 
  j               1   47[BANK0 ] unsigned char 
  i               1   50[BANK0 ] unsigned char 
  j               1   49[BANK0 ] unsigned char 
  j               1   52[BANK0 ] unsigned char 
  j               1   51[BANK0 ] unsigned char 
  i               1   48[BANK0 ] unsigned char 
  i               2   39[BANK0 ] unsigned int 
  i               2   37[BANK0 ] unsigned int 
  i               2   35[BANK0 ] unsigned int 
  i               2   33[BANK0 ] unsigned int 
  i               2   31[BANK0 ] unsigned int 
  cardSize        4   27[BANK0 ] unsigned long 
  p               1   53[BANK0 ] PTR unsigned char 
		 -> loop@cardSize(4), 
  sum2            2   25[BANK0 ] unsigned int 
  sum             2   23[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      31       0       0
      Temps:          0       2       0       0
      Totals:         0      33       0       0
Total ram usage:       33 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SD_Card_GetSize
		_SD_Card_IsActive
		_SD_Card_RWEnd
		_SD_Card_RWInit
		_SD_Card_RWStartMulti
		_SD_Card_RWStopMulti
		_SD_SPI_Read
		_SD_SPI_Write
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SD_Card_RWStopMulti *****************
 Defined at:
		line 311 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  crc             2    0        unsigned int 
 Return value:  Size  Location     Type
                  2   28[None  ] unsigned int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SD_Card_ProcessCRC
		_SD_SPI_Clock
		_SD_SPI_Read
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _SD_Card_RWStartMulti *****************
 Defined at:
		line 302 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SD_Card_WaitIfBusy
		_SD_Card_WaitStartToken
		_SD_SPI_Write
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _SD_Card_RWInit *****************
 Defined at:
		line 228 in file "SD.c"
 Parameters:    Size  Location     Type
  addr            4   15[BANK0 ] unsigned long 
  readOrWrite     1   19[BANK0 ] unsigned char 
  singleOrMult    1   20[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       6       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SD_Card_Command
		_SD_Card_Disable
		_SD_Card_Enable
		_SD_Card_WaitStartToken
		_SD_SPI_Write
 This function is called by:
		_loop
		_SD_Card_ReadBlock
		_SD_Card_WriteBlock
 This function uses a non-reentrant model


 *************** function _SD_Card_RWEnd *****************
 Defined at:
		line 263 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  crc             2    0        unsigned int 
 Return value:  Size  Location     Type
                  2   20[None  ] unsigned int 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SD_Card_Command
		_SD_Card_Disable
		_SD_Card_ProcessCRC
 This function is called by:
		_loop
		_SD_Card_ReadBlock
		_SD_Card_WriteBlock
 This function uses a non-reentrant model


 *************** function _SD_Card_ProcessCRC *****************
 Defined at:
		line 203 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  crc             2    8[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SD_SPI_Read
 This function is called by:
		_SD_Card_RWEnd
		_SD_Card_RWStopMulti
 This function uses a non-reentrant model


 *************** function _SD_Card_IsActive *****************
 Defined at:
		line 210 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _SD_Card_GetSize *****************
 Defined at:
		line 190 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c_size          4    4[COMMON] unsigned long 
  c_size          2    8[COMMON] unsigned int 
  c_size_mult     1   11[COMMON] unsigned char 
  read_bl_len     1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         8       0       0       0
      Temps:          0      15       0       0
      Totals:        12      15       0       0
Total ram usage:       27 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 15 in file "init.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SD_SPI_Init *****************
 Defined at:
		line 12 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SD_Card_Init *****************
 Defined at:
		line 123 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  response        1   22[BANK0 ] unsigned char 
  i               1   23[BANK0 ] unsigned char 
  i               1   21[BANK0 ] unsigned char 
  i               1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SD_Card_Command
		_SD_Card_Disable
		_SD_Card_Enable
		_SD_Card_ReadReg16
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SD_Card_ReadReg16 *****************
 Defined at:
		line 175 in file "SD.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  dst             1   13[COMMON] PTR unsigned char 
		 -> SD_CSD(16), SD_CID(16), 
 Auto vars:     Size  Location     Type
  reg             1   16[BANK0 ] unsigned char 
  i               1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         1       3       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SD_Card_Command
		_SD_Card_WaitStartToken
		_SD_SPI_Read
 This function is called by:
		_SD_Card_Init
 This function uses a non-reentrant model


 *************** function _SD_Card_WaitStartToken *****************
 Defined at:
		line 221 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SD_SPI_Read
 This function is called by:
		_SD_Card_ReadReg16
		_SD_Card_RWInit
		_SD_Card_RWStartMulti
 This function uses a non-reentrant model


 *************** function _SD_Card_Command *****************
 Defined at:
		line 64 in file "SD.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
  a               4    9[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  cmd             1    5[BANK0 ] unsigned char 
  i               1   13[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
  payload         5    6[BANK0 ] unsigned char [5]
  response        1   12[BANK0 ] unsigned char 
  crc             1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0      10       0       0
      Temps:          0       5       0       0
      Totals:         4      15       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SD_Card_Crc7
		_SD_SPI_Read
		_SD_SPI_Write
 This function is called by:
		_SD_Card_Init
		_SD_Card_ReadReg16
		_SD_Card_RWInit
		_SD_Card_RWEnd
 This function uses a non-reentrant model


 *************** function _SD_Card_Crc7 *****************
 Defined at:
		line 91 in file "SD.c"
 Parameters:    Size  Location     Type
  crc             1    wreg     unsigned char 
  data            1    0[COMMON] PTR unsigned char 
		 -> SD_Card_Command@payload(5), 
  len             1    1[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  crc             1    8[COMMON] unsigned char 
  j               1    7[COMMON] unsigned char 
  c               1    6[COMMON] unsigned char 
  i               2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         5       0       0       0
      Temps:          2       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SD_Card_Command
 This function uses a non-reentrant model


 *************** function _SD_Card_Enable *****************
 Defined at:
		line 50 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SD_Card_WaitIfBusy
		_SD_SPI_Clock
 This function is called by:
		_SD_Card_Init
		_SD_Card_RWInit
 This function uses a non-reentrant model


 *************** function _SD_Card_WaitIfBusy *****************
 Defined at:
		line 214 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SD_SPI_Read
 This function is called by:
		_SD_Card_Enable
		_SD_Card_RWStartMulti
 This function uses a non-reentrant model


 *************** function _SD_SPI_Read *****************
 Defined at:
		line 43 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  response        1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_SD_SPI_Write
 This function is called by:
		_loop
		_SD_Card_Command
		_SD_Card_ReadReg16
		_SD_Card_ProcessCRC
		_SD_Card_WaitIfBusy
		_SD_Card_WaitStartToken
		_SD_Card_RWStopMulti
		_SD_Card_ReadBlock
 This function uses a non-reentrant model


 *************** function _SD_Card_Disable *****************
 Defined at:
		line 59 in file "SD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SD_SPI_Clock
 This function is called by:
		_SD_Card_Init
		_SD_Card_RWInit
		_SD_Card_RWEnd
 This function uses a non-reentrant model


 *************** function _SD_SPI_Clock *****************
 Defined at:
		line 31 in file "SD.c"
 Parameters:    Size  Location     Type
  count           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  count           1    2[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_SD_SPI_Write
 This function is called by:
		_SD_Card_Enable
		_SD_Card_Disable
		_SD_Card_RWStopMulti
 This function uses a non-reentrant model


 *************** function _SD_SPI_Write *****************
 Defined at:
		line 37 in file "SD.c"
 Parameters:    Size  Location     Type
  byte            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  byte            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_loop
		_SD_SPI_Clock
		_SD_SPI_Read
		_SD_Card_Command
		_SD_Card_RWInit
		_SD_Card_RWStartMulti
		_SD_Card_WriteBlock
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 66 in file "init.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
SD.c
		_SD_Card_Crc7  		CODE           	0560	0000	67
		_SD_Card_Init  		CODE           	03AC	0000	193
		_SD_Card_RWEnd 		CODE           	05E1	0000	39
		_SD_Card_IsActive		CODE           	06F0	0000	6
		_SD_Card_Enable		CODE           	06C0	0000	15
		_SD_Card_ProcessCRC		CODE           	0641	0000	27
		_SD_Card_RWInit		CODE           	04F8	0000	105
		_SD_Card_RWStopMulti		CODE           	0691	0000	17
		_SD_Card_ReadReg16		CODE           	05A2	0000	64
		_SD_Card_WaitStartToken		CODE           	0607	0000	30
		_SD_Card_Disable		CODE           	06E3	0000	8
		_SD_Card_Command		CODE           	046C	0000	141
		_SD_Card_GetSize		CODE           	02DE	0000	207
		_SD_Card_RWStartMulti		CODE           	0680	0000	18
		_SD_Card_WaitIfBusy		CODE           	0624	0000	30
		_SD_SPI_Read   		CODE           	06CE	0000	12
		_SD_SPI_Init   		CODE           	065B	0000	20
		_SD_SPI_Clock  		CODE           	066E	0000	19
		_SD_SPI_Write  		CODE           	06D9	0000	11

SD.c estimated size: 1029

shared
		__initialization		CODE           	000A	0000	17

shared estimated size: 17

init.c
		_init          		CODE           	06A1	0000	17
		_isr           		CODE           	0004	0000	5

init.c estimated size: 22

main.c
		_loop          		CODE           	001E	0000	705
		_main          		CODE           	06B1	0000	16

main.c estimated size: 721

