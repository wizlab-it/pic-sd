

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 17:04:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC12F1840 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0194                     	;# 
   129  0195                     	;# 
   130  0196                     	;# 
   131  0197                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0391                     	;# 
   168  0392                     	;# 
   169  0393                     	;# 
   170  039A                     	;# 
   171  039C                     	;# 
   172  039D                     	;# 
   173  039E                     	;# 
   174  039F                     	;# 
   175  0FE4                     	;# 
   176  0FE5                     	;# 
   177  0FE6                     	;# 
   178  0FE7                     	;# 
   179  0FE8                     	;# 
   180  0FE9                     	;# 
   181  0FEA                     	;# 
   182  0FEB                     	;# 
   183  0FED                     	;# 
   184  0FEE                     	;# 
   185  0FEF                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  008C                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  010C                     	;# 
   227  0111                     	;# 
   228  0112                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011B                     	;# 
   236  011D                     	;# 
   237  011D                     	;# 
   238  018C                     	;# 
   239  0191                     	;# 
   240  0191                     	;# 
   241  0192                     	;# 
   242  0193                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0194                     	;# 
   246  0195                     	;# 
   247  0196                     	;# 
   248  0197                     	;# 
   249  0199                     	;# 
   250  019A                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  019C                     	;# 
   257  019D                     	;# 
   258  019E                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  0211                     	;# 
   262  0211                     	;# 
   263  0212                     	;# 
   264  0212                     	;# 
   265  0213                     	;# 
   266  0213                     	;# 
   267  0214                     	;# 
   268  0214                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0291                     	;# 
   277  0291                     	;# 
   278  0292                     	;# 
   279  0293                     	;# 
   280  0294                     	;# 
   281  0295                     	;# 
   282  0295                     	;# 
   283  0296                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  039A                     	;# 
   288  039C                     	;# 
   289  039D                     	;# 
   290  039E                     	;# 
   291  039F                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  008C                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009B                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009E                     	;# 
   343  010C                     	;# 
   344  0111                     	;# 
   345  0112                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0117                     	;# 
   349  0118                     	;# 
   350  0119                     	;# 
   351  011A                     	;# 
   352  011B                     	;# 
   353  011D                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  0191                     	;# 
   357  0191                     	;# 
   358  0192                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0197                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  0393                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  008C                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0197                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020C                     	;# 
   495  0211                     	;# 
   496  0211                     	;# 
   497  0212                     	;# 
   498  0212                     	;# 
   499  0213                     	;# 
   500  0213                     	;# 
   501  0214                     	;# 
   502  0214                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0216                     	;# 
   507  0216                     	;# 
   508  0217                     	;# 
   509  0217                     	;# 
   510  0291                     	;# 
   511  0291                     	;# 
   512  0292                     	;# 
   513  0293                     	;# 
   514  0294                     	;# 
   515  0295                     	;# 
   516  0295                     	;# 
   517  0296                     	;# 
   518  0391                     	;# 
   519  0392                     	;# 
   520  0393                     	;# 
   521  039A                     	;# 
   522  039C                     	;# 
   523  039D                     	;# 
   524  039E                     	;# 
   525  039F                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  000C                     _PORTAbits	set	12
   538  005F                     _GIE	set	95
   539  005E                     _PEIE	set	94
   540  005D                     _TMR0IE	set	93
   541  008C                     _TRISAbits	set	140
   542  008C                     _TRISA	set	140
   543  0095                     _OPTION_REG	set	149
   544  0098                     _OSCTUNE	set	152
   545  0099                     _OSCCON	set	153
   546  011D                     _APFCONbits	set	285
   547  010C                     _LATA	set	268
   548  018C                     _ANSELA	set	396
   549  0211                     _SSP1BUF	set	529
   550  0215                     _SSP1CON1bits	set	533
   551  0214                     _SSP1STATbits	set	532
   552                           
   553                           ; #config settings
   554  0000                     
   555                           	psect	cinit
   556  000A                     start_initialization:	
   557  000A                     __initialization:	
   558                           
   559                           ; Clear objects allocated to BANK0
   560  000A  3056               	movlw	low __pbssBANK0
   561  000B  0084               	movwf	4
   562  000C  3000               	movlw	high __pbssBANK0
   563  000D  0085               	movwf	5
   564  000E  3011               	movlw	17
   565  000F  3186  26EA  3180   	fcall	clear_ram0
   566                           
   567                           ; Clear objects allocated to BANK1
   568  0012  30A0               	movlw	low __pbssBANK1
   569  0013  0084               	movwf	4
   570  0014  3000               	movlw	high __pbssBANK1
   571  0015  0085               	movwf	5
   572  0016  3010               	movlw	16
   573  0017  3186  26EA  3180   	fcall	clear_ram0
   574  001A                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  001A                     __end_of__initialization:	
   578  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   579  001B  0020               	movlb	0
   580  001C  3186  2EB1         	ljmp	_main	;jump to C main() function
   581                           
   582                           	psect	bssBANK0
   583  0056                     __pbssBANK0:	
   584  0056                     _SD_FLAGS:	
   585  0056                     	ds	1
   586  0057                     _SD_CSD:	
   587  0057                     	ds	16
   588                           
   589                           	psect	bssBANK1
   590  00A0                     __pbssBANK1:	
   591  00A0                     _SD_CID:	
   592  00A0                     	ds	16
   593                           
   594                           	psect	clrtext
   595  06EA                     clear_ram0:	
   596                           ;	Called with FSR0 containing the base address, and
   597                           ;	WREG with the size to clear
   598                           
   599  06EA  0064               	clrwdt	;clear the watchdog before getting into this loop
   600  06EB                     clrloop0:	
   601  06EB  0180               	clrf	0	;clear RAM location pointed to by FSR
   602  06EC  3101               	addfsr 0,1
   603  06ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   604  06EE  2EEB               	goto	clrloop0	;have we reached the end yet?
   605  06EF  3400               	retlw	0	;all done for this memory range, return
   606                           
   607                           	psect	cstackCOMMON
   608  0070                     __pcstackCOMMON:	
   609  0070                     ?_init:	
   610  0070                     ??_init:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_SD_SPI_Init:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_SD_SPI_Init:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_SD_Card_Init:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_loop:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_SD_Card_IsActive:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??_SD_Card_IsActive:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_SD_SPI_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ??_SD_SPI_Write:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_SD_SPI_Read:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_SD_Card_RWStartMulti:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_SD_Card_WaitIfBusy:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_SD_Card_Crc7:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_SD_Card_WaitStartToken:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_main:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_isr:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_isr:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_SD_SPI_Clock:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_SD_Card_Enable:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_SD_Card_Disable:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_SD_Card_RWEnd:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_SD_Card_RWStopMulti:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0070                     ?_SD_Card_GetSize:	
   677                           ; 2 bytes @ 0x0
   678                           
   679  0070                     SD_SPI_Write@byte:	
   680                           ; 4 bytes @ 0x0
   681                           
   682  0070                     SD_Card_Crc7@data:	
   683                           ; 1 bytes @ 0x0
   684                           
   685                           
   686                           ; 1 bytes @ 0x0
   687  0070                     	ds	1
   688  0071                     ??_SD_SPI_Read:	
   689  0071                     ??_SD_SPI_Clock:	
   690                           ; 1 bytes @ 0x1
   691                           
   692  0071                     SD_Card_Crc7@len:	
   693                           ; 1 bytes @ 0x1
   694                           
   695                           
   696                           ; 1 bytes @ 0x1
   697  0071                     	ds	1
   698  0072                     ??_SD_Card_Crc7:	
   699  0072                     SD_SPI_Clock@count:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0072                     SD_SPI_Read@response:	
   703                           ; 1 bytes @ 0x2
   704                           
   705                           
   706                           ; 1 bytes @ 0x2
   707  0072                     	ds	1
   708  0073                     ??_SD_Card_WaitIfBusy:	
   709  0073                     ??_SD_Card_WaitStartToken:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0073                     ?_SD_Card_ProcessCRC:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0073                     SD_SPI_Clock@i:	
   716                           ; 2 bytes @ 0x3
   717                           
   718                           
   719                           ; 1 bytes @ 0x3
   720  0073                     	ds	1
   721  0074                     ??_SD_Card_Disable:	
   722  0074                     SD_Card_WaitIfBusy@i:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     SD_Card_WaitStartToken@i:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     SD_Card_Crc7@i:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     SD_Card_GetSize@c_size_845:	
   732                           ; 2 bytes @ 0x4
   733                           
   734                           
   735                           ; 4 bytes @ 0x4
   736  0074                     	ds	1
   737  0075                     ??_SD_Card_RWStartMulti:	
   738  0075                     ??_SD_Card_Enable:	
   739                           ; 1 bytes @ 0x5
   740                           
   741  0075                     ??_SD_Card_ProcessCRC:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 1 bytes @ 0x5
   746  0075                     	ds	1
   747  0076                     SD_Card_Crc7@c:	
   748                           
   749                           ; 1 bytes @ 0x6
   750  0076                     	ds	1
   751  0077                     SD_Card_Crc7@j:	
   752                           
   753                           ; 1 bytes @ 0x7
   754  0077                     	ds	1
   755  0078                     SD_Card_Crc7@crc:	
   756  0078                     SD_Card_GetSize@c_size:	
   757                           ; 1 bytes @ 0x8
   758                           
   759  0078                     SD_Card_ProcessCRC@crc:	
   760                           ; 2 bytes @ 0x8
   761                           
   762                           
   763                           ; 2 bytes @ 0x8
   764  0078                     	ds	1
   765  0079                     ?_SD_Card_Command:	
   766  0079                     SD_Card_Command@a:	
   767                           ; 1 bytes @ 0x9
   768                           
   769                           
   770                           ; 4 bytes @ 0x9
   771  0079                     	ds	1
   772  007A                     ??_SD_Card_RWStopMulti:	
   773  007A                     SD_Card_GetSize@read_bl_len:	
   774                           ; 1 bytes @ 0xA
   775                           
   776                           
   777                           ; 1 bytes @ 0xA
   778  007A                     	ds	1
   779  007B                     SD_Card_GetSize@c_size_mult:	
   780                           
   781                           ; 1 bytes @ 0xB
   782  007B                     	ds	2
   783  007D                     ??_SD_Card_RWInit:	
   784  007D                     ??_SD_Card_RWEnd:	
   785                           ; 1 bytes @ 0xD
   786                           
   787  007D                     ?_SD_Card_ReadReg16:	
   788                           ; 1 bytes @ 0xD
   789                           
   790  007D                     SD_Card_ReadReg16@dst:	
   791                           ; 1 bytes @ 0xD
   792                           
   793                           
   794                           ; 1 bytes @ 0xD
   795  007D                     	ds	1
   796  007E                     ??_main:	
   797                           
   798                           	psect	cstackBANK0
   799  0020                     __pcstackBANK0:	
   800                           ; 1 bytes @ 0xE
   801                           
   802  0020                     ??_SD_Card_GetSize:	
   803  0020                     ??_SD_Card_Command:	
   804                           ; 1 bytes @ 0x0
   805                           
   806                           
   807                           ; 1 bytes @ 0x0
   808  0020                     	ds	5
   809  0025                     SD_Card_Command@cmd:	
   810                           
   811                           ; 1 bytes @ 0x5
   812  0025                     	ds	1
   813  0026                     SD_Card_Command@payload:	
   814                           
   815                           ; 5 bytes @ 0x6
   816  0026                     	ds	5
   817  002B                     SD_Card_Command@crc:	
   818                           
   819                           ; 1 bytes @ 0xB
   820  002B                     	ds	1
   821  002C                     SD_Card_Command@response:	
   822                           
   823                           ; 1 bytes @ 0xC
   824  002C                     	ds	1
   825  002D                     SD_Card_Command@i_734:	
   826                           
   827                           ; 1 bytes @ 0xD
   828  002D                     	ds	1
   829  002E                     SD_Card_Command@i:	
   830                           
   831                           ; 1 bytes @ 0xE
   832  002E                     	ds	1
   833  002F                     ?_SD_Card_RWInit:	
   834  002F                     ??_SD_Card_ReadReg16:	
   835                           ; 1 bytes @ 0xF
   836                           
   837  002F                     SD_Card_RWInit@addr:	
   838                           ; 1 bytes @ 0xF
   839                           
   840                           
   841                           ; 4 bytes @ 0xF
   842  002F                     	ds	1
   843  0030                     SD_Card_ReadReg16@reg:	
   844                           
   845                           ; 1 bytes @ 0x10
   846  0030                     	ds	1
   847  0031                     SD_Card_ReadReg16@i:	
   848  0031                     _SD_Card_RWEnd$860:	
   849                           ; 1 bytes @ 0x11
   850                           
   851                           
   852                           ; 2 bytes @ 0x11
   853  0031                     	ds	1
   854  0032                     ??_SD_Card_Init:	
   855                           
   856                           ; 1 bytes @ 0x12
   857  0032                     	ds	1
   858  0033                     SD_Card_RWInit@readOrWrite:	
   859                           
   860                           ; 1 bytes @ 0x13
   861  0033                     	ds	1
   862  0034                     SD_Card_Init@i:	
   863  0034                     SD_Card_RWInit@singleOrMultiBlock:	
   864                           ; 1 bytes @ 0x14
   865                           
   866                           
   867                           ; 1 bytes @ 0x14
   868  0034                     	ds	1
   869  0035                     ??_loop:	
   870  0035                     SD_Card_Init@i_755:	
   871                           ; 1 bytes @ 0x15
   872                           
   873                           
   874                           ; 1 bytes @ 0x15
   875  0035                     	ds	1
   876  0036                     SD_Card_Init@response:	
   877                           
   878                           ; 1 bytes @ 0x16
   879  0036                     	ds	1
   880  0037                     SD_Card_Init@i_757:	
   881  0037                     loop@sum:	
   882                           ; 1 bytes @ 0x17
   883                           
   884                           
   885                           ; 2 bytes @ 0x17
   886  0037                     	ds	2
   887  0039                     loop@sum2:	
   888                           
   889                           ; 2 bytes @ 0x19
   890  0039                     	ds	2
   891  003B                     loop@cardSize:	
   892                           
   893                           ; 4 bytes @ 0x1B
   894  003B                     	ds	4
   895  003F                     loop@i:	
   896                           
   897                           ; 2 bytes @ 0x1F
   898  003F                     	ds	2
   899  0041                     loop@i_310:	
   900                           
   901                           ; 2 bytes @ 0x21
   902  0041                     	ds	2
   903  0043                     loop@i_313:	
   904                           
   905                           ; 2 bytes @ 0x23
   906  0043                     	ds	2
   907  0045                     loop@i_315:	
   908                           
   909                           ; 2 bytes @ 0x25
   910  0045                     	ds	2
   911  0047                     loop@i_317:	
   912                           
   913                           ; 2 bytes @ 0x27
   914  0047                     	ds	2
   915  0049                     loop@i_320:	
   916                           
   917                           ; 2 bytes @ 0x29
   918  0049                     	ds	2
   919  004B                     loop@i_322:	
   920                           
   921                           ; 2 bytes @ 0x2B
   922  004B                     	ds	2
   923  004D                     loop@i_325:	
   924                           
   925                           ; 2 bytes @ 0x2D
   926  004D                     	ds	2
   927  004F                     loop@j:	
   928                           
   929                           ; 1 bytes @ 0x2F
   930  004F                     	ds	1
   931  0050                     loop@i_318:	
   932                           
   933                           ; 1 bytes @ 0x30
   934  0050                     	ds	1
   935  0051                     loop@j_324:	
   936                           
   937                           ; 1 bytes @ 0x31
   938  0051                     	ds	1
   939  0052                     loop@i_326:	
   940                           
   941                           ; 1 bytes @ 0x32
   942  0052                     	ds	1
   943  0053                     loop@j_319:	
   944                           
   945                           ; 1 bytes @ 0x33
   946  0053                     	ds	1
   947  0054                     loop@j_321:	
   948                           
   949                           ; 1 bytes @ 0x34
   950  0054                     	ds	1
   951  0055                     loop@p:	
   952                           
   953                           ; 1 bytes @ 0x35
   954  0055                     	ds	1
   955                           
   956                           	psect	maintext
   957  06B1                     __pmaintext:	
   958 ;;
   959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   960 ;;
   961 ;; *************** function _main *****************
   962 ;; Defined at:
   963 ;;		line 21 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : B1F/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   977 ;;      Params:         0       0       0       0
   978 ;;      Locals:         0       0       0       0
   979 ;;      Temps:          0       0       0       0
   980 ;;      Totals:         0       0       0       0
   981 ;;Total ram usage:        0 bytes
   982 ;; Hardware stack levels required when called:    7
   983 ;; This function calls:
   984 ;;		_SD_Card_Init
   985 ;;		_SD_SPI_Init
   986 ;;		_init
   987 ;;		_loop
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _main
   995  06B1                     _main:	
   996  06B1                     l2170:	
   997                           ;incstack = 0
   998                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   999                           
  1000                           
  1001                           ;main.c: 22: init();
  1002  06B1  3186  26A1  3186   	fcall	_init
  1003                           
  1004                           ;main.c: 23: SD_SPI_Init();
  1005  06B4  3186  265B  3186   	fcall	_SD_SPI_Init
  1006  06B7                     l2172:	
  1007                           
  1008                           ;main.c: 24: SD_Card_Init();
  1009  06B7  3183  23AC  3186   	fcall	_SD_Card_Init
  1010  06BA                     l2174:	
  1011  06BA  3180  201E  3186   	fcall	_loop
  1012  06BD  2EBA               	goto	l2174
  1013  06BE  3180  2808         	ljmp	start
  1014  06C0                     __end_of_main:	
  1015                           
  1016                           	psect	text1
  1017  001E                     __ptext1:	
  1018 ;; *************** function _loop *****************
  1019 ;; Defined at:
  1020 ;;		line 34 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  i               2   45[BANK0 ] unsigned int 
  1025 ;;  i               2   43[BANK0 ] unsigned int 
  1026 ;;  i               2   41[BANK0 ] unsigned int 
  1027 ;;  j               1   47[BANK0 ] unsigned char 
  1028 ;;  i               1   50[BANK0 ] unsigned char 
  1029 ;;  j               1   49[BANK0 ] unsigned char 
  1030 ;;  j               1   52[BANK0 ] unsigned char 
  1031 ;;  j               1   51[BANK0 ] unsigned char 
  1032 ;;  i               1   48[BANK0 ] unsigned char 
  1033 ;;  i               2   39[BANK0 ] unsigned int 
  1034 ;;  i               2   37[BANK0 ] unsigned int 
  1035 ;;  i               2   35[BANK0 ] unsigned int 
  1036 ;;  i               2   33[BANK0 ] unsigned int 
  1037 ;;  i               2   31[BANK0 ] unsigned int 
  1038 ;;  cardSize        4   27[BANK0 ] unsigned long 
  1039 ;;  p               1   53[BANK0 ] PTR unsigned char 
  1040 ;;		 -> loop@cardSize(4), 
  1041 ;;  sum2            2   25[BANK0 ] unsigned int 
  1042 ;;  sum             2   23[BANK0 ] unsigned int 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1052 ;;      Params:         0       0       0       0
  1053 ;;      Locals:         0      31       0       0
  1054 ;;      Temps:          0       2       0       0
  1055 ;;      Totals:         0      33       0       0
  1056 ;;Total ram usage:       33 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    6
  1059 ;; This function calls:
  1060 ;;		_SD_Card_GetSize
  1061 ;;		_SD_Card_IsActive
  1062 ;;		_SD_Card_RWEnd
  1063 ;;		_SD_Card_RWInit
  1064 ;;		_SD_Card_RWStartMulti
  1065 ;;		_SD_Card_RWStopMulti
  1066 ;;		_SD_SPI_Read
  1067 ;;		_SD_SPI_Write
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _loop
  1075  001E                     _loop:	
  1076  001E                     l1940:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _loop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1079                           
  1080                           
  1081                           ;main.c: 36: if(!SD_Card_IsActive()) {
  1082  001E  3186  26F0  3180   	fcall	_SD_Card_IsActive
  1083  0021  3A00               	xorlw	0
  1084  0022  1D03               	skipz
  1085  0023  2825               	goto	u1311
  1086  0024  2826               	goto	u1310
  1087  0025                     u1311:	
  1088  0025  2840               	goto	l1946
  1089  0026                     u1310:	
  1090  0026                     l1942:	
  1091                           
  1092                           ;main.c: 38: PORTAbits.RA5 = !PORTAbits.RA5;
  1093  0026  1003               	clrc
  1094  0027  0020               	movlb	0	; select bank0
  1095  0028  1E8C               	btfss	12,5	;volatile
  1096  0029  1403               	setc
  1097  002A  1803               	btfsc	3,0
  1098  002B  282D               	goto	u1321
  1099  002C  2830               	goto	u1320
  1100  002D                     u1321:	
  1101  002D  0020               	movlb	0	; select bank0
  1102  002E  168C               	bsf	12,5	;volatile
  1103  002F  2832               	goto	u1334
  1104  0030                     u1320:	
  1105  0030  0020               	movlb	0	; select bank0
  1106  0031  128C               	bcf	12,5	;volatile
  1107  0032                     u1334:	
  1108  0032                     l1944:	
  1109                           
  1110                           ;main.c: 39: _delay((unsigned long)((200)*(32000000/4000.0)));
  1111  0032  3009               	movlw	9
  1112  0033  0020               	movlb	0	; select bank0
  1113  0034  00B6               	movwf	??_loop+1
  1114  0035  301E               	movlw	30
  1115  0036  00B5               	movwf	??_loop
  1116  0037  30E4               	movlw	228
  1117  0038                     u1697:	
  1118  0038  0B89               	decfsz	9,f
  1119  0039  2838               	goto	u1697
  1120  003A  0BB5               	decfsz	??_loop,f
  1121  003B  2838               	goto	u1697
  1122  003C  0BB6               	decfsz	??_loop+1,f
  1123  003D  2838               	goto	u1697
  1124  003E  0000               	nop
  1125  003F  2826               	goto	l1942
  1126  0040                     l1946:	
  1127                           
  1128                           ;main.c: 40: };main.c: 41: };main.c: 52: if(SD_Card_RWInit(0x00000000, 1, 0)) {
  1129  0040  3000               	movlw	0
  1130  0041  0020               	movlb	0	; select bank0
  1131  0042  00B2               	movwf	SD_Card_RWInit@addr+3
  1132  0043  3000               	movlw	0
  1133  0044  00B1               	movwf	SD_Card_RWInit@addr+2
  1134  0045  3000               	movlw	0
  1135  0046  00B0               	movwf	SD_Card_RWInit@addr+1
  1136  0047  3000               	movlw	0
  1137  0048  00AF               	movwf	SD_Card_RWInit@addr
  1138  0049  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1139  004A  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1140  004B  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1141  004C  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1142  004F  3A00               	xorlw	0
  1143  0050  1903               	skipnz
  1144  0051  2853               	goto	u1341
  1145  0052  2854               	goto	u1340
  1146  0053                     u1341:	
  1147  0053  286C               	goto	l49
  1148  0054                     u1340:	
  1149  0054                     l1948:	
  1150                           
  1151                           ;main.c: 53: for(uint16_t i=0; i<512; i++) {
  1152  0054  0020               	movlb	0	; select bank0
  1153  0055  01BF               	clrf	loop@i
  1154  0056  01C0               	clrf	loop@i+1
  1155  0057                     l1954:	
  1156                           
  1157                           ;main.c: 54: SD_SPI_Write(0xE0);
  1158  0057  30E0               	movlw	224
  1159  0058  3186  26D9  3180   	fcall	_SD_SPI_Write
  1160  005B                     l1956:	
  1161  005B  3001               	movlw	1
  1162  005C  0020               	movlb	0	; select bank0
  1163  005D  07BF               	addwf	loop@i,f
  1164  005E  3000               	movlw	0
  1165  005F  3DC0               	addwfc	loop@i+1,f
  1166  0060                     l1958:	
  1167  0060  3002               	movlw	2
  1168  0061  0240               	subwf	loop@i+1,w
  1169  0062  3000               	movlw	0
  1170  0063  1903               	skipnz
  1171  0064  023F               	subwf	loop@i,w
  1172  0065  1C03               	skipc
  1173  0066  2868               	goto	u1351
  1174  0067  2869               	goto	u1350
  1175  0068                     u1351:	
  1176  0068  2857               	goto	l1954
  1177  0069                     u1350:	
  1178  0069                     l1960:	
  1179                           
  1180                           ;main.c: 55: };main.c: 56: SD_Card_RWEnd();
  1181  0069  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1182  006C                     l49:	
  1183                           
  1184                           ;main.c: 57: };main.c: 59: if(SD_Card_RWInit(0x00000200, 1, 0)) {
  1185  006C  3000               	movlw	0
  1186  006D  0020               	movlb	0	; select bank0
  1187  006E  00B2               	movwf	SD_Card_RWInit@addr+3
  1188  006F  3000               	movlw	0
  1189  0070  00B1               	movwf	SD_Card_RWInit@addr+2
  1190  0071  3002               	movlw	2
  1191  0072  00B0               	movwf	SD_Card_RWInit@addr+1
  1192  0073  3000               	movlw	0
  1193  0074  00AF               	movwf	SD_Card_RWInit@addr
  1194  0075  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1195  0076  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1196  0077  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1197  0078  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1198  007B  3A00               	xorlw	0
  1199  007C  1903               	skipnz
  1200  007D  287F               	goto	u1361
  1201  007E  2880               	goto	u1360
  1202  007F                     u1361:	
  1203  007F  2898               	goto	l52
  1204  0080                     u1360:	
  1205  0080                     l1962:	
  1206                           
  1207                           ;main.c: 60: for(uint16_t i=0; i<512; i++) {
  1208  0080  0020               	movlb	0	; select bank0
  1209  0081  01C1               	clrf	loop@i_310
  1210  0082  01C2               	clrf	loop@i_310+1
  1211  0083                     l1968:	
  1212                           
  1213                           ;main.c: 61: SD_SPI_Write(0xE1);
  1214  0083  30E1               	movlw	225
  1215  0084  3186  26D9  3180   	fcall	_SD_SPI_Write
  1216  0087                     l1970:	
  1217  0087  3001               	movlw	1
  1218  0088  0020               	movlb	0	; select bank0
  1219  0089  07C1               	addwf	loop@i_310,f
  1220  008A  3000               	movlw	0
  1221  008B  3DC2               	addwfc	loop@i_310+1,f
  1222  008C                     l1972:	
  1223  008C  3002               	movlw	2
  1224  008D  0242               	subwf	loop@i_310+1,w
  1225  008E  3000               	movlw	0
  1226  008F  1903               	skipnz
  1227  0090  0241               	subwf	loop@i_310,w
  1228  0091  1C03               	skipc
  1229  0092  2894               	goto	u1371
  1230  0093  2895               	goto	u1370
  1231  0094                     u1371:	
  1232  0094  2883               	goto	l1968
  1233  0095                     u1370:	
  1234  0095                     l1974:	
  1235                           
  1236                           ;main.c: 62: };main.c: 63: SD_Card_RWEnd();
  1237  0095  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1238  0098                     l52:	
  1239                           
  1240                           ;main.c: 64: };main.c: 71: if(SD_Card_RWInit(0x00000600, 1, 0)) {
  1241  0098  3000               	movlw	0
  1242  0099  0020               	movlb	0	; select bank0
  1243  009A  00B2               	movwf	SD_Card_RWInit@addr+3
  1244  009B  3000               	movlw	0
  1245  009C  00B1               	movwf	SD_Card_RWInit@addr+2
  1246  009D  3006               	movlw	6
  1247  009E  00B0               	movwf	SD_Card_RWInit@addr+1
  1248  009F  3000               	movlw	0
  1249  00A0  00AF               	movwf	SD_Card_RWInit@addr
  1250  00A1  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1251  00A2  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1252  00A3  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1253  00A4  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1254  00A7  3A00               	xorlw	0
  1255  00A8  1903               	skipnz
  1256  00A9  28AB               	goto	u1381
  1257  00AA  28AC               	goto	u1380
  1258  00AB                     u1381:	
  1259  00AB  28FF               	goto	l55
  1260  00AC                     u1380:	
  1261  00AC                     l1976:	
  1262                           
  1263                           ;main.c: 72: uint32_t cardSize = SD_Card_GetSize();
  1264  00AC  3182  22DE  3180   	fcall	_SD_Card_GetSize
  1265  00AF  0873               	movf	?_SD_Card_GetSize+3,w
  1266  00B0  0020               	movlb	0	; select bank0
  1267  00B1  00BE               	movwf	loop@cardSize+3
  1268  00B2  0872               	movf	?_SD_Card_GetSize+2,w
  1269  00B3  00BD               	movwf	loop@cardSize+2
  1270  00B4  0871               	movf	?_SD_Card_GetSize+1,w
  1271  00B5  00BC               	movwf	loop@cardSize+1
  1272  00B6  0870               	movf	?_SD_Card_GetSize,w
  1273  00B7  00BB               	movwf	loop@cardSize
  1274  00B8                     l1978:	
  1275                           
  1276                           ;main.c: 73: uint8_t *p = (uint8_t *)&cardSize;
  1277  00B8  303B               	movlw	(low (loop@cardSize| 0))& (0+255)
  1278  00B9  00B5               	movwf	??_loop
  1279  00BA  0835               	movf	??_loop,w
  1280  00BB  00D5               	movwf	loop@p
  1281  00BC                     l1980:	
  1282                           
  1283                           ;main.c: 74: for(uint16_t i=512; i>0; i-=16) {
  1284  00BC  3000               	movlw	0
  1285  00BD  00C3               	movwf	loop@i_313
  1286  00BE  3002               	movlw	2
  1287  00BF  00C4               	movwf	loop@i_313+1
  1288  00C0                     l1986:	
  1289                           
  1290                           ;main.c: 75: SD_SPI_Write(*(p + 3));
  1291  00C0  0855               	movf	loop@p,w
  1292  00C1  3E03               	addlw	3
  1293  00C2  0086               	movwf	6
  1294  00C3  0187               	clrf	7
  1295  00C4  0801               	movf	1,w
  1296  00C5  3186  26D9  3180   	fcall	_SD_SPI_Write
  1297                           
  1298                           ;main.c: 76: SD_SPI_Write(*(p + 2));
  1299  00C8  0020               	movlb	0	; select bank0
  1300  00C9  0855               	movf	loop@p,w
  1301  00CA  3E02               	addlw	2
  1302  00CB  0086               	movwf	6
  1303  00CC  0187               	clrf	7
  1304  00CD  0801               	movf	1,w
  1305  00CE  3186  26D9  3180   	fcall	_SD_SPI_Write
  1306                           
  1307                           ;main.c: 77: SD_SPI_Write(*(p + 1));
  1308  00D1  0020               	movlb	0	; select bank0
  1309  00D2  0A55               	incf	loop@p,w
  1310  00D3  0086               	movwf	6
  1311  00D4  0187               	clrf	7
  1312  00D5  0801               	movf	1,w
  1313  00D6  3186  26D9  3180   	fcall	_SD_SPI_Write
  1314                           
  1315                           ;main.c: 78: SD_SPI_Write(*p);
  1316  00D9  0020               	movlb	0	; select bank0
  1317  00DA  0855               	movf	loop@p,w
  1318  00DB  0086               	movwf	6
  1319  00DC  0187               	clrf	7
  1320  00DD  0801               	movf	1,w
  1321  00DE  3186  26D9  3180   	fcall	_SD_SPI_Write
  1322  00E1                     l1988:	
  1323                           
  1324                           ;main.c: 79: for(uint8_t j=0; j!=12; j++) {
  1325  00E1  0020               	movlb	0	; select bank0
  1326  00E2  01CF               	clrf	loop@j
  1327  00E3                     l1994:	
  1328                           
  1329                           ;main.c: 80: SD_SPI_Write(0x00);
  1330  00E3  3000               	movlw	0
  1331  00E4  3186  26D9  3180   	fcall	_SD_SPI_Write
  1332  00E7                     l1996:	
  1333  00E7  3001               	movlw	1
  1334  00E8  0020               	movlb	0	; select bank0
  1335  00E9  00B5               	movwf	??_loop
  1336  00EA  0835               	movf	??_loop,w
  1337  00EB  07CF               	addwf	loop@j,f
  1338  00EC                     l1998:	
  1339  00EC  300C               	movlw	12
  1340  00ED  064F               	xorwf	loop@j,w
  1341  00EE  1D03               	btfss	3,2
  1342  00EF  28F1               	goto	u1391
  1343  00F0  28F2               	goto	u1390
  1344  00F1                     u1391:	
  1345  00F1  28E3               	goto	l1994
  1346  00F2                     u1390:	
  1347  00F2                     l2000:	
  1348  00F2  3010               	movlw	16
  1349  00F3  02C3               	subwf	loop@i_313,f
  1350  00F4  3000               	movlw	0
  1351  00F5  3BC4               	subwfb	loop@i_313+1,f
  1352  00F6                     l2002:	
  1353  00F6  0843               	movf	loop@i_313,w
  1354  00F7  0444               	iorwf	loop@i_313+1,w
  1355  00F8  1D03               	btfss	3,2
  1356  00F9  28FB               	goto	u1401
  1357  00FA  28FC               	goto	u1400
  1358  00FB                     u1401:	
  1359  00FB  28C0               	goto	l1986
  1360  00FC                     u1400:	
  1361  00FC                     l2004:	
  1362                           
  1363                           ;main.c: 81: };main.c: 82: };main.c: 83: SD_Card_RWEnd();
  1364  00FC  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1365  00FF                     l55:	
  1366                           
  1367                           ;main.c: 84: };main.c: 91: if(SD_Card_RWInit(0x00000800, 1, 0)) {
  1368  00FF  3000               	movlw	0
  1369  0100  0020               	movlb	0	; select bank0
  1370  0101  00B2               	movwf	SD_Card_RWInit@addr+3
  1371  0102  3000               	movlw	0
  1372  0103  00B1               	movwf	SD_Card_RWInit@addr+2
  1373  0104  3008               	movlw	8
  1374  0105  00B0               	movwf	SD_Card_RWInit@addr+1
  1375  0106  3000               	movlw	0
  1376  0107  00AF               	movwf	SD_Card_RWInit@addr
  1377  0108  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1378  0109  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1379  010A  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1380  010B  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1381  010E  3A00               	xorlw	0
  1382  010F  1903               	skipnz
  1383  0110  2912               	goto	u1411
  1384  0111  2913               	goto	u1410
  1385  0112                     u1411:	
  1386  0112  2933               	goto	l2024
  1387  0113                     u1410:	
  1388  0113                     l2006:	
  1389                           
  1390                           ;main.c: 92: SD_SPI_Write(0x09);
  1391  0113  3009               	movlw	9
  1392  0114  3186  26D9  3180   	fcall	_SD_SPI_Write
  1393  0117                     l2008:	
  1394                           
  1395                           ;main.c: 93: for(uint16_t i=0; i<(512 - 2); i++) {
  1396  0117  0020               	movlb	0	; select bank0
  1397  0118  01C5               	clrf	loop@i_315
  1398  0119  01C6               	clrf	loop@i_315+1
  1399  011A                     l2014:	
  1400                           
  1401                           ;main.c: 94: SD_SPI_Write(0x01);
  1402  011A  3001               	movlw	1
  1403  011B  3186  26D9  3180   	fcall	_SD_SPI_Write
  1404  011E                     l2016:	
  1405  011E  3001               	movlw	1
  1406  011F  0020               	movlb	0	; select bank0
  1407  0120  07C5               	addwf	loop@i_315,f
  1408  0121  3000               	movlw	0
  1409  0122  3DC6               	addwfc	loop@i_315+1,f
  1410  0123                     l2018:	
  1411  0123  3001               	movlw	1
  1412  0124  0246               	subwf	loop@i_315+1,w
  1413  0125  30FE               	movlw	254
  1414  0126  1903               	skipnz
  1415  0127  0245               	subwf	loop@i_315,w
  1416  0128  1C03               	skipc
  1417  0129  292B               	goto	u1421
  1418  012A  292C               	goto	u1420
  1419  012B                     u1421:	
  1420  012B  291A               	goto	l2014
  1421  012C                     u1420:	
  1422  012C                     l2020:	
  1423                           
  1424                           ;main.c: 95: };main.c: 96: SD_SPI_Write(0x02);
  1425  012C  3002               	movlw	2
  1426  012D  3186  26D9  3180   	fcall	_SD_SPI_Write
  1427  0130                     l2022:	
  1428                           
  1429                           ;main.c: 97: SD_Card_RWEnd();
  1430  0130  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1431  0133                     l2024:	
  1432                           
  1433                           ;main.c: 98: };main.c: 100: uint16_t sum = 0;
  1434  0133  0020               	movlb	0	; select bank0
  1435  0134  01B7               	clrf	loop@sum
  1436  0135  01B8               	clrf	loop@sum+1
  1437  0136                     l2026:	
  1438                           
  1439                           ;main.c: 101: if(SD_Card_RWInit(0x00000800, 0, 0)) {
  1440  0136  3000               	movlw	0
  1441  0137  00B2               	movwf	SD_Card_RWInit@addr+3
  1442  0138  3000               	movlw	0
  1443  0139  00B1               	movwf	SD_Card_RWInit@addr+2
  1444  013A  3008               	movlw	8
  1445  013B  00B0               	movwf	SD_Card_RWInit@addr+1
  1446  013C  3000               	movlw	0
  1447  013D  00AF               	movwf	SD_Card_RWInit@addr
  1448  013E  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1449  013F  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1450  0140  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1451  0143  3A00               	xorlw	0
  1452  0144  1903               	skipnz
  1453  0145  2947               	goto	u1431
  1454  0146  2948               	goto	u1430
  1455  0147                     u1431:	
  1456  0147  2967               	goto	l2042
  1457  0148                     u1430:	
  1458  0148                     l2028:	
  1459                           
  1460                           ;main.c: 102: for(uint16_t i=0; i<512; i++) {
  1461  0148  0020               	movlb	0	; select bank0
  1462  0149  01C7               	clrf	loop@i_317
  1463  014A  01C8               	clrf	loop@i_317+1
  1464  014B                     l2030:	
  1465  014B  3002               	movlw	2
  1466  014C  0248               	subwf	loop@i_317+1,w
  1467  014D  3000               	movlw	0
  1468  014E  1903               	skipnz
  1469  014F  0247               	subwf	loop@i_317,w
  1470  0150  1C03               	skipc
  1471  0151  2953               	goto	u1441
  1472  0152  2954               	goto	u1440
  1473  0153                     u1441:	
  1474  0153  2955               	goto	l2034
  1475  0154                     u1440:	
  1476  0154  2964               	goto	l2040
  1477  0155                     l2034:	
  1478                           
  1479                           ;main.c: 103: sum += SD_SPI_Read();
  1480  0155  3186  26CE  3180   	fcall	_SD_SPI_Read
  1481  0158  0020               	movlb	0	; select bank0
  1482  0159  00B5               	movwf	??_loop
  1483  015A  01B6               	clrf	??_loop+1
  1484  015B  0835               	movf	??_loop,w
  1485  015C  07B7               	addwf	loop@sum,f
  1486  015D  0836               	movf	??_loop+1,w
  1487  015E  3DB8               	addwfc	loop@sum+1,f
  1488  015F                     l2036:	
  1489  015F  3001               	movlw	1
  1490  0160  07C7               	addwf	loop@i_317,f
  1491  0161  3000               	movlw	0
  1492  0162  3DC8               	addwfc	loop@i_317+1,f
  1493  0163  294B               	goto	l2030
  1494  0164                     l2040:	
  1495                           
  1496                           ;main.c: 104: };main.c: 105: SD_Card_RWEnd();
  1497  0164  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1498  0167                     l2042:	
  1499                           
  1500                           ;main.c: 106: };main.c: 107: if(sum == 521) {
  1501  0167  3009               	movlw	9
  1502  0168  0020               	movlb	0	; select bank0
  1503  0169  0637               	xorwf	loop@sum,w
  1504  016A  3002               	movlw	2
  1505  016B  1903               	skipnz
  1506  016C  0638               	xorwf	loop@sum+1,w
  1507  016D  1D03               	btfss	3,2
  1508  016E  2970               	goto	u1451
  1509  016F  2971               	goto	u1450
  1510  0170                     u1451:	
  1511  0170  29A4               	goto	l2060
  1512  0171                     u1450:	
  1513  0171                     l2044:	
  1514                           
  1515                           ;main.c: 108: for(uint8_t i=0; i<10; i++) {
  1516  0171  01D0               	clrf	loop@i_318
  1517  0172                     l2046:	
  1518  0172  300A               	movlw	10
  1519  0173  0250               	subwf	loop@i_318,w
  1520  0174  1C03               	skipc
  1521  0175  2977               	goto	u1461
  1522  0176  2978               	goto	u1460
  1523  0177                     u1461:	
  1524  0177  2979               	goto	l2050
  1525  0178                     u1460:	
  1526  0178  2996               	goto	l68
  1527  0179                     l2050:	
  1528                           
  1529                           ;main.c: 109: PORTAbits.RA5 = !PORTAbits.RA5;
  1530  0179  1003               	clrc
  1531  017A  1E8C               	btfss	12,5	;volatile
  1532  017B  1403               	setc
  1533  017C  1803               	btfsc	3,0
  1534  017D  297F               	goto	u1471
  1535  017E  2982               	goto	u1470
  1536  017F                     u1471:	
  1537  017F  0020               	movlb	0	; select bank0
  1538  0180  168C               	bsf	12,5	;volatile
  1539  0181  2984               	goto	u1484
  1540  0182                     u1470:	
  1541  0182  0020               	movlb	0	; select bank0
  1542  0183  128C               	bcf	12,5	;volatile
  1543  0184                     u1484:	
  1544  0184                     l2052:	
  1545                           
  1546                           ;main.c: 110: _delay((unsigned long)((50)*(32000000/4000.0)));
  1547  0184  3003               	movlw	3
  1548  0185  0020               	movlb	0	; select bank0
  1549  0186  00B6               	movwf	??_loop+1
  1550  0187  3008               	movlw	8
  1551  0188  00B5               	movwf	??_loop
  1552  0189  3077               	movlw	119
  1553  018A                     u1707:	
  1554  018A  0B89               	decfsz	9,f
  1555  018B  298A               	goto	u1707
  1556  018C  0BB5               	decfsz	??_loop,f
  1557  018D  298A               	goto	u1707
  1558  018E  0BB6               	decfsz	??_loop+1,f
  1559  018F  298A               	goto	u1707
  1560  0190                     l2054:	
  1561  0190  3001               	movlw	1
  1562  0191  0020               	movlb	0	; select bank0
  1563  0192  00B5               	movwf	??_loop
  1564  0193  0835               	movf	??_loop,w
  1565  0194  07D0               	addwf	loop@i_318,f
  1566  0195  2972               	goto	l2046
  1567  0196                     l68:	
  1568                           
  1569                           ;main.c: 111: };main.c: 112: PORTAbits.RA5 = 0;
  1570  0196  128C               	bcf	12,5	;volatile
  1571  0197                     l2058:	
  1572                           
  1573                           ;main.c: 113: _delay((unsigned long)((500)*(32000000/4000.0)));
  1574  0197  3015               	movlw	21
  1575  0198  0020               	movlb	0	; select bank0
  1576  0199  00B6               	movwf	??_loop+1
  1577  019A  304B               	movlw	75
  1578  019B  00B5               	movwf	??_loop
  1579  019C  30BE               	movlw	190
  1580  019D                     u1717:	
  1581  019D  0B89               	decfsz	9,f
  1582  019E  299D               	goto	u1717
  1583  019F  0BB5               	decfsz	??_loop,f
  1584  01A0  299D               	goto	u1717
  1585  01A1  0BB6               	decfsz	??_loop+1,f
  1586  01A2  299D               	goto	u1717
  1587  01A3  0000               	nop
  1588  01A4                     l2060:	
  1589                           
  1590                           ;main.c: 114: };main.c: 121: if(SD_Card_RWInit(0x00000A00, 1, 1)) {
  1591  01A4  3000               	movlw	0
  1592  01A5  0020               	movlb	0	; select bank0
  1593  01A6  00B2               	movwf	SD_Card_RWInit@addr+3
  1594  01A7  3000               	movlw	0
  1595  01A8  00B1               	movwf	SD_Card_RWInit@addr+2
  1596  01A9  300A               	movlw	10
  1597  01AA  00B0               	movwf	SD_Card_RWInit@addr+1
  1598  01AB  3000               	movlw	0
  1599  01AC  00AF               	movwf	SD_Card_RWInit@addr
  1600  01AD  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1601  01AE  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1602  01AF  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1603  01B0  0AB4               	incf	SD_Card_RWInit@singleOrMultiBlock,f
  1604  01B1  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1605  01B4  3A00               	xorlw	0
  1606  01B5  1903               	skipnz
  1607  01B6  29B8               	goto	u1491
  1608  01B7  29B9               	goto	u1490
  1609  01B8                     u1491:	
  1610  01B8  29F0               	goto	l69
  1611  01B9                     u1490:	
  1612  01B9                     l2062:	
  1613                           
  1614                           ;main.c: 122: for(uint8_t j=0x10; j<0x15; j++) {
  1615  01B9  3010               	movlw	16
  1616  01BA  0020               	movlb	0	; select bank0
  1617  01BB  00B5               	movwf	??_loop
  1618  01BC  0835               	movf	??_loop,w
  1619  01BD  00D3               	movwf	loop@j_319
  1620  01BE  3015               	movlw	21
  1621  01BF  0253               	subwf	loop@j_319,w
  1622  01C0  1C03               	skipc
  1623  01C1  29C3               	goto	u1501
  1624  01C2  29C4               	goto	u1500
  1625  01C3                     u1501:	
  1626  01C3  29C5               	goto	l2066
  1627  01C4                     u1500:	
  1628  01C4  29ED               	goto	l2086
  1629  01C5                     l2066:	
  1630                           
  1631                           ;main.c: 123: SD_Card_RWStartMulti();
  1632  01C5  3186  2680  3180   	fcall	_SD_Card_RWStartMulti
  1633  01C8                     l2068:	
  1634                           
  1635                           ;main.c: 124: for(uint16_t i=0; i<512; i++) {
  1636  01C8  0020               	movlb	0	; select bank0
  1637  01C9  01C9               	clrf	loop@i_320
  1638  01CA  01CA               	clrf	loop@i_320+1
  1639  01CB                     l2070:	
  1640  01CB  3002               	movlw	2
  1641  01CC  024A               	subwf	loop@i_320+1,w
  1642  01CD  3000               	movlw	0
  1643  01CE  1903               	skipnz
  1644  01CF  0249               	subwf	loop@i_320,w
  1645  01D0  1C03               	skipc
  1646  01D1  29D3               	goto	u1511
  1647  01D2  29D4               	goto	u1510
  1648  01D3                     u1511:	
  1649  01D3  29D5               	goto	l2074
  1650  01D4                     u1510:	
  1651  01D4  29DF               	goto	l2080
  1652  01D5                     l2074:	
  1653                           
  1654                           ;main.c: 125: SD_SPI_Write(j);
  1655  01D5  0853               	movf	loop@j_319,w
  1656  01D6  3186  26D9  3180   	fcall	_SD_SPI_Write
  1657  01D9                     l2076:	
  1658  01D9  3001               	movlw	1
  1659  01DA  0020               	movlb	0	; select bank0
  1660  01DB  07C9               	addwf	loop@i_320,f
  1661  01DC  3000               	movlw	0
  1662  01DD  3DCA               	addwfc	loop@i_320+1,f
  1663  01DE  29CB               	goto	l2070
  1664  01DF                     l2080:	
  1665                           
  1666                           ;main.c: 126: };main.c: 127: SD_Card_RWStopMulti();
  1667  01DF  3186  2691  3180   	fcall	_SD_Card_RWStopMulti
  1668  01E2                     l2082:	
  1669  01E2  3001               	movlw	1
  1670  01E3  0020               	movlb	0	; select bank0
  1671  01E4  00B5               	movwf	??_loop
  1672  01E5  0835               	movf	??_loop,w
  1673  01E6  07D3               	addwf	loop@j_319,f
  1674  01E7                     l2084:	
  1675  01E7  3015               	movlw	21
  1676  01E8  0253               	subwf	loop@j_319,w
  1677  01E9  1C03               	skipc
  1678  01EA  29EC               	goto	u1521
  1679  01EB  29ED               	goto	u1520
  1680  01EC                     u1521:	
  1681  01EC  29C5               	goto	l2066
  1682  01ED                     u1520:	
  1683  01ED                     l2086:	
  1684                           
  1685                           ;main.c: 128: };main.c: 129: SD_Card_RWEnd();
  1686  01ED  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1687  01F0                     l69:	
  1688                           
  1689                           ;main.c: 130: };main.c: 142: if(SD_Card_RWInit(0x0000B000, 1, 1)) {
  1690  01F0  3000               	movlw	0
  1691  01F1  0020               	movlb	0	; select bank0
  1692  01F2  00B2               	movwf	SD_Card_RWInit@addr+3
  1693  01F3  3000               	movlw	0
  1694  01F4  00B1               	movwf	SD_Card_RWInit@addr+2
  1695  01F5  30B0               	movlw	176
  1696  01F6  00B0               	movwf	SD_Card_RWInit@addr+1
  1697  01F7  3000               	movlw	0
  1698  01F8  00AF               	movwf	SD_Card_RWInit@addr
  1699  01F9  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1700  01FA  0AB3               	incf	SD_Card_RWInit@readOrWrite,f
  1701  01FB  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1702  01FC  0AB4               	incf	SD_Card_RWInit@singleOrMultiBlock,f
  1703  01FD  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1704  0200  3A00               	xorlw	0
  1705  0201  1903               	skipnz
  1706  0202  2A04               	goto	u1531
  1707  0203  2A05               	goto	u1530
  1708  0204                     u1531:	
  1709  0204  2A3D               	goto	l2116
  1710  0205                     u1530:	
  1711  0205                     l2088:	
  1712                           
  1713                           ;main.c: 143: for(uint8_t j=1; j<10; j++) {
  1714  0205  0020               	movlb	0	; select bank0
  1715  0206  01D4               	clrf	loop@j_321
  1716  0207  0AD4               	incf	loop@j_321,f
  1717  0208                     l2090:	
  1718  0208  300A               	movlw	10
  1719  0209  0254               	subwf	loop@j_321,w
  1720  020A  1C03               	skipc
  1721  020B  2A0D               	goto	u1541
  1722  020C  2A0E               	goto	u1540
  1723  020D                     u1541:	
  1724  020D  2A0F               	goto	l2094
  1725  020E                     u1540:	
  1726  020E  2A3A               	goto	l2114
  1727  020F                     l2094:	
  1728                           
  1729                           ;main.c: 144: SD_Card_RWStartMulti();
  1730  020F  3186  2680  3180   	fcall	_SD_Card_RWStartMulti
  1731                           
  1732                           ;main.c: 145: SD_SPI_Write(0x04);
  1733  0212  3004               	movlw	4
  1734  0213  3186  26D9  3180   	fcall	_SD_SPI_Write
  1735  0216                     l2096:	
  1736                           
  1737                           ;main.c: 146: for(uint16_t i=0; i<(512 - 2); i++) {
  1738  0216  0020               	movlb	0	; select bank0
  1739  0217  01CB               	clrf	loop@i_322
  1740  0218  01CC               	clrf	loop@i_322+1
  1741  0219                     l2098:	
  1742  0219  3001               	movlw	1
  1743  021A  024C               	subwf	loop@i_322+1,w
  1744  021B  30FE               	movlw	254
  1745  021C  1903               	skipnz
  1746  021D  024B               	subwf	loop@i_322,w
  1747  021E  1C03               	skipc
  1748  021F  2A21               	goto	u1551
  1749  0220  2A22               	goto	u1550
  1750  0221                     u1551:	
  1751  0221  2A23               	goto	l2102
  1752  0222                     u1550:	
  1753  0222  2A2D               	goto	l2108
  1754  0223                     l2102:	
  1755                           
  1756                           ;main.c: 147: SD_SPI_Write(j);
  1757  0223  0854               	movf	loop@j_321,w
  1758  0224  3186  26D9  3180   	fcall	_SD_SPI_Write
  1759  0227                     l2104:	
  1760  0227  3001               	movlw	1
  1761  0228  0020               	movlb	0	; select bank0
  1762  0229  07CB               	addwf	loop@i_322,f
  1763  022A  3000               	movlw	0
  1764  022B  3DCC               	addwfc	loop@i_322+1,f
  1765  022C  2A19               	goto	l2098
  1766  022D                     l2108:	
  1767                           
  1768                           ;main.c: 148: };main.c: 149: SD_SPI_Write(0x07);
  1769  022D  3007               	movlw	7
  1770  022E  3186  26D9  3180   	fcall	_SD_SPI_Write
  1771                           
  1772                           ;main.c: 150: SD_Card_RWStopMulti();
  1773  0231  3186  2691  3180   	fcall	_SD_Card_RWStopMulti
  1774  0234                     l2110:	
  1775  0234  3001               	movlw	1
  1776  0235  0020               	movlb	0	; select bank0
  1777  0236  00B5               	movwf	??_loop
  1778  0237  0835               	movf	??_loop,w
  1779  0238  07D4               	addwf	loop@j_321,f
  1780  0239  2A08               	goto	l2090
  1781  023A                     l2114:	
  1782                           
  1783                           ;main.c: 151: };main.c: 152: SD_Card_RWEnd();
  1784  023A  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1785  023D                     l2116:	
  1786                           
  1787                           ;main.c: 153: };main.c: 155: uint16_t sum2 = 0;
  1788  023D  0020               	movlb	0	; select bank0
  1789  023E  01B9               	clrf	loop@sum2
  1790  023F  01BA               	clrf	loop@sum2+1
  1791  0240                     l2118:	
  1792                           
  1793                           ;main.c: 156: if(SD_Card_RWInit(0x0000B200, 0, 1)) {
  1794  0240  3000               	movlw	0
  1795  0241  00B2               	movwf	SD_Card_RWInit@addr+3
  1796  0242  3000               	movlw	0
  1797  0243  00B1               	movwf	SD_Card_RWInit@addr+2
  1798  0244  30B2               	movlw	178
  1799  0245  00B0               	movwf	SD_Card_RWInit@addr+1
  1800  0246  3000               	movlw	0
  1801  0247  00AF               	movwf	SD_Card_RWInit@addr
  1802  0248  01B3               	clrf	SD_Card_RWInit@readOrWrite
  1803  0249  01B4               	clrf	SD_Card_RWInit@singleOrMultiBlock
  1804  024A  0AB4               	incf	SD_Card_RWInit@singleOrMultiBlock,f
  1805  024B  3184  24F8  3180   	fcall	_SD_Card_RWInit
  1806  024E  3A00               	xorlw	0
  1807  024F  1903               	skipnz
  1808  0250  2A52               	goto	u1561
  1809  0251  2A53               	goto	u1560
  1810  0252                     u1561:	
  1811  0252  2A87               	goto	l2148
  1812  0253                     u1560:	
  1813  0253                     l2120:	
  1814                           
  1815                           ;main.c: 157: for(uint8_t j=0; j<2; j++) {
  1816  0253  0020               	movlb	0	; select bank0
  1817  0254  01D1               	clrf	loop@j_324
  1818  0255                     l2122:	
  1819  0255  3002               	movlw	2
  1820  0256  0251               	subwf	loop@j_324,w
  1821  0257  1C03               	skipc
  1822  0258  2A5A               	goto	u1571
  1823  0259  2A5B               	goto	u1570
  1824  025A                     u1571:	
  1825  025A  2A5C               	goto	l2126
  1826  025B                     u1570:	
  1827  025B  2A84               	goto	l2146
  1828  025C                     l2126:	
  1829                           
  1830                           ;main.c: 158: SD_Card_RWStartMulti();
  1831  025C  3186  2680  3180   	fcall	_SD_Card_RWStartMulti
  1832  025F                     l2128:	
  1833                           
  1834                           ;main.c: 159: for(uint16_t i=0; i<512; i++) {
  1835  025F  0020               	movlb	0	; select bank0
  1836  0260  01CD               	clrf	loop@i_325
  1837  0261  01CE               	clrf	loop@i_325+1
  1838  0262                     l2130:	
  1839  0262  3002               	movlw	2
  1840  0263  024E               	subwf	loop@i_325+1,w
  1841  0264  3000               	movlw	0
  1842  0265  1903               	skipnz
  1843  0266  024D               	subwf	loop@i_325,w
  1844  0267  1C03               	skipc
  1845  0268  2A6A               	goto	u1581
  1846  0269  2A6B               	goto	u1580
  1847  026A                     u1581:	
  1848  026A  2A6C               	goto	l2134
  1849  026B                     u1580:	
  1850  026B  2A7B               	goto	l2140
  1851  026C                     l2134:	
  1852                           
  1853                           ;main.c: 160: sum2 += SD_SPI_Read();
  1854  026C  3186  26CE  3180   	fcall	_SD_SPI_Read
  1855  026F  0020               	movlb	0	; select bank0
  1856  0270  00B5               	movwf	??_loop
  1857  0271  01B6               	clrf	??_loop+1
  1858  0272  0835               	movf	??_loop,w
  1859  0273  07B9               	addwf	loop@sum2,f
  1860  0274  0836               	movf	??_loop+1,w
  1861  0275  3DBA               	addwfc	loop@sum2+1,f
  1862  0276                     l2136:	
  1863  0276  3001               	movlw	1
  1864  0277  07CD               	addwf	loop@i_325,f
  1865  0278  3000               	movlw	0
  1866  0279  3DCE               	addwfc	loop@i_325+1,f
  1867  027A  2A62               	goto	l2130
  1868  027B                     l2140:	
  1869                           
  1870                           ;main.c: 161: };main.c: 162: SD_Card_RWStopMulti();
  1871  027B  3186  2691  3180   	fcall	_SD_Card_RWStopMulti
  1872  027E                     l2142:	
  1873  027E  3001               	movlw	1
  1874  027F  0020               	movlb	0	; select bank0
  1875  0280  00B5               	movwf	??_loop
  1876  0281  0835               	movf	??_loop,w
  1877  0282  07D1               	addwf	loop@j_324,f
  1878  0283  2A55               	goto	l2122
  1879  0284                     l2146:	
  1880                           
  1881                           ;main.c: 163: };main.c: 164: SD_Card_RWEnd();
  1882  0284  3185  25E1  3180   	fcall	_SD_Card_RWEnd
  1883  0287                     l2148:	
  1884                           
  1885                           ;main.c: 165: };main.c: 166: if(sum2 == 2572) {
  1886  0287  300C               	movlw	12
  1887  0288  0020               	movlb	0	; select bank0
  1888  0289  0639               	xorwf	loop@sum2,w
  1889  028A  300A               	movlw	10
  1890  028B  1903               	skipnz
  1891  028C  063A               	xorwf	loop@sum2+1,w
  1892  028D  1D03               	btfss	3,2
  1893  028E  2A90               	goto	u1591
  1894  028F  2A91               	goto	u1590
  1895  0290                     u1591:	
  1896  0290  2AC4               	goto	l2166
  1897  0291                     u1590:	
  1898  0291                     l2150:	
  1899                           
  1900                           ;main.c: 167: for(uint8_t i=0; i<10; i++) {
  1901  0291  01D2               	clrf	loop@i_326
  1902  0292                     l2152:	
  1903  0292  300A               	movlw	10
  1904  0293  0252               	subwf	loop@i_326,w
  1905  0294  1C03               	skipc
  1906  0295  2A97               	goto	u1601
  1907  0296  2A98               	goto	u1600
  1908  0297                     u1601:	
  1909  0297  2A99               	goto	l2156
  1910  0298                     u1600:	
  1911  0298  2AB6               	goto	l86
  1912  0299                     l2156:	
  1913                           
  1914                           ;main.c: 168: PORTAbits.RA5 = !PORTAbits.RA5;
  1915  0299  1003               	clrc
  1916  029A  1E8C               	btfss	12,5	;volatile
  1917  029B  1403               	setc
  1918  029C  1803               	btfsc	3,0
  1919  029D  2A9F               	goto	u1611
  1920  029E  2AA2               	goto	u1610
  1921  029F                     u1611:	
  1922  029F  0020               	movlb	0	; select bank0
  1923  02A0  168C               	bsf	12,5	;volatile
  1924  02A1  2AA4               	goto	u1624
  1925  02A2                     u1610:	
  1926  02A2  0020               	movlb	0	; select bank0
  1927  02A3  128C               	bcf	12,5	;volatile
  1928  02A4                     u1624:	
  1929  02A4                     l2158:	
  1930                           
  1931                           ;main.c: 169: _delay((unsigned long)((100)*(32000000/4000.0)));
  1932  02A4  3005               	movlw	5
  1933  02A5  0020               	movlb	0	; select bank0
  1934  02A6  00B6               	movwf	??_loop+1
  1935  02A7  300F               	movlw	15
  1936  02A8  00B5               	movwf	??_loop
  1937  02A9  30F1               	movlw	241
  1938  02AA                     u1727:	
  1939  02AA  0B89               	decfsz	9,f
  1940  02AB  2AAA               	goto	u1727
  1941  02AC  0BB5               	decfsz	??_loop,f
  1942  02AD  2AAA               	goto	u1727
  1943  02AE  0BB6               	decfsz	??_loop+1,f
  1944  02AF  2AAA               	goto	u1727
  1945  02B0                     l2160:	
  1946  02B0  3001               	movlw	1
  1947  02B1  0020               	movlb	0	; select bank0
  1948  02B2  00B5               	movwf	??_loop
  1949  02B3  0835               	movf	??_loop,w
  1950  02B4  07D2               	addwf	loop@i_326,f
  1951  02B5  2A92               	goto	l2152
  1952  02B6                     l86:	
  1953                           
  1954                           ;main.c: 170: };main.c: 171: PORTAbits.RA5 = 0;
  1955  02B6  128C               	bcf	12,5	;volatile
  1956  02B7                     l2164:	
  1957                           
  1958                           ;main.c: 172: _delay((unsigned long)((500)*(32000000/4000.0)));
  1959  02B7  3015               	movlw	21
  1960  02B8  0020               	movlb	0	; select bank0
  1961  02B9  00B6               	movwf	??_loop+1
  1962  02BA  304B               	movlw	75
  1963  02BB  00B5               	movwf	??_loop
  1964  02BC  30BE               	movlw	190
  1965  02BD                     u1737:	
  1966  02BD  0B89               	decfsz	9,f
  1967  02BE  2ABD               	goto	u1737
  1968  02BF  0BB5               	decfsz	??_loop,f
  1969  02C0  2ABD               	goto	u1737
  1970  02C1  0BB6               	decfsz	??_loop+1,f
  1971  02C2  2ABD               	goto	u1737
  1972  02C3  0000               	nop
  1973  02C4                     l2166:	
  1974                           
  1975                           ;main.c: 186: PORTAbits.RA5 = !PORTAbits.RA5;
  1976  02C4  1003               	clrc
  1977  02C5  0020               	movlb	0	; select bank0
  1978  02C6  1E8C               	btfss	12,5	;volatile
  1979  02C7  1403               	setc
  1980  02C8  1803               	btfsc	3,0
  1981  02C9  2ACB               	goto	u1631
  1982  02CA  2ACE               	goto	u1630
  1983  02CB                     u1631:	
  1984  02CB  0020               	movlb	0	; select bank0
  1985  02CC  168C               	bsf	12,5	;volatile
  1986  02CD  2AD0               	goto	u1644
  1987  02CE                     u1630:	
  1988  02CE  0020               	movlb	0	; select bank0
  1989  02CF  128C               	bcf	12,5	;volatile
  1990  02D0                     u1644:	
  1991  02D0                     l2168:	
  1992                           
  1993                           ;main.c: 187: _delay((unsigned long)((50)*(32000000/4000.0)));
  1994  02D0  3003               	movlw	3
  1995  02D1  0020               	movlb	0	; select bank0
  1996  02D2  00B6               	movwf	??_loop+1
  1997  02D3  3008               	movlw	8
  1998  02D4  00B5               	movwf	??_loop
  1999  02D5  3077               	movlw	119
  2000  02D6                     u1747:	
  2001  02D6  0B89               	decfsz	9,f
  2002  02D7  2AD6               	goto	u1747
  2003  02D8  0BB5               	decfsz	??_loop,f
  2004  02D9  2AD6               	goto	u1747
  2005  02DA  0BB6               	decfsz	??_loop+1,f
  2006  02DB  2AD6               	goto	u1747
  2007  02DC  2AC4               	goto	l2166
  2008  02DD  0008               	return
  2009  02DE                     __end_of_loop:	
  2010                           
  2011                           	psect	text2
  2012  0691                     __ptext2:	
  2013 ;; *************** function _SD_Card_RWStopMulti *****************
  2014 ;; Defined at:
  2015 ;;		line 311 in file "SD.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  crc             2    0        unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2   28[None  ] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2029 ;;      Params:         0       0       0       0
  2030 ;;      Locals:         2       0       0       0
  2031 ;;      Temps:          0       0       0       0
  2032 ;;      Totals:         2       0       0       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    4
  2036 ;; This function calls:
  2037 ;;		_SD_Card_ProcessCRC
  2038 ;;		_SD_SPI_Clock
  2039 ;;		_SD_SPI_Read
  2040 ;; This function is called by:
  2041 ;;		_loop
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _SD_Card_RWStopMulti
  2047  0691                     _SD_Card_RWStopMulti:	
  2048  0691                     l1850:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _SD_Card_RWStopMulti: [wreg+status,2+status,0+pclath+cstack]
  2051                           
  2052  0691  3186  2641  3186   	fcall	_SD_Card_ProcessCRC
  2053  0694                     l1852:	
  2054                           
  2055                           ;SD.c: 315: if(SD_FLAGS.readOrWrite == 1) {
  2056  0694  0020               	movlb	0	; select bank0
  2057  0695  1D56               	btfss	_SD_FLAGS,2
  2058  0696  2E98               	goto	u1181
  2059  0697  2E99               	goto	u1180
  2060  0698                     u1181:	
  2061  0698  2EA0               	goto	l294
  2062  0699                     u1180:	
  2063  0699                     l1854:	
  2064                           
  2065                           ;SD.c: 316: SD_SPI_Clock(1);
  2066  0699  3001               	movlw	1
  2067  069A  3186  266E  3186   	fcall	_SD_SPI_Clock
  2068                           
  2069                           ;SD.c: 317: SD_SPI_Read();
  2070  069D  3186  26CE  3186   	fcall	_SD_SPI_Read
  2071  06A0                     l294:	
  2072  06A0  0008               	return
  2073  06A1                     __end_of_SD_Card_RWStopMulti:	
  2074                           
  2075                           	psect	text3
  2076  0680                     __ptext3:	
  2077 ;; *************** function _SD_Card_RWStartMulti *****************
  2078 ;; Defined at:
  2079 ;;		line 302 in file "SD.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2093 ;;      Params:         0       0       0       0
  2094 ;;      Locals:         0       0       0       0
  2095 ;;      Temps:          0       0       0       0
  2096 ;;      Totals:         0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    4
  2100 ;; This function calls:
  2101 ;;		_SD_Card_WaitIfBusy
  2102 ;;		_SD_Card_WaitStartToken
  2103 ;;		_SD_SPI_Write
  2104 ;; This function is called by:
  2105 ;;		_loop
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _SD_Card_RWStartMulti
  2111  0680                     _SD_Card_RWStartMulti:	
  2112  0680                     l1844:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _SD_Card_RWStartMulti: [wreg+status,2+status,0+pclath+cstack]
  2115                           
  2116                           
  2117                           ;SD.c: 303: if(SD_FLAGS.readOrWrite == 1) {
  2118  0680  0020               	movlb	0	; select bank0
  2119  0681  1D56               	btfss	_SD_FLAGS,2
  2120  0682  2E84               	goto	u1171
  2121  0683  2E85               	goto	u1170
  2122  0684                     u1171:	
  2123  0684  2E8D               	goto	l1848
  2124  0685                     u1170:	
  2125  0685                     l1846:	
  2126                           
  2127                           ;SD.c: 304: SD_Card_WaitIfBusy();
  2128  0685  3186  2624  3186   	fcall	_SD_Card_WaitIfBusy
  2129                           
  2130                           ;SD.c: 305: SD_SPI_Write(0xFC);
  2131  0688  30FC               	movlw	252
  2132  0689  3186  26D9  3186   	fcall	_SD_SPI_Write
  2133                           
  2134                           ;SD.c: 306: } else {
  2135  068C  2E90               	goto	l290
  2136  068D                     l1848:	
  2137                           
  2138                           ;SD.c: 307: SD_Card_WaitStartToken();
  2139  068D  3186  2607  3186   	fcall	_SD_Card_WaitStartToken
  2140  0690                     l290:	
  2141  0690  0008               	return
  2142  0691                     __end_of_SD_Card_RWStartMulti:	
  2143                           
  2144                           	psect	text4
  2145  04F8                     __ptext4:	
  2146 ;; *************** function _SD_Card_RWInit *****************
  2147 ;; Defined at:
  2148 ;;		line 228 in file "SD.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  addr            4   15[BANK0 ] unsigned long 
  2151 ;;  readOrWrite     1   19[BANK0 ] unsigned char 
  2152 ;;  singleOrMult    1   20[BANK0 ] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2164 ;;      Params:         0       6       0       0
  2165 ;;      Locals:         0       0       0       0
  2166 ;;      Temps:          0       0       0       0
  2167 ;;      Totals:         0       6       0       0
  2168 ;;Total ram usage:        6 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    5
  2171 ;; This function calls:
  2172 ;;		_SD_Card_Command
  2173 ;;		_SD_Card_Disable
  2174 ;;		_SD_Card_Enable
  2175 ;;		_SD_Card_WaitStartToken
  2176 ;;		_SD_SPI_Write
  2177 ;; This function is called by:
  2178 ;;		_loop
  2179 ;;		_SD_Card_ReadBlock
  2180 ;;		_SD_Card_WriteBlock
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _SD_Card_RWInit
  2186  04F8                     _SD_Card_RWInit:	
  2187  04F8                     l1760:	
  2188                           ;incstack = 0
  2189                           ; Regs used in _SD_Card_RWInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2190                           
  2191                           
  2192                           ;SD.c: 229: SD_Card_Enable();
  2193  04F8  3186  26C0  3184   	fcall	_SD_Card_Enable
  2194  04FB                     l1762:	
  2195                           
  2196                           ;SD.c: 232: SD_FLAGS.readOrWrite = readOrWrite;
  2197  04FB  0020               	movlb	0	; select bank0
  2198  04FC  0833               	movf	SD_Card_RWInit@readOrWrite,w
  2199  04FD  3901               	andlw	1
  2200  04FE  1156               	bcf	_SD_FLAGS,2
  2201  04FF  1D03               	skipz
  2202  0500  1556               	bsf	_SD_FLAGS,2
  2203  0501                     l1764:	
  2204                           
  2205                           ;SD.c: 233: SD_FLAGS.singleOrMultiBlock = singleOrMultiBlock;
  2206  0501  0834               	movf	SD_Card_RWInit@singleOrMultiBlock,w
  2207  0502  3901               	andlw	1
  2208  0503  11D6               	bcf	_SD_FLAGS,3
  2209  0504  1D03               	skipz
  2210  0505  15D6               	bsf	_SD_FLAGS,3
  2211  0506                     l1766:	
  2212                           
  2213                           ;SD.c: 236: if(readOrWrite == 1) {
  2214  0506  0333               	decf	SD_Card_RWInit@readOrWrite,w
  2215  0507  1D03               	btfss	3,2
  2216  0508  2D0A               	goto	u1021
  2217  0509  2D0B               	goto	u1020
  2218  050A                     u1021:	
  2219  050A  2D39               	goto	l1784
  2220  050B                     u1020:	
  2221  050B                     l1768:	
  2222                           
  2223                           ;SD.c: 237: if(singleOrMultiBlock == 1) {
  2224  050B  0334               	decf	SD_Card_RWInit@singleOrMultiBlock,w
  2225  050C  1D03               	btfss	3,2
  2226  050D  2D0F               	goto	u1031
  2227  050E  2D10               	goto	u1030
  2228  050F                     u1031:	
  2229  050F  2D23               	goto	l1776
  2230  0510                     u1030:	
  2231  0510                     l1770:	
  2232                           
  2233                           ;SD.c: 238: if(SD_Card_Command(25, addr) == 0x00) {
  2234  0510  0832               	movf	SD_Card_RWInit@addr+3,w
  2235  0511  00FC               	movwf	SD_Card_Command@a+3
  2236  0512  0831               	movf	SD_Card_RWInit@addr+2,w
  2237  0513  00FB               	movwf	SD_Card_Command@a+2
  2238  0514  0830               	movf	SD_Card_RWInit@addr+1,w
  2239  0515  00FA               	movwf	SD_Card_Command@a+1
  2240  0516  082F               	movf	SD_Card_RWInit@addr,w
  2241  0517  00F9               	movwf	SD_Card_Command@a
  2242  0518  3019               	movlw	25
  2243  0519  3184  246C  3184   	fcall	_SD_Card_Command
  2244  051C  3A00               	xorlw	0
  2245  051D  1D03               	skipz
  2246  051E  2D20               	goto	u1041
  2247  051F  2D21               	goto	u1040
  2248  0520                     u1041:	
  2249  0520  2D5B               	goto	l1802
  2250  0521                     u1040:	
  2251  0521                     l1772:	
  2252                           
  2253                           ;SD.c: 239: return 1;
  2254  0521  3001               	movlw	1
  2255  0522  2D5F               	goto	l260
  2256  0523                     l1776:	
  2257                           
  2258                           ;SD.c: 242: if(SD_Card_Command(24, addr) == 0x00) {
  2259  0523  0832               	movf	SD_Card_RWInit@addr+3,w
  2260  0524  00FC               	movwf	SD_Card_Command@a+3
  2261  0525  0831               	movf	SD_Card_RWInit@addr+2,w
  2262  0526  00FB               	movwf	SD_Card_Command@a+2
  2263  0527  0830               	movf	SD_Card_RWInit@addr+1,w
  2264  0528  00FA               	movwf	SD_Card_Command@a+1
  2265  0529  082F               	movf	SD_Card_RWInit@addr,w
  2266  052A  00F9               	movwf	SD_Card_Command@a
  2267  052B  3018               	movlw	24
  2268  052C  3184  246C  3184   	fcall	_SD_Card_Command
  2269  052F  3A00               	xorlw	0
  2270  0530  1D03               	skipz
  2271  0531  2D33               	goto	u1051
  2272  0532  2D34               	goto	u1050
  2273  0533                     u1051:	
  2274  0533  2D5B               	goto	l1802
  2275  0534                     u1050:	
  2276  0534                     l1778:	
  2277                           
  2278                           ;SD.c: 243: SD_SPI_Write(0xFE);
  2279  0534  30FE               	movlw	254
  2280  0535  3186  26D9  3184   	fcall	_SD_SPI_Write
  2281  0538  2D21               	goto	l1772
  2282  0539                     l1784:	
  2283                           
  2284                           ;SD.c: 248: if(singleOrMultiBlock == 1) {
  2285  0539  0334               	decf	SD_Card_RWInit@singleOrMultiBlock,w
  2286  053A  1D03               	btfss	3,2
  2287  053B  2D3D               	goto	u1061
  2288  053C  2D3E               	goto	u1060
  2289  053D                     u1061:	
  2290  053D  2D4B               	goto	l1794
  2291  053E                     u1060:	
  2292  053E                     l1786:	
  2293                           
  2294                           ;SD.c: 249: SD_Card_Command(18, addr);
  2295  053E  0832               	movf	SD_Card_RWInit@addr+3,w
  2296  053F  00FC               	movwf	SD_Card_Command@a+3
  2297  0540  0831               	movf	SD_Card_RWInit@addr+2,w
  2298  0541  00FB               	movwf	SD_Card_Command@a+2
  2299  0542  0830               	movf	SD_Card_RWInit@addr+1,w
  2300  0543  00FA               	movwf	SD_Card_Command@a+1
  2301  0544  082F               	movf	SD_Card_RWInit@addr,w
  2302  0545  00F9               	movwf	SD_Card_Command@a
  2303  0546  3012               	movlw	18
  2304  0547  3184  246C  3184   	fcall	_SD_Card_Command
  2305  054A  2D21               	goto	l1772
  2306  054B                     l1794:	
  2307                           
  2308                           ;SD.c: 252: SD_Card_Command(17, addr);
  2309  054B  0832               	movf	SD_Card_RWInit@addr+3,w
  2310  054C  00FC               	movwf	SD_Card_Command@a+3
  2311  054D  0831               	movf	SD_Card_RWInit@addr+2,w
  2312  054E  00FB               	movwf	SD_Card_Command@a+2
  2313  054F  0830               	movf	SD_Card_RWInit@addr+1,w
  2314  0550  00FA               	movwf	SD_Card_Command@a+1
  2315  0551  082F               	movf	SD_Card_RWInit@addr,w
  2316  0552  00F9               	movwf	SD_Card_Command@a
  2317  0553  3011               	movlw	17
  2318  0554  3184  246C  3184   	fcall	_SD_Card_Command
  2319  0557                     l1796:	
  2320                           
  2321                           ;SD.c: 253: SD_Card_WaitStartToken();
  2322  0557  3186  2607  3184   	fcall	_SD_Card_WaitStartToken
  2323  055A  2D21               	goto	l1772
  2324  055B                     l1802:	
  2325                           
  2326                           ;SD.c: 255: };SD.c: 256: };SD.c: 259: SD_Card_Disable();
  2327  055B  3186  26E3  3184   	fcall	_SD_Card_Disable
  2328  055E                     l1804:	
  2329                           
  2330                           ;SD.c: 260: return 0;
  2331  055E  3000               	movlw	0
  2332  055F                     l260:	
  2333  055F  0008               	return
  2334  0560                     __end_of_SD_Card_RWInit:	
  2335                           
  2336                           	psect	text5
  2337  05E1                     __ptext5:	
  2338 ;; *************** function _SD_Card_RWEnd *****************
  2339 ;; Defined at:
  2340 ;;		line 263 in file "SD.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  crc             2    0        unsigned int 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   20[None  ] unsigned int 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2354 ;;      Params:         0       0       0       0
  2355 ;;      Locals:         0       4       0       0
  2356 ;;      Temps:          0       0       0       0
  2357 ;;      Totals:         0       4       0       0
  2358 ;;Total ram usage:        4 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    4
  2361 ;; This function calls:
  2362 ;;		_SD_Card_Command
  2363 ;;		_SD_Card_Disable
  2364 ;;		_SD_Card_ProcessCRC
  2365 ;; This function is called by:
  2366 ;;		_loop
  2367 ;;		_SD_Card_ReadBlock
  2368 ;;		_SD_Card_WriteBlock
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _SD_Card_RWEnd
  2374  05E1                     _SD_Card_RWEnd:	
  2375  05E1                     l1808:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _SD_Card_RWEnd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2378                           
  2379  05E1                     l1810:	
  2380                           
  2381                           ;SD.c: 266: if(SD_FLAGS.singleOrMultiBlock == 0) {
  2382  05E1  0020               	movlb	0	; select bank0
  2383  05E2  19D6               	btfsc	_SD_FLAGS,3
  2384  05E3  2DE5               	goto	u1071
  2385  05E4  2DE6               	goto	u1070
  2386  05E5                     u1071:	
  2387  05E5  2DE9               	goto	l1814
  2388  05E6                     u1070:	
  2389  05E6                     l1812:	
  2390  05E6  3186  2641  3185   	fcall	_SD_Card_ProcessCRC
  2391  05E9                     l1814:	
  2392                           
  2393                           ;SD.c: 268: };SD.c: 271: SD_Card_Command(((SD_FLAGS.readOrWrite == 1) ? 13 : 12), 0x0000
      +                          0000);
  2394  05E9  0020               	movlb	0	; select bank0
  2395  05EA  1956               	btfsc	_SD_FLAGS,2
  2396  05EB  2DED               	goto	u1081
  2397  05EC  2DEE               	goto	u1080
  2398  05ED                     u1081:	
  2399  05ED  2DF3               	goto	l1818
  2400  05EE                     u1080:	
  2401  05EE                     l1816:	
  2402  05EE  300C               	movlw	12
  2403  05EF  00B1               	movwf	_SD_Card_RWEnd$860
  2404  05F0  3000               	movlw	0
  2405  05F1  00B2               	movwf	_SD_Card_RWEnd$860+1
  2406  05F2  2DF7               	goto	l1820
  2407  05F3                     l1818:	
  2408  05F3  300D               	movlw	13
  2409  05F4  00B1               	movwf	_SD_Card_RWEnd$860
  2410  05F5  3000               	movlw	0
  2411  05F6  00B2               	movwf	_SD_Card_RWEnd$860+1
  2412  05F7                     l1820:	
  2413  05F7  3000               	movlw	0
  2414  05F8  00FC               	movwf	SD_Card_Command@a+3
  2415  05F9  3000               	movlw	0
  2416  05FA  00FB               	movwf	SD_Card_Command@a+2
  2417  05FB  3000               	movlw	0
  2418  05FC  00FA               	movwf	SD_Card_Command@a+1
  2419  05FD  3000               	movlw	0
  2420  05FE  00F9               	movwf	SD_Card_Command@a
  2421  05FF  0831               	movf	_SD_Card_RWEnd$860,w
  2422  0600  3184  246C  3185   	fcall	_SD_Card_Command
  2423  0603                     l1822:	
  2424                           
  2425                           ;SD.c: 272: SD_Card_Disable();
  2426  0603  3186  26E3  3185   	fcall	_SD_Card_Disable
  2427  0606                     l273:	
  2428  0606  0008               	return
  2429  0607                     __end_of_SD_Card_RWEnd:	
  2430                           
  2431                           	psect	text6
  2432  0641                     __ptext6:	
  2433 ;; *************** function _SD_Card_ProcessCRC *****************
  2434 ;; Defined at:
  2435 ;;		line 203 in file "SD.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  crc             2    8[COMMON] unsigned int 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    3[COMMON] unsigned int 
  2442 ;; Registers used:
  2443 ;;		wreg, pclath, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2449 ;;      Params:         2       0       0       0
  2450 ;;      Locals:         2       0       0       0
  2451 ;;      Temps:          3       0       0       0
  2452 ;;      Totals:         7       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    3
  2456 ;; This function calls:
  2457 ;;		_SD_SPI_Read
  2458 ;; This function is called by:
  2459 ;;		_SD_Card_RWEnd
  2460 ;;		_SD_Card_RWStopMulti
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _SD_Card_ProcessCRC
  2466  0641                     _SD_Card_ProcessCRC:	
  2467  0641                     l1750:	
  2468                           ;incstack = 0
  2469                           ; Regs used in _SD_Card_ProcessCRC: [wreg+pclath+cstack]
  2470                           
  2471                           
  2472                           ;SD.c: 205: uint16_t crc = SD_SPI_Read() << 8;
  2473  0641  3186  26CE  3186   	fcall	_SD_SPI_Read
  2474  0644  00F5               	movwf	??_SD_Card_ProcessCRC
  2475  0645  01F6               	clrf	??_SD_Card_ProcessCRC+1
  2476  0646  0875               	movf	??_SD_Card_ProcessCRC,w
  2477  0647  00F6               	movwf	??_SD_Card_ProcessCRC+1
  2478  0648  01F5               	clrf	??_SD_Card_ProcessCRC
  2479  0649  0875               	movf	??_SD_Card_ProcessCRC,w
  2480  064A  00F8               	movwf	SD_Card_ProcessCRC@crc
  2481  064B  0876               	movf	??_SD_Card_ProcessCRC+1,w
  2482  064C  00F9               	movwf	SD_Card_ProcessCRC@crc+1
  2483                           
  2484                           ;SD.c: 206: crc += SD_SPI_Read();
  2485  064D  3186  26CE  3186   	fcall	_SD_SPI_Read
  2486  0650  00F5               	movwf	??_SD_Card_ProcessCRC
  2487  0651  01F6               	clrf	??_SD_Card_ProcessCRC+1
  2488  0652  0875               	movf	??_SD_Card_ProcessCRC,w
  2489  0653  07F8               	addwf	SD_Card_ProcessCRC@crc,f
  2490  0654  0876               	movf	??_SD_Card_ProcessCRC+1,w
  2491  0655  3DF9               	addwfc	SD_Card_ProcessCRC@crc+1,f
  2492  0656                     l1752:	
  2493                           
  2494                           ;SD.c: 207: return crc;
  2495  0656  0879               	movf	SD_Card_ProcessCRC@crc+1,w
  2496  0657  00F4               	movwf	?_SD_Card_ProcessCRC+1
  2497  0658  0878               	movf	SD_Card_ProcessCRC@crc,w
  2498  0659  00F3               	movwf	?_SD_Card_ProcessCRC
  2499  065A                     l239:	
  2500  065A  0008               	return
  2501  065B                     __end_of_SD_Card_ProcessCRC:	
  2502                           
  2503                           	psect	text7
  2504  06F0                     __ptext7:	
  2505 ;; *************** function _SD_Card_IsActive *****************
  2506 ;; Defined at:
  2507 ;;		line 210 in file "SD.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2521 ;;      Params:         0       0       0       0
  2522 ;;      Locals:         0       0       0       0
  2523 ;;      Temps:          0       0       0       0
  2524 ;;      Totals:         0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_loop
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _SD_Card_IsActive
  2537  06F0                     _SD_Card_IsActive:	
  2538  06F0                     l1756:	
  2539                           ;incstack = 0
  2540                           ; Regs used in _SD_Card_IsActive: [wreg+status,2+status,0]
  2541                           
  2542                           
  2543                           ;SD.c: 211: return SD_FLAGS.isCardActive;
  2544  06F0  0020               	movlb	0	; select bank0
  2545  06F1  0D56               	rlf	_SD_FLAGS,w
  2546  06F2  0D56               	rlf	_SD_FLAGS,w
  2547  06F3  3901               	andlw	1
  2548  06F4                     l242:	
  2549  06F4  0008               	return
  2550  06F5                     __end_of_SD_Card_IsActive:	
  2551                           
  2552                           	psect	text8
  2553  02DE                     __ptext8:	
  2554 ;; *************** function _SD_Card_GetSize *****************
  2555 ;; Defined at:
  2556 ;;		line 190 in file "SD.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  c_size          4    4[COMMON] unsigned long 
  2561 ;;  c_size          2    8[COMMON] unsigned int 
  2562 ;;  c_size_mult     1   11[COMMON] unsigned char 
  2563 ;;  read_bl_len     1   10[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  4    0[COMMON] unsigned long 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         4       0       0       0
  2574 ;;      Locals:         8       0       0       0
  2575 ;;      Temps:          0      15       0       0
  2576 ;;      Totals:        12      15       0       0
  2577 ;;Total ram usage:       27 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_loop
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _SD_Card_GetSize
  2589  02DE                     _SD_Card_GetSize:	
  2590  02DE                     l1826:	
  2591                           ;incstack = 0
  2592                           ; Regs used in _SD_Card_GetSize: [wreg+status,2+status,0]
  2593                           
  2594                           
  2595                           ;SD.c: 191: if(SD_CSD.v1.csd_ver == 0) {
  2596  02DE  0020               	movlb	0	; select bank0
  2597  02DF  0E66               	swapf	_SD_CSD+15,w
  2598  02E0  0C89               	rrf	9,f
  2599  02E1  0C89               	rrf	9,f
  2600  02E2  3903               	andlw	3
  2601  02E3  3A00               	xorlw	0
  2602  02E4  1D03               	skipz
  2603  02E5  2AE7               	goto	u1091
  2604  02E6  2AE8               	goto	u1090
  2605  02E7                     u1091:	
  2606  02E7  2B41               	goto	l1834
  2607  02E8                     u1090:	
  2608  02E8                     l1828:	
  2609                           
  2610                           ;SD.c: 192: uint8_t read_bl_len = SD_CSD.v1.read_bl_len;
  2611  02E8  0861               	movf	_SD_CSD+10,w
  2612  02E9  390F               	andlw	15
  2613  02EA  00A0               	movwf	??_SD_Card_GetSize
  2614  02EB  0820               	movf	??_SD_Card_GetSize,w
  2615  02EC  00FA               	movwf	SD_Card_GetSize@read_bl_len
  2616                           
  2617                           ;SD.c: 193: uint16_t c_size = (SD_CSD.v1.c_size_high << 10) | (SD_CSD.v1.c_size_mid << 2
      +                          ) | SD_CSD.v1.c_size_low;
  2618  02ED  0E5E               	swapf	_SD_CSD+7,w
  2619  02EE  0C89               	rrf	9,f
  2620  02EF  0C89               	rrf	9,f
  2621  02F0  3903               	andlw	3
  2622  02F1  00A0               	movwf	??_SD_Card_GetSize
  2623  02F2  01A1               	clrf	??_SD_Card_GetSize+1
  2624  02F3  085F               	movf	_SD_CSD+8,w
  2625  02F4  00A2               	movwf	??_SD_Card_GetSize+2
  2626  02F5  01A3               	clrf	??_SD_Card_GetSize+3
  2627  02F6  35A2               	lslf	??_SD_Card_GetSize+2,f
  2628  02F7  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2629  02F8  35A2               	lslf	??_SD_Card_GetSize+2,f
  2630  02F9  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2631  02FA  0860               	movf	_SD_CSD+9,w
  2632  02FB  3903               	andlw	3
  2633  02FC  00A4               	movwf	??_SD_Card_GetSize+4
  2634  02FD  01A5               	clrf	??_SD_Card_GetSize+5
  2635  02FE  300A               	movlw	10
  2636  02FF                     u1105:	
  2637  02FF  35A4               	lslf	??_SD_Card_GetSize+4,f
  2638  0300  0DA5               	rlf	??_SD_Card_GetSize+5,f
  2639  0301  0B89               	decfsz	9,f
  2640  0302  2AFF               	goto	u1105
  2641  0303  0822               	movf	??_SD_Card_GetSize+2,w
  2642  0304  0424               	iorwf	??_SD_Card_GetSize+4,w
  2643  0305  00A6               	movwf	??_SD_Card_GetSize+6
  2644  0306  0823               	movf	??_SD_Card_GetSize+3,w
  2645  0307  0425               	iorwf	??_SD_Card_GetSize+5,w
  2646  0308  00A7               	movwf	??_SD_Card_GetSize+7
  2647  0309  0820               	movf	??_SD_Card_GetSize,w
  2648  030A  0426               	iorwf	??_SD_Card_GetSize+6,w
  2649  030B  00F8               	movwf	SD_Card_GetSize@c_size
  2650  030C  0821               	movf	??_SD_Card_GetSize+1,w
  2651  030D  0427               	iorwf	??_SD_Card_GetSize+7,w
  2652  030E  00F9               	movwf	SD_Card_GetSize@c_size+1
  2653                           
  2654                           ;SD.c: 194: uint8_t c_size_mult = (SD_CSD.v1.c_size_mult_high << 1) | SD_CSD.v1.c_size_m
      +                          ult_low;
  2655  030F  0D5C               	rlf	_SD_CSD+5,w
  2656  0310  0D5C               	rlf	_SD_CSD+5,w
  2657  0311  3901               	andlw	1
  2658  0312  00A0               	movwf	??_SD_Card_GetSize
  2659  0313  085D               	movf	_SD_CSD+6,w
  2660  0314  3903               	andlw	3
  2661  0315  0709               	addwf	9,w
  2662  0316  0420               	iorwf	??_SD_Card_GetSize,w
  2663  0317  00A1               	movwf	??_SD_Card_GetSize+1
  2664  0318  0821               	movf	??_SD_Card_GetSize+1,w
  2665  0319  00FB               	movwf	SD_Card_GetSize@c_size_mult
  2666                           
  2667                           ;SD.c: 195: return ((uint32_t)(c_size + 1) << (c_size_mult + read_bl_len - 7)) * 512;
  2668  031A  0878               	movf	SD_Card_GetSize@c_size,w
  2669  031B  3E01               	addlw	1
  2670  031C  00A0               	movwf	??_SD_Card_GetSize
  2671  031D  3000               	movlw	0
  2672  031E  3D79               	addwfc	SD_Card_GetSize@c_size+1,w
  2673  031F  00A1               	movwf	??_SD_Card_GetSize+1
  2674  0320  0820               	movf	??_SD_Card_GetSize,w
  2675  0321  00A2               	movwf	??_SD_Card_GetSize+2
  2676  0322  0821               	movf	??_SD_Card_GetSize+1,w
  2677  0323  00A3               	movwf	??_SD_Card_GetSize+3
  2678  0324  01A4               	clrf	??_SD_Card_GetSize+4
  2679  0325  01A5               	clrf	??_SD_Card_GetSize+5
  2680  0326  087B               	movf	SD_Card_GetSize@c_size_mult,w
  2681  0327  077A               	addwf	SD_Card_GetSize@read_bl_len,w
  2682  0328  3EF9               	addlw	-7
  2683  0329  0A89               	incf	9,f
  2684  032A  2B2F               	goto	u1110
  2685  032B                     u1115:	
  2686  032B  35A2               	lslf	??_SD_Card_GetSize+2,f
  2687  032C  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2688  032D  0DA4               	rlf	??_SD_Card_GetSize+4,f
  2689  032E  0DA5               	rlf	??_SD_Card_GetSize+5,f
  2690  032F                     u1110:	
  2691  032F  0B89               	decfsz	9,f
  2692  0330  2B2B               	goto	u1115
  2693  0331  3009               	movlw	9
  2694  0332                     u1125:	
  2695  0332  35A2               	lslf	??_SD_Card_GetSize+2,f
  2696  0333  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2697  0334  0DA4               	rlf	??_SD_Card_GetSize+4,f
  2698  0335  0DA5               	rlf	??_SD_Card_GetSize+5,f
  2699  0336                     u1120:	
  2700  0336  0B89               	decfsz	9,f
  2701  0337  2B32               	goto	u1125
  2702  0338  0825               	movf	??_SD_Card_GetSize+5,w
  2703  0339  00F3               	movwf	?_SD_Card_GetSize+3
  2704  033A  0824               	movf	??_SD_Card_GetSize+4,w
  2705  033B  00F2               	movwf	?_SD_Card_GetSize+2
  2706  033C  0823               	movf	??_SD_Card_GetSize+3,w
  2707  033D  00F1               	movwf	?_SD_Card_GetSize+1
  2708  033E  0822               	movf	??_SD_Card_GetSize+2,w
  2709  033F  00F0               	movwf	?_SD_Card_GetSize
  2710  0340  2BAB               	goto	l234
  2711  0341                     l1834:	
  2712  0341  0E66               	swapf	_SD_CSD+15,w
  2713  0342  0C89               	rrf	9,f
  2714  0343  0C89               	rrf	9,f
  2715  0344  3903               	andlw	3
  2716  0345  3A01               	xorlw	1
  2717  0346  1D03               	skipz
  2718  0347  2B49               	goto	u1131
  2719  0348  2B4A               	goto	u1130
  2720  0349                     u1131:	
  2721  0349  2BA3               	goto	l1840
  2722  034A                     u1130:	
  2723  034A                     l1836:	
  2724                           
  2725                           ;SD.c: 197: uint32_t c_size = ((uint32_t)SD_CSD.v2.c_size_high << 16) | (SD_CSD.v2.c_siz
      +                          e_mid << 8) | SD_CSD.v2.c_size_low;
  2726  034A  085D               	movf	_SD_CSD+6,w
  2727  034B  00A0               	movwf	??_SD_Card_GetSize
  2728  034C  01A1               	clrf	??_SD_Card_GetSize+1
  2729  034D  01A2               	clrf	??_SD_Card_GetSize+2
  2730  034E  01A3               	clrf	??_SD_Card_GetSize+3
  2731  034F  085E               	movf	_SD_CSD+7,w
  2732  0350  00A4               	movwf	??_SD_Card_GetSize+4
  2733  0351  01A5               	clrf	??_SD_Card_GetSize+5
  2734  0352  0824               	movf	??_SD_Card_GetSize+4,w
  2735  0353  00A5               	movwf	??_SD_Card_GetSize+5
  2736  0354  01A4               	clrf	??_SD_Card_GetSize+4
  2737  0355  0824               	movf	??_SD_Card_GetSize+4,w
  2738  0356  00A7               	movwf	??_SD_Card_GetSize+7
  2739  0357  0825               	movf	??_SD_Card_GetSize+5,w
  2740  0358  00A8               	movwf	??_SD_Card_GetSize+8
  2741  0359  3000               	movlw	0
  2742  035A  1BA8               	btfsc	??_SD_Card_GetSize+8,7
  2743  035B  30FF               	movlw	255
  2744  035C  00A9               	movwf	??_SD_Card_GetSize+9
  2745  035D  00AA               	movwf	??_SD_Card_GetSize+10
  2746  035E  0C5F               	rrf	_SD_CSD+8,w
  2747  035F  0C89               	rrf	9,f
  2748  0360  393F               	andlw	63
  2749  0361  00AB               	movwf	??_SD_Card_GetSize+11
  2750  0362  01AC               	clrf	??_SD_Card_GetSize+12
  2751  0363  01AD               	clrf	??_SD_Card_GetSize+13
  2752  0364  01AE               	clrf	??_SD_Card_GetSize+14
  2753  0365  3010               	movlw	16
  2754  0366                     u1145:	
  2755  0366  35AB               	lslf	??_SD_Card_GetSize+11,f
  2756  0367  0DAC               	rlf	??_SD_Card_GetSize+12,f
  2757  0368  0DAD               	rlf	??_SD_Card_GetSize+13,f
  2758  0369  0DAE               	rlf	??_SD_Card_GetSize+14,f
  2759  036A                     u1140:	
  2760  036A  0B89               	decfsz	9,f
  2761  036B  2B66               	goto	u1145
  2762  036C  082B               	movf	??_SD_Card_GetSize+11,w
  2763  036D  04A7               	iorwf	??_SD_Card_GetSize+7,f
  2764  036E  082C               	movf	??_SD_Card_GetSize+12,w
  2765  036F  04A8               	iorwf	??_SD_Card_GetSize+8,f
  2766  0370  082D               	movf	??_SD_Card_GetSize+13,w
  2767  0371  04A9               	iorwf	??_SD_Card_GetSize+9,f
  2768  0372  082E               	movf	??_SD_Card_GetSize+14,w
  2769  0373  04AA               	iorwf	??_SD_Card_GetSize+10,f
  2770  0374  0820               	movf	??_SD_Card_GetSize,w
  2771  0375  0427               	iorwf	??_SD_Card_GetSize+7,w
  2772  0376  00F4               	movwf	SD_Card_GetSize@c_size_845
  2773  0377  0821               	movf	??_SD_Card_GetSize+1,w
  2774  0378  0428               	iorwf	??_SD_Card_GetSize+8,w
  2775  0379  00F5               	movwf	SD_Card_GetSize@c_size_845+1
  2776  037A  0822               	movf	??_SD_Card_GetSize+2,w
  2777  037B  0429               	iorwf	??_SD_Card_GetSize+9,w
  2778  037C  00F6               	movwf	SD_Card_GetSize@c_size_845+2
  2779  037D  0823               	movf	??_SD_Card_GetSize+3,w
  2780  037E  042A               	iorwf	??_SD_Card_GetSize+10,w
  2781  037F  00F7               	movwf	SD_Card_GetSize@c_size_845+3
  2782                           
  2783                           ;SD.c: 198: return ((c_size + 1) << 10) * 512;
  2784  0380  0874               	movf	SD_Card_GetSize@c_size_845,w
  2785  0381  00A0               	movwf	??_SD_Card_GetSize
  2786  0382  0875               	movf	SD_Card_GetSize@c_size_845+1,w
  2787  0383  00A1               	movwf	??_SD_Card_GetSize+1
  2788  0384  0876               	movf	SD_Card_GetSize@c_size_845+2,w
  2789  0385  00A2               	movwf	??_SD_Card_GetSize+2
  2790  0386  0877               	movf	SD_Card_GetSize@c_size_845+3,w
  2791  0387  00A3               	movwf	??_SD_Card_GetSize+3
  2792  0388  300A               	movlw	10
  2793  0389                     u1155:	
  2794  0389  35A0               	lslf	??_SD_Card_GetSize,f
  2795  038A  0DA1               	rlf	??_SD_Card_GetSize+1,f
  2796  038B  0DA2               	rlf	??_SD_Card_GetSize+2,f
  2797  038C  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2798  038D                     u1150:	
  2799  038D  0B89               	decfsz	9,f
  2800  038E  2B89               	goto	u1155
  2801  038F  3009               	movlw	9
  2802  0390                     u1165:	
  2803  0390  35A0               	lslf	??_SD_Card_GetSize,f
  2804  0391  0DA1               	rlf	??_SD_Card_GetSize+1,f
  2805  0392  0DA2               	rlf	??_SD_Card_GetSize+2,f
  2806  0393  0DA3               	rlf	??_SD_Card_GetSize+3,f
  2807  0394                     u1160:	
  2808  0394  0B89               	decfsz	9,f
  2809  0395  2B90               	goto	u1165
  2810  0396  3000               	movlw	0
  2811  0397  0720               	addwf	??_SD_Card_GetSize,w
  2812  0398  00F0               	movwf	?_SD_Card_GetSize
  2813  0399  3000               	movlw	0
  2814  039A  3D21               	addwfc	??_SD_Card_GetSize+1,w
  2815  039B  00F1               	movwf	?_SD_Card_GetSize+1
  2816  039C  3008               	movlw	8
  2817  039D  3D22               	addwfc	??_SD_Card_GetSize+2,w
  2818  039E  00F2               	movwf	?_SD_Card_GetSize+2
  2819  039F  3000               	movlw	0
  2820  03A0  3D23               	addwfc	??_SD_Card_GetSize+3,w
  2821  03A1  00F3               	movwf	?_SD_Card_GetSize+3
  2822  03A2  2BAB               	goto	l234
  2823  03A3                     l1840:	
  2824                           
  2825                           ;SD.c: 199: };SD.c: 200: return 0;
  2826  03A3  3000               	movlw	0
  2827  03A4  00F3               	movwf	?_SD_Card_GetSize+3
  2828  03A5  3000               	movlw	0
  2829  03A6  00F2               	movwf	?_SD_Card_GetSize+2
  2830  03A7  3000               	movlw	0
  2831  03A8  00F1               	movwf	?_SD_Card_GetSize+1
  2832  03A9  3000               	movlw	0
  2833  03AA  00F0               	movwf	?_SD_Card_GetSize
  2834  03AB                     l234:	
  2835  03AB  0008               	return
  2836  03AC                     __end_of_SD_Card_GetSize:	
  2837                           
  2838                           	psect	text9
  2839  06A1                     __ptext9:	
  2840 ;; *************** function _init *****************
  2841 ;; Defined at:
  2842 ;;		line 15 in file "init.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2856 ;;      Params:         0       0       0       0
  2857 ;;      Locals:         0       0       0       0
  2858 ;;      Temps:          0       0       0       0
  2859 ;;      Totals:         0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _init
  2872  06A1                     _init:	
  2873  06A1                     l1220:	
  2874                           ;incstack = 0
  2875                           ; Regs used in _init: [wreg+status,2]
  2876                           
  2877                           
  2878                           ;init.c: 22: OSCCON = 0b11110000;
  2879  06A1  30F0               	movlw	240
  2880  06A2  0021               	movlb	1	; select bank1
  2881  06A3  0099               	movwf	25	;volatile
  2882  06A4                     l1222:	
  2883                           
  2884                           ;init.c: 23: OSCTUNE = 0x00;
  2885  06A4  0198               	clrf	24	;volatile
  2886  06A5                     l1224:	
  2887                           
  2888                           ;init.c: 35: OPTION_REG = 0b11010111;
  2889  06A5  30D7               	movlw	215
  2890  06A6  0095               	movwf	21	;volatile
  2891  06A7                     l1226:	
  2892                           
  2893                           ;init.c: 47: TRISA = 0b00001100;
  2894  06A7  300C               	movlw	12
  2895  06A8  008C               	movwf	12	;volatile
  2896  06A9                     l1228:	
  2897                           
  2898                           ;init.c: 48: ANSELA = 0b00000000;
  2899  06A9  0023               	movlb	3	; select bank3
  2900  06AA  018C               	clrf	12	;volatile
  2901  06AB                     l1230:	
  2902                           
  2903                           ;init.c: 49: LATA = 0;
  2904  06AB  0022               	movlb	2	; select bank2
  2905  06AC  018C               	clrf	12	;volatile
  2906  06AD                     l1232:	
  2907                           
  2908                           ;init.c: 57: TMR0IE = 0;
  2909  06AD  128B               	bcf	11,5	;volatile
  2910  06AE                     l1234:	
  2911                           
  2912                           ;init.c: 58: PEIE = 0;
  2913  06AE  130B               	bcf	11,6	;volatile
  2914  06AF                     l1236:	
  2915                           
  2916                           ;init.c: 59: GIE = 0;
  2917  06AF  138B               	bcf	11,7	;volatile
  2918  06B0                     l117:	
  2919  06B0  0008               	return
  2920  06B1                     __end_of_init:	
  2921                           
  2922                           	psect	text10
  2923  065B                     __ptext10:	
  2924 ;; *************** function _SD_SPI_Init *****************
  2925 ;; Defined at:
  2926 ;;		line 12 in file "SD.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       0       0       0
  2941 ;;      Locals:         0       0       0       0
  2942 ;;      Temps:          0       0       0       0
  2943 ;;      Totals:         0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    1
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _SD_SPI_Init
  2956  065B                     _SD_SPI_Init:	
  2957  065B                     l1238:	
  2958                           ;incstack = 0
  2959                           ; Regs used in _SD_SPI_Init: [wreg+status,2+status,0]
  2960                           
  2961                           
  2962                           ;SD.c: 14: APFCONbits.SDOSEL = 0;
  2963  065B  0022               	movlb	2	; select bank2
  2964  065C  131D               	bcf	29,6	;volatile
  2965                           
  2966                           ;SD.c: 15: APFCONbits.SSSEL = 0;
  2967  065D  129D               	bcf	29,5	;volatile
  2968                           
  2969                           ;SD.c: 18: TRISAbits.TRISA4 = 0;
  2970  065E  0021               	movlb	1	; select bank1
  2971  065F  120C               	bcf	12,4	;volatile
  2972                           
  2973                           ;SD.c: 19: TRISAbits.TRISA2 = 1;
  2974  0660  150C               	bsf	12,2	;volatile
  2975                           
  2976                           ;SD.c: 20: TRISAbits.TRISA0 = 0;
  2977  0661  100C               	bcf	12,0	;volatile
  2978                           
  2979                           ;SD.c: 21: TRISAbits.TRISA0 = 0;
  2980  0662  100C               	bcf	12,0	;volatile
  2981                           
  2982                           ;SD.c: 22: PORTAbits.RA4 = 1;
  2983  0663  0020               	movlb	0	; select bank0
  2984  0664  160C               	bsf	12,4	;volatile
  2985                           
  2986                           ;SD.c: 25: SSP1STATbits.CKE = 1;
  2987  0665  0024               	movlb	4	; select bank4
  2988  0666  1714               	bsf	20,6	;volatile
  2989                           
  2990                           ;SD.c: 26: SSP1CON1bits.CKP = 0;
  2991  0667  1215               	bcf	21,4	;volatile
  2992  0668                     l1240:	
  2993                           
  2994                           ;SD.c: 27: SSP1CON1bits.SSPM = 0b0010;
  2995  0668  0815               	movf	21,w	;volatile
  2996  0669  39F0               	andlw	-16
  2997  066A  3802               	iorlw	2
  2998  066B  0095               	movwf	21	;volatile
  2999  066C                     l1242:	
  3000                           
  3001                           ;SD.c: 28: SSP1CON1bits.SSPEN = 1;
  3002  066C  1695               	bsf	21,5	;volatile
  3003  066D                     l157:	
  3004  066D  0008               	return
  3005  066E                     __end_of_SD_SPI_Init:	
  3006                           
  3007                           	psect	text11
  3008  03AC                     __ptext11:	
  3009 ;; *************** function _SD_Card_Init *****************
  3010 ;; Defined at:
  3011 ;;		line 123 in file "SD.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  response        1   22[BANK0 ] unsigned char 
  3016 ;;  i               1   23[BANK0 ] unsigned char 
  3017 ;;  i               1   21[BANK0 ] unsigned char 
  3018 ;;  i               1   20[BANK0 ] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3028 ;;      Params:         0       0       0       0
  3029 ;;      Locals:         0       4       0       0
  3030 ;;      Temps:          0       2       0       0
  3031 ;;      Totals:         0       6       0       0
  3032 ;;Total ram usage:        6 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    5
  3035 ;; This function calls:
  3036 ;;		_SD_Card_Command
  3037 ;;		_SD_Card_Disable
  3038 ;;		_SD_Card_Enable
  3039 ;;		_SD_Card_ReadReg16
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _SD_Card_Init
  3047  03AC                     _SD_Card_Init:	
  3048  03AC                     l1878:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _SD_Card_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3051                           
  3052                           
  3053                           ;SD.c: 125: SD_FLAGS.cardResetOK = 0;
  3054  03AC  0020               	movlb	0	; select bank0
  3055  03AD  12D6               	bcf	_SD_FLAGS,5
  3056                           
  3057                           ;SD.c: 126: SD_FLAGS.cardInitOK = 0;
  3058  03AE  1356               	bcf	_SD_FLAGS,6
  3059                           
  3060                           ;SD.c: 127: SD_FLAGS.isCardActive = 0;
  3061  03AF  13D6               	bcf	_SD_FLAGS,7
  3062  03B0                     l1880:	
  3063                           
  3064                           ;SD.c: 130: _delay((unsigned long)((100)*(32000000/4000.0)));
  3065  03B0  3005               	movlw	5
  3066  03B1  0020               	movlb	0	; select bank0
  3067  03B2  00B3               	movwf	??_SD_Card_Init+1
  3068  03B3  300F               	movlw	15
  3069  03B4  00B2               	movwf	??_SD_Card_Init
  3070  03B5  30F1               	movlw	241
  3071  03B6                     u1757:	
  3072  03B6  0B89               	decfsz	9,f
  3073  03B7  2BB6               	goto	u1757
  3074  03B8  0BB2               	decfsz	??_SD_Card_Init,f
  3075  03B9  2BB6               	goto	u1757
  3076  03BA  0BB3               	decfsz	??_SD_Card_Init+1,f
  3077  03BB  2BB6               	goto	u1757
  3078  03BC                     l1882:	
  3079                           
  3080                           ;SD.c: 131: SD_Card_Enable();
  3081  03BC  3186  26C0  3183   	fcall	_SD_Card_Enable
  3082  03BF                     l1884:	
  3083                           
  3084                           ;SD.c: 134: for(uint8_t i=250; i!=0; i--) {
  3085  03BF  30FA               	movlw	250
  3086  03C0  0020               	movlb	0	; select bank0
  3087  03C1  00B2               	movwf	??_SD_Card_Init
  3088  03C2  0832               	movf	??_SD_Card_Init,w
  3089  03C3  00B4               	movwf	SD_Card_Init@i
  3090  03C4                     l1890:	
  3091                           
  3092                           ;SD.c: 135: if(SD_Card_Command(0, 0x00000000) == 0x01) {
  3093  03C4  3000               	movlw	0
  3094  03C5  00FC               	movwf	SD_Card_Command@a+3
  3095  03C6  3000               	movlw	0
  3096  03C7  00FB               	movwf	SD_Card_Command@a+2
  3097  03C8  3000               	movlw	0
  3098  03C9  00FA               	movwf	SD_Card_Command@a+1
  3099  03CA  3000               	movlw	0
  3100  03CB  00F9               	movwf	SD_Card_Command@a
  3101  03CC  3000               	movlw	0
  3102  03CD  3184  246C  3183   	fcall	_SD_Card_Command
  3103  03D0  3A01               	xorlw	1
  3104  03D1  1D03               	skipz
  3105  03D2  2BD4               	goto	u1211
  3106  03D3  2BD5               	goto	u1210
  3107  03D4                     u1211:	
  3108  03D4  2BD8               	goto	l1894
  3109  03D5                     u1210:	
  3110  03D5                     l1892:	
  3111                           
  3112                           ;SD.c: 136: SD_FLAGS.cardResetOK = 1;
  3113  03D5  0020               	movlb	0	; select bank0
  3114  03D6  16D6               	bsf	_SD_FLAGS,5
  3115                           
  3116                           ;SD.c: 137: break;
  3117  03D7  2BE9               	goto	l212
  3118  03D8                     l1894:	
  3119                           
  3120                           ;SD.c: 138: };SD.c: 139: _delay((unsigned long)((10)*(32000000/4000.0)));
  3121  03D8  3068               	movlw	104
  3122  03D9  0020               	movlb	0	; select bank0
  3123  03DA  00B2               	movwf	??_SD_Card_Init
  3124  03DB  30E4               	movlw	228
  3125  03DC                     u1767:	
  3126  03DC  0B89               	decfsz	9,f
  3127  03DD  2BDC               	goto	u1767
  3128  03DE  0BB2               	decfsz	??_SD_Card_Init,f
  3129  03DF  2BDC               	goto	u1767
  3130  03E0  0000               	nop
  3131  03E1                     l1896:	
  3132  03E1  3001               	movlw	1
  3133  03E2  0020               	movlb	0	; select bank0
  3134  03E3  02B4               	subwf	SD_Card_Init@i,f
  3135  03E4                     l1898:	
  3136  03E4  0834               	movf	SD_Card_Init@i,w
  3137  03E5  1D03               	btfss	3,2
  3138  03E6  2BE8               	goto	u1221
  3139  03E7  2BE9               	goto	u1220
  3140  03E8                     u1221:	
  3141  03E8  2BC4               	goto	l1890
  3142  03E9                     u1220:	
  3143  03E9                     l212:	
  3144                           
  3145                           ;SD.c: 140: };SD.c: 143: if(SD_FLAGS.cardResetOK == 1) {
  3146  03E9  1ED6               	btfss	_SD_FLAGS,5
  3147  03EA  2BEC               	goto	u1231
  3148  03EB  2BED               	goto	u1230
  3149  03EC                     u1231:	
  3150  03EC  2C2D               	goto	l214
  3151  03ED                     u1230:	
  3152  03ED                     l1900:	
  3153                           
  3154                           ;SD.c: 144: for(uint8_t i=250; i!=0; i--) {
  3155  03ED  30FA               	movlw	250
  3156  03EE  00B2               	movwf	??_SD_Card_Init
  3157  03EF  0832               	movf	??_SD_Card_Init,w
  3158  03F0  00B5               	movwf	SD_Card_Init@i_755
  3159  03F1                     l1906:	
  3160                           
  3161                           ;SD.c: 145: uint8_t response = SD_Card_Command(41, 0x00000000);
  3162  03F1  3000               	movlw	0
  3163  03F2  00FC               	movwf	SD_Card_Command@a+3
  3164  03F3  3000               	movlw	0
  3165  03F4  00FB               	movwf	SD_Card_Command@a+2
  3166  03F5  3000               	movlw	0
  3167  03F6  00FA               	movwf	SD_Card_Command@a+1
  3168  03F7  3000               	movlw	0
  3169  03F8  00F9               	movwf	SD_Card_Command@a
  3170  03F9  3029               	movlw	41
  3171  03FA  3184  246C  3183   	fcall	_SD_Card_Command
  3172  03FD  0020               	movlb	0	; select bank0
  3173  03FE  00B2               	movwf	??_SD_Card_Init
  3174  03FF  0832               	movf	??_SD_Card_Init,w
  3175  0400  00B6               	movwf	SD_Card_Init@response
  3176  0401                     l1908:	
  3177                           
  3178                           ;SD.c: 146: if(response & 0x04) response = SD_Card_Command(1, 0x00000000);
  3179  0401  1D36               	btfss	SD_Card_Init@response,2
  3180  0402  2C04               	goto	u1241
  3181  0403  2C05               	goto	u1240
  3182  0404                     u1241:	
  3183  0404  2C15               	goto	l1912
  3184  0405                     u1240:	
  3185  0405                     l1910:	
  3186  0405  3000               	movlw	0
  3187  0406  00FC               	movwf	SD_Card_Command@a+3
  3188  0407  3000               	movlw	0
  3189  0408  00FB               	movwf	SD_Card_Command@a+2
  3190  0409  3000               	movlw	0
  3191  040A  00FA               	movwf	SD_Card_Command@a+1
  3192  040B  3000               	movlw	0
  3193  040C  00F9               	movwf	SD_Card_Command@a
  3194  040D  3001               	movlw	1
  3195  040E  3184  246C  3183   	fcall	_SD_Card_Command
  3196  0411  0020               	movlb	0	; select bank0
  3197  0412  00B2               	movwf	??_SD_Card_Init
  3198  0413  0832               	movf	??_SD_Card_Init,w
  3199  0414  00B6               	movwf	SD_Card_Init@response
  3200  0415                     l1912:	
  3201                           
  3202                           ;SD.c: 147: if(response == 0x00) {
  3203  0415  0836               	movf	SD_Card_Init@response,w
  3204  0416  1D03               	btfss	3,2
  3205  0417  2C19               	goto	u1251
  3206  0418  2C1A               	goto	u1250
  3207  0419                     u1251:	
  3208  0419  2C1C               	goto	l1916
  3209  041A                     u1250:	
  3210  041A                     l1914:	
  3211                           
  3212                           ;SD.c: 148: SD_FLAGS.cardInitOK = 1;
  3213  041A  1756               	bsf	_SD_FLAGS,6
  3214                           
  3215                           ;SD.c: 149: break;
  3216  041B  2C2D               	goto	l214
  3217  041C                     l1916:	
  3218                           
  3219                           ;SD.c: 150: };SD.c: 151: _delay((unsigned long)((10)*(32000000/4000.0)));
  3220  041C  3068               	movlw	104
  3221  041D  0020               	movlb	0	; select bank0
  3222  041E  00B2               	movwf	??_SD_Card_Init
  3223  041F  30E4               	movlw	228
  3224  0420                     u1777:	
  3225  0420  0B89               	decfsz	9,f
  3226  0421  2C20               	goto	u1777
  3227  0422  0BB2               	decfsz	??_SD_Card_Init,f
  3228  0423  2C20               	goto	u1777
  3229  0424  0000               	nop
  3230  0425                     l1918:	
  3231  0425  3001               	movlw	1
  3232  0426  0020               	movlb	0	; select bank0
  3233  0427  02B5               	subwf	SD_Card_Init@i_755,f
  3234  0428                     l1920:	
  3235  0428  0835               	movf	SD_Card_Init@i_755,w
  3236  0429  1D03               	btfss	3,2
  3237  042A  2C2C               	goto	u1261
  3238  042B  2C2D               	goto	u1260
  3239  042C                     u1261:	
  3240  042C  2BF1               	goto	l1906
  3241  042D                     u1260:	
  3242  042D                     l214:	
  3243                           
  3244                           ;SD.c: 152: };SD.c: 153: };SD.c: 156: if(SD_FLAGS.cardInitOK == 1) {
  3245  042D  1F56               	btfss	_SD_FLAGS,6
  3246  042E  2C30               	goto	u1271
  3247  042F  2C31               	goto	u1270
  3248  0430                     u1271:	
  3249  0430  2C51               	goto	l219
  3250  0431                     u1270:	
  3251  0431                     l1922:	
  3252                           
  3253                           ;SD.c: 157: for(uint8_t i=250; i!=0; i--) {
  3254  0431  30FA               	movlw	250
  3255  0432  00B2               	movwf	??_SD_Card_Init
  3256  0433  0832               	movf	??_SD_Card_Init,w
  3257  0434  00B7               	movwf	SD_Card_Init@i_757
  3258  0435                     l1928:	
  3259                           
  3260                           ;SD.c: 158: if(SD_Card_Command(16, 512) == 0x00) {
  3261  0435  3000               	movlw	0
  3262  0436  00FC               	movwf	SD_Card_Command@a+3
  3263  0437  3000               	movlw	0
  3264  0438  00FB               	movwf	SD_Card_Command@a+2
  3265  0439  3002               	movlw	2
  3266  043A  00FA               	movwf	SD_Card_Command@a+1
  3267  043B  3000               	movlw	0
  3268  043C  00F9               	movwf	SD_Card_Command@a
  3269  043D  3010               	movlw	16
  3270  043E  3184  246C  3183   	fcall	_SD_Card_Command
  3271  0441  3A00               	xorlw	0
  3272  0442  1D03               	skipz
  3273  0443  2C45               	goto	u1281
  3274  0444  2C46               	goto	u1280
  3275  0445                     u1281:	
  3276  0445  2C49               	goto	l1932
  3277  0446                     u1280:	
  3278  0446                     l1930:	
  3279                           
  3280                           ;SD.c: 159: SD_FLAGS.cardBlockSizeOK = 1;
  3281  0446  0020               	movlb	0	; select bank0
  3282  0447  1656               	bsf	_SD_FLAGS,4
  3283                           
  3284                           ;SD.c: 160: break;
  3285  0448  2C51               	goto	l219
  3286  0449                     l1932:	
  3287  0449  3001               	movlw	1
  3288  044A  0020               	movlb	0	; select bank0
  3289  044B  02B7               	subwf	SD_Card_Init@i_757,f
  3290  044C  0837               	movf	SD_Card_Init@i_757,w
  3291  044D  1D03               	btfss	3,2
  3292  044E  2C50               	goto	u1291
  3293  044F  2C51               	goto	u1290
  3294  0450                     u1291:	
  3295  0450  2C35               	goto	l1928
  3296  0451                     u1290:	
  3297  0451                     l219:	
  3298                           
  3299                           ;SD.c: 161: };SD.c: 162: };SD.c: 163: };SD.c: 166: if(SD_FLAGS.cardBlockSizeOK == 1) {
  3300  0451  1E56               	btfss	_SD_FLAGS,4
  3301  0452  2C54               	goto	u1301
  3302  0453  2C55               	goto	u1300
  3303  0454                     u1301:	
  3304  0454  2C68               	goto	l1938
  3305  0455                     u1300:	
  3306  0455                     l1934:	
  3307                           
  3308                           ;SD.c: 167: SD_Card_ReadReg16(10, (uint8_t *)&SD_CID);
  3309  0455  30A0               	movlw	(low (_SD_CID| 0))& (0+255)
  3310  0456  00B2               	movwf	??_SD_Card_Init
  3311  0457  0832               	movf	??_SD_Card_Init,w
  3312  0458  00FD               	movwf	SD_Card_ReadReg16@dst
  3313  0459  300A               	movlw	10
  3314  045A  3185  25A2  3183   	fcall	_SD_Card_ReadReg16
  3315                           
  3316                           ;SD.c: 168: SD_Card_ReadReg16(9, (uint8_t *)&SD_CSD);
  3317  045D  3057               	movlw	(low (_SD_CSD| 0))& (0+255)
  3318  045E  0020               	movlb	0	; select bank0
  3319  045F  00B2               	movwf	??_SD_Card_Init
  3320  0460  0832               	movf	??_SD_Card_Init,w
  3321  0461  00FD               	movwf	SD_Card_ReadReg16@dst
  3322  0462  3009               	movlw	9
  3323  0463  3185  25A2  3183   	fcall	_SD_Card_ReadReg16
  3324  0466                     l1936:	
  3325                           
  3326                           ;SD.c: 169: SD_FLAGS.isCardActive = 1;
  3327  0466  0020               	movlb	0	; select bank0
  3328  0467  17D6               	bsf	_SD_FLAGS,7
  3329  0468                     l1938:	
  3330                           
  3331                           ;SD.c: 170: };SD.c: 172: SD_Card_Disable();
  3332  0468  3186  26E3  3183   	fcall	_SD_Card_Disable
  3333  046B                     l224:	
  3334  046B  0008               	return
  3335  046C                     __end_of_SD_Card_Init:	
  3336                           
  3337                           	psect	text12
  3338  05A2                     __ptext12:	
  3339 ;; *************** function _SD_Card_ReadReg16 *****************
  3340 ;; Defined at:
  3341 ;;		line 175 in file "SD.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  reg             1    wreg     unsigned char 
  3344 ;;  dst             1   13[COMMON] PTR unsigned char 
  3345 ;;		 -> SD_CSD(16), SD_CID(16), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  reg             1   16[BANK0 ] unsigned char 
  3348 ;;  i               1   17[BANK0 ] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3358 ;;      Params:         1       0       0       0
  3359 ;;      Locals:         0       2       0       0
  3360 ;;      Temps:          0       1       0       0
  3361 ;;      Totals:         1       3       0       0
  3362 ;;Total ram usage:        4 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    4
  3365 ;; This function calls:
  3366 ;;		_SD_Card_Command
  3367 ;;		_SD_Card_WaitStartToken
  3368 ;;		_SD_SPI_Read
  3369 ;; This function is called by:
  3370 ;;		_SD_Card_Init
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _SD_Card_ReadReg16
  3376  05A2                     _SD_Card_ReadReg16:	
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _SD_Card_ReadReg16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3380                           ;SD_Card_ReadReg16@reg stored from wreg
  3381  05A2  0020               	movlb	0	; select bank0
  3382  05A3  00B0               	movwf	SD_Card_ReadReg16@reg
  3383  05A4                     l1858:	
  3384                           
  3385                           ;SD.c: 176: if(SD_Card_Command(reg, 0x00000000) == 0x00) {
  3386  05A4  3000               	movlw	0
  3387  05A5  00FC               	movwf	SD_Card_Command@a+3
  3388  05A6  3000               	movlw	0
  3389  05A7  00FB               	movwf	SD_Card_Command@a+2
  3390  05A8  3000               	movlw	0
  3391  05A9  00FA               	movwf	SD_Card_Command@a+1
  3392  05AA  3000               	movlw	0
  3393  05AB  00F9               	movwf	SD_Card_Command@a
  3394  05AC  0830               	movf	SD_Card_ReadReg16@reg,w
  3395  05AD  3184  246C  3185   	fcall	_SD_Card_Command
  3396  05B0  3A00               	xorlw	0
  3397  05B1  1D03               	skipz
  3398  05B2  2DB4               	goto	u1191
  3399  05B3  2DB5               	goto	u1190
  3400  05B4                     u1191:	
  3401  05B4  2DE0               	goto	l230
  3402  05B5                     u1190:	
  3403  05B5                     l1860:	
  3404                           
  3405                           ;SD.c: 177: SD_Card_WaitStartToken();
  3406  05B5  3186  2607  3185   	fcall	_SD_Card_WaitStartToken
  3407  05B8                     l1862:	
  3408                           
  3409                           ;SD.c: 180: dst += 16;
  3410  05B8  3010               	movlw	16
  3411  05B9  0020               	movlb	0	; select bank0
  3412  05BA  00AF               	movwf	??_SD_Card_ReadReg16
  3413  05BB  082F               	movf	??_SD_Card_ReadReg16,w
  3414  05BC  07FD               	addwf	SD_Card_ReadReg16@dst,f
  3415  05BD                     l1864:	
  3416                           
  3417                           ;SD.c: 181: for(uint8_t i=0; i<16; i++) {
  3418  05BD  01B1               	clrf	SD_Card_ReadReg16@i
  3419  05BE                     l1870:	
  3420                           
  3421                           ;SD.c: 182: *--dst = SD_SPI_Read();
  3422  05BE  3186  26CE  3185   	fcall	_SD_SPI_Read
  3423  05C1  0020               	movlb	0	; select bank0
  3424  05C2  00AF               	movwf	??_SD_Card_ReadReg16
  3425  05C3  3001               	movlw	1
  3426  05C4  02FD               	subwf	SD_Card_ReadReg16@dst,f
  3427  05C5  087D               	movf	SD_Card_ReadReg16@dst,w
  3428  05C6  0086               	movwf	6
  3429  05C7  0187               	clrf	7
  3430  05C8  082F               	movf	??_SD_Card_ReadReg16,w
  3431  05C9  0081               	movwf	1
  3432  05CA                     l1872:	
  3433  05CA  3001               	movlw	1
  3434  05CB  00AF               	movwf	??_SD_Card_ReadReg16
  3435  05CC  082F               	movf	??_SD_Card_ReadReg16,w
  3436  05CD  07B1               	addwf	SD_Card_ReadReg16@i,f
  3437  05CE                     l1874:	
  3438  05CE  3010               	movlw	16
  3439  05CF  0231               	subwf	SD_Card_ReadReg16@i,w
  3440  05D0  1C03               	skipc
  3441  05D1  2DD3               	goto	u1201
  3442  05D2  2DD4               	goto	u1200
  3443  05D3                     u1201:	
  3444  05D3  2DBE               	goto	l1870
  3445  05D4                     u1200:	
  3446  05D4                     l1876:	
  3447                           
  3448                           ;SD.c: 183: };SD.c: 186: SD_Card_Command(12, 0x00000000);
  3449  05D4  3000               	movlw	0
  3450  05D5  00FC               	movwf	SD_Card_Command@a+3
  3451  05D6  3000               	movlw	0
  3452  05D7  00FB               	movwf	SD_Card_Command@a+2
  3453  05D8  3000               	movlw	0
  3454  05D9  00FA               	movwf	SD_Card_Command@a+1
  3455  05DA  3000               	movlw	0
  3456  05DB  00F9               	movwf	SD_Card_Command@a
  3457  05DC  300C               	movlw	12
  3458  05DD  3184  246C  3185   	fcall	_SD_Card_Command
  3459  05E0                     l230:	
  3460  05E0  0008               	return
  3461  05E1                     __end_of_SD_Card_ReadReg16:	
  3462                           
  3463                           	psect	text13
  3464  0607                     __ptext13:	
  3465 ;; *************** function _SD_Card_WaitStartToken *****************
  3466 ;; Defined at:
  3467 ;;		line 221 in file "SD.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  i               1    4[COMMON] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3481 ;;      Params:         0       0       0       0
  3482 ;;      Locals:         1       0       0       0
  3483 ;;      Temps:          1       0       0       0
  3484 ;;      Totals:         2       0       0       0
  3485 ;;Total ram usage:        2 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    3
  3488 ;; This function calls:
  3489 ;;		_SD_SPI_Read
  3490 ;; This function is called by:
  3491 ;;		_SD_Card_ReadReg16
  3492 ;;		_SD_Card_RWInit
  3493 ;;		_SD_Card_RWStartMulti
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _SD_Card_WaitStartToken
  3499  0607                     _SD_Card_WaitStartToken:	
  3500  0607                     l1734:	
  3501                           ;incstack = 0
  3502                           ; Regs used in _SD_Card_WaitStartToken: [wreg+status,2+status,0+pclath+cstack]
  3503                           
  3504                           
  3505                           ;SD.c: 222: for(uint8_t i=0; i<250; i++) {
  3506  0607  01F4               	clrf	SD_Card_WaitStartToken@i
  3507  0608                     l1740:	
  3508                           
  3509                           ;SD.c: 223: if(SD_SPI_Read() == 0xFE) return;
  3510  0608  3186  26CE  3186   	fcall	_SD_SPI_Read
  3511  060B  3AFE               	xorlw	254
  3512  060C  1D03               	skipz
  3513  060D  2E0F               	goto	u1001
  3514  060E  2E10               	goto	u1000
  3515  060F                     u1001:	
  3516  060F  2E11               	goto	l1744
  3517  0610                     u1000:	
  3518  0610  2E23               	goto	l254
  3519  0611                     l1744:	
  3520                           
  3521                           ;SD.c: 224: _delay((unsigned long)((1)*(32000000/4000.0)));
  3522  0611  300B               	movlw	11
  3523  0612  00F3               	movwf	??_SD_Card_WaitStartToken
  3524  0613  3062               	movlw	98
  3525  0614                     u1787:	
  3526  0614  0B89               	decfsz	9,f
  3527  0615  2E14               	goto	u1787
  3528  0616  0BF3               	decfsz	??_SD_Card_WaitStartToken,f
  3529  0617  2E14               	goto	u1787
  3530  0618  3200               	nop2
  3531  0619                     l1746:	
  3532  0619  3001               	movlw	1
  3533  061A  00F3               	movwf	??_SD_Card_WaitStartToken
  3534  061B  0873               	movf	??_SD_Card_WaitStartToken,w
  3535  061C  07F4               	addwf	SD_Card_WaitStartToken@i,f
  3536  061D                     l1748:	
  3537  061D  30FA               	movlw	250
  3538  061E  0274               	subwf	SD_Card_WaitStartToken@i,w
  3539  061F  1C03               	skipc
  3540  0620  2E22               	goto	u1011
  3541  0621  2E23               	goto	u1010
  3542  0622                     u1011:	
  3543  0622  2E08               	goto	l1740
  3544  0623                     u1010:	
  3545  0623                     l254:	
  3546  0623  0008               	return
  3547  0624                     __end_of_SD_Card_WaitStartToken:	
  3548                           
  3549                           	psect	text14
  3550  046C                     __ptext14:	
  3551 ;; *************** function _SD_Card_Command *****************
  3552 ;; Defined at:
  3553 ;;		line 64 in file "SD.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  cmd             1    wreg     unsigned char 
  3556 ;;  a               4    9[COMMON] unsigned long 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  cmd             1    5[BANK0 ] unsigned char 
  3559 ;;  i               1   13[BANK0 ] unsigned char 
  3560 ;;  i               1   14[BANK0 ] unsigned char 
  3561 ;;  payload         5    6[BANK0 ] unsigned char [5]
  3562 ;;  response        1   12[BANK0 ] unsigned char 
  3563 ;;  crc             1   11[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      unsigned char 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3573 ;;      Params:         4       0       0       0
  3574 ;;      Locals:         0      10       0       0
  3575 ;;      Temps:          0       5       0       0
  3576 ;;      Totals:         4      15       0       0
  3577 ;;Total ram usage:       19 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    3
  3580 ;; This function calls:
  3581 ;;		_SD_Card_Crc7
  3582 ;;		_SD_SPI_Read
  3583 ;;		_SD_SPI_Write
  3584 ;; This function is called by:
  3585 ;;		_SD_Card_Init
  3586 ;;		_SD_Card_ReadReg16
  3587 ;;		_SD_Card_RWInit
  3588 ;;		_SD_Card_RWEnd
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _SD_Card_Command
  3594  046C                     _SD_Card_Command:	
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in _SD_Card_Command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3598                           ;SD_Card_Command@cmd stored from wreg
  3599  046C  0020               	movlb	0	; select bank0
  3600  046D  00A5               	movwf	SD_Card_Command@cmd
  3601  046E                     l1684:	
  3602  046E                     l1686:	
  3603                           
  3604                           ;SD.c: 70: payload[0] = cmd | 0x40;
  3605  046E  0825               	movf	SD_Card_Command@cmd,w
  3606  046F  3840               	iorlw	64
  3607  0470  00A0               	movwf	??_SD_Card_Command
  3608  0471  0820               	movf	??_SD_Card_Command,w
  3609  0472  00A6               	movwf	SD_Card_Command@payload
  3610  0473                     l1688:	
  3611                           
  3612                           ;SD.c: 71: payload[1] = (uint8_t) (a >> 24);
  3613  0473  0879               	movf	SD_Card_Command@a,w
  3614  0474  00A0               	movwf	??_SD_Card_Command
  3615  0475  087A               	movf	SD_Card_Command@a+1,w
  3616  0476  00A1               	movwf	??_SD_Card_Command+1
  3617  0477  087B               	movf	SD_Card_Command@a+2,w
  3618  0478  00A2               	movwf	??_SD_Card_Command+2
  3619  0479  087C               	movf	SD_Card_Command@a+3,w
  3620  047A  00A3               	movwf	??_SD_Card_Command+3
  3621  047B  3018               	movlw	24
  3622  047C                     u945:	
  3623  047C  36A3               	lsrf	??_SD_Card_Command+3,f
  3624  047D  0CA2               	rrf	??_SD_Card_Command+2,f
  3625  047E  0CA1               	rrf	??_SD_Card_Command+1,f
  3626  047F  0CA0               	rrf	??_SD_Card_Command,f
  3627  0480                     u940:	
  3628  0480  0B89               	decfsz	9,f
  3629  0481  2C7C               	goto	u945
  3630  0482  0820               	movf	??_SD_Card_Command,w
  3631  0483  00A4               	movwf	??_SD_Card_Command+4
  3632  0484  0824               	movf	??_SD_Card_Command+4,w
  3633  0485  00A7               	movwf	SD_Card_Command@payload+1
  3634  0486                     l1690:	
  3635                           
  3636                           ;SD.c: 72: payload[2] = (uint8_t) (a >> 16);
  3637  0486  0879               	movf	SD_Card_Command@a,w
  3638  0487  00A0               	movwf	??_SD_Card_Command
  3639  0488  087A               	movf	SD_Card_Command@a+1,w
  3640  0489  00A1               	movwf	??_SD_Card_Command+1
  3641  048A  087B               	movf	SD_Card_Command@a+2,w
  3642  048B  00A2               	movwf	??_SD_Card_Command+2
  3643  048C  087C               	movf	SD_Card_Command@a+3,w
  3644  048D  00A3               	movwf	??_SD_Card_Command+3
  3645  048E  3010               	movlw	16
  3646  048F                     u955:	
  3647  048F  36A3               	lsrf	??_SD_Card_Command+3,f
  3648  0490  0CA2               	rrf	??_SD_Card_Command+2,f
  3649  0491  0CA1               	rrf	??_SD_Card_Command+1,f
  3650  0492  0CA0               	rrf	??_SD_Card_Command,f
  3651  0493                     u950:	
  3652  0493  0B89               	decfsz	9,f
  3653  0494  2C8F               	goto	u955
  3654  0495  0820               	movf	??_SD_Card_Command,w
  3655  0496  00A4               	movwf	??_SD_Card_Command+4
  3656  0497  0824               	movf	??_SD_Card_Command+4,w
  3657  0498  00A8               	movwf	SD_Card_Command@payload+2
  3658  0499                     l1692:	
  3659                           
  3660                           ;SD.c: 73: payload[3] = (uint8_t) (a >> 8);
  3661  0499  0879               	movf	SD_Card_Command@a,w
  3662  049A  00A0               	movwf	??_SD_Card_Command
  3663  049B  087A               	movf	SD_Card_Command@a+1,w
  3664  049C  00A1               	movwf	??_SD_Card_Command+1
  3665  049D  087B               	movf	SD_Card_Command@a+2,w
  3666  049E  00A2               	movwf	??_SD_Card_Command+2
  3667  049F  087C               	movf	SD_Card_Command@a+3,w
  3668  04A0  00A3               	movwf	??_SD_Card_Command+3
  3669  04A1  3008               	movlw	8
  3670  04A2                     u965:	
  3671  04A2  36A3               	lsrf	??_SD_Card_Command+3,f
  3672  04A3  0CA2               	rrf	??_SD_Card_Command+2,f
  3673  04A4  0CA1               	rrf	??_SD_Card_Command+1,f
  3674  04A5  0CA0               	rrf	??_SD_Card_Command,f
  3675  04A6                     u960:	
  3676  04A6  0B89               	decfsz	9,f
  3677  04A7  2CA2               	goto	u965
  3678  04A8  0820               	movf	??_SD_Card_Command,w
  3679  04A9  00A4               	movwf	??_SD_Card_Command+4
  3680  04AA  0824               	movf	??_SD_Card_Command+4,w
  3681  04AB  00A9               	movwf	SD_Card_Command@payload+3
  3682  04AC                     l1694:	
  3683                           
  3684                           ;SD.c: 74: payload[4] = (uint8_t) a;
  3685  04AC  0879               	movf	SD_Card_Command@a,w
  3686  04AD  00A0               	movwf	??_SD_Card_Command
  3687  04AE  0820               	movf	??_SD_Card_Command,w
  3688  04AF  00AA               	movwf	SD_Card_Command@payload+4
  3689  04B0                     l1696:	
  3690                           
  3691                           ;SD.c: 75: crc = SD_Card_Crc7(0, payload, 5);
  3692  04B0  3026               	movlw	(low (SD_Card_Command@payload| 0))& (0+255)
  3693  04B1  00A0               	movwf	??_SD_Card_Command
  3694  04B2  0820               	movf	??_SD_Card_Command,w
  3695  04B3  00F0               	movwf	SD_Card_Crc7@data
  3696  04B4  3005               	movlw	5
  3697  04B5  00A1               	movwf	??_SD_Card_Command+1
  3698  04B6  0821               	movf	??_SD_Card_Command+1,w
  3699  04B7  00F1               	movwf	SD_Card_Crc7@len
  3700  04B8  3000               	movlw	0
  3701  04B9  3185  2560  3184   	fcall	_SD_Card_Crc7
  3702  04BC  0020               	movlb	0	; select bank0
  3703  04BD  00A2               	movwf	??_SD_Card_Command+2
  3704  04BE  0822               	movf	??_SD_Card_Command+2,w
  3705  04BF  00AB               	movwf	SD_Card_Command@crc
  3706  04C0                     l1698:	
  3707                           
  3708                           ;SD.c: 78: SD_SPI_Write(0xFF);
  3709  04C0  30FF               	movlw	255
  3710  04C1  3186  26D9  3184   	fcall	_SD_SPI_Write
  3711  04C4                     l1700:	
  3712                           
  3713                           ;SD.c: 79: for(uint8_t i=0; i<5; i++) SD_SPI_Write(payload[i]);
  3714  04C4  0020               	movlb	0	; select bank0
  3715  04C5  01AE               	clrf	SD_Card_Command@i
  3716  04C6                     l1706:	
  3717  04C6  082E               	movf	SD_Card_Command@i,w
  3718  04C7  3E26               	addlw	(low (SD_Card_Command@payload| 0))& (0+255)
  3719  04C8  0086               	movwf	6
  3720  04C9  0187               	clrf	7
  3721  04CA  0801               	movf	1,w
  3722  04CB  3186  26D9  3184   	fcall	_SD_SPI_Write
  3723  04CE                     l1708:	
  3724  04CE  3001               	movlw	1
  3725  04CF  0020               	movlb	0	; select bank0
  3726  04D0  00A0               	movwf	??_SD_Card_Command
  3727  04D1  0820               	movf	??_SD_Card_Command,w
  3728  04D2  07AE               	addwf	SD_Card_Command@i,f
  3729  04D3                     l1710:	
  3730  04D3  3005               	movlw	5
  3731  04D4  022E               	subwf	SD_Card_Command@i,w
  3732  04D5  1C03               	skipc
  3733  04D6  2CD8               	goto	u971
  3734  04D7  2CD9               	goto	u970
  3735  04D8                     u971:	
  3736  04D8  2CC6               	goto	l1706
  3737  04D9                     u970:	
  3738  04D9                     l1712:	
  3739                           
  3740                           ;SD.c: 80: SD_SPI_Write(crc);
  3741  04D9  082B               	movf	SD_Card_Command@crc,w
  3742  04DA  3186  26D9  3184   	fcall	_SD_SPI_Write
  3743  04DD                     l1714:	
  3744                           
  3745                           ;SD.c: 83: for(uint8_t i=0; i<16; i++) {
  3746  04DD  0020               	movlb	0	; select bank0
  3747  04DE  01AD               	clrf	SD_Card_Command@i_734
  3748  04DF                     l1720:	
  3749                           
  3750                           ;SD.c: 84: response = SD_SPI_Read();
  3751  04DF  3186  26CE  3184   	fcall	_SD_SPI_Read
  3752  04E2  0020               	movlb	0	; select bank0
  3753  04E3  00A0               	movwf	??_SD_Card_Command
  3754  04E4  0820               	movf	??_SD_Card_Command,w
  3755  04E5  00AC               	movwf	SD_Card_Command@response
  3756  04E6                     l1722:	
  3757                           
  3758                           ;SD.c: 85: if(response != 0xFF) break;
  3759  04E6  0A2C               	incf	SD_Card_Command@response,w
  3760  04E7  1903               	btfsc	3,2
  3761  04E8  2CEA               	goto	u981
  3762  04E9  2CEB               	goto	u980
  3763  04EA                     u981:	
  3764  04EA  2CEC               	goto	l1726
  3765  04EB                     u980:	
  3766  04EB  2CF6               	goto	l1730
  3767  04EC                     l1726:	
  3768  04EC  3001               	movlw	1
  3769  04ED  00A0               	movwf	??_SD_Card_Command
  3770  04EE  0820               	movf	??_SD_Card_Command,w
  3771  04EF  07AD               	addwf	SD_Card_Command@i_734,f
  3772  04F0                     l1728:	
  3773  04F0  3010               	movlw	16
  3774  04F1  022D               	subwf	SD_Card_Command@i_734,w
  3775  04F2  1C03               	skipc
  3776  04F3  2CF5               	goto	u991
  3777  04F4  2CF6               	goto	u990
  3778  04F5                     u991:	
  3779  04F5  2CDF               	goto	l1720
  3780  04F6                     u990:	
  3781  04F6                     l1730:	
  3782                           
  3783                           ;SD.c: 86: };SD.c: 88: return response;
  3784  04F6  082C               	movf	SD_Card_Command@response,w
  3785  04F7                     l186:	
  3786  04F7  0008               	return
  3787  04F8                     __end_of_SD_Card_Command:	
  3788                           
  3789                           	psect	text15
  3790  0560                     __ptext15:	
  3791 ;; *************** function _SD_Card_Crc7 *****************
  3792 ;; Defined at:
  3793 ;;		line 91 in file "SD.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  crc             1    wreg     unsigned char 
  3796 ;;  data            1    0[COMMON] PTR unsigned char 
  3797 ;;		 -> SD_Card_Command@payload(5), 
  3798 ;;  len             1    1[COMMON] unsigned char 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  crc             1    8[COMMON] unsigned char 
  3801 ;;  j               1    7[COMMON] unsigned char 
  3802 ;;  c               1    6[COMMON] unsigned char 
  3803 ;;  i               2    4[COMMON] unsigned int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3813 ;;      Params:         2       0       0       0
  3814 ;;      Locals:         5       0       0       0
  3815 ;;      Temps:          2       0       0       0
  3816 ;;      Totals:         9       0       0       0
  3817 ;;Total ram usage:        9 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_SD_Card_Command
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _SD_Card_Crc7
  3829  0560                     _SD_Card_Crc7:	
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _SD_Card_Crc7: [wreg+fsr1l+fsr1h+status,2+status,0]
  3833                           ;SD_Card_Crc7@crc stored from wreg
  3834  0560  00F8               	movwf	SD_Card_Crc7@crc
  3835  0561                     l1646:	
  3836                           
  3837                           ;SD.c: 92: for(uint16_t i=0; i<len; i++) {
  3838  0561  01F4               	clrf	SD_Card_Crc7@i
  3839  0562  01F5               	clrf	SD_Card_Crc7@i+1
  3840  0563  2D8D               	goto	l189
  3841  0564                     l1648:	
  3842                           
  3843                           ;SD.c: 93: uint8_t c = *data++;
  3844  0564  0870               	movf	SD_Card_Crc7@data,w
  3845  0565  0086               	movwf	6
  3846  0566  0187               	clrf	7
  3847  0567  0801               	movf	1,w
  3848  0568  00F2               	movwf	??_SD_Card_Crc7
  3849  0569  0872               	movf	??_SD_Card_Crc7,w
  3850  056A  00F6               	movwf	SD_Card_Crc7@c
  3851  056B                     l1650:	
  3852  056B  3001               	movlw	1
  3853  056C  00F2               	movwf	??_SD_Card_Crc7
  3854  056D  0872               	movf	??_SD_Card_Crc7,w
  3855  056E  07F0               	addwf	SD_Card_Crc7@data,f
  3856  056F                     l1652:	
  3857                           
  3858                           ;SD.c: 94: for(uint8_t j=0; j<8; j++) {
  3859  056F  01F7               	clrf	SD_Card_Crc7@j
  3860  0570                     l1658:	
  3861                           
  3862                           ;SD.c: 95: crc <<= 1;
  3863  0570  1003               	clrc
  3864  0571  0DF8               	rlf	SD_Card_Crc7@crc,f
  3865  0572                     l1660:	
  3866                           
  3867                           ;SD.c: 96: if((c ^ crc) & 0x80) crc ^= 0x09;
  3868  0572  0878               	movf	SD_Card_Crc7@crc,w
  3869  0573  0676               	xorwf	SD_Card_Crc7@c,w
  3870  0574  00F2               	movwf	??_SD_Card_Crc7
  3871  0575  1FF2               	btfss	??_SD_Card_Crc7,7
  3872  0576  2D78               	goto	u911
  3873  0577  2D79               	goto	u910
  3874  0578                     u911:	
  3875  0578  2D7D               	goto	l1664
  3876  0579                     u910:	
  3877  0579                     l1662:	
  3878  0579  3009               	movlw	9
  3879  057A  00F2               	movwf	??_SD_Card_Crc7
  3880  057B  0872               	movf	??_SD_Card_Crc7,w
  3881  057C  06F8               	xorwf	SD_Card_Crc7@crc,f
  3882  057D                     l1664:	
  3883                           
  3884                           ;SD.c: 97: c <<= 1;
  3885  057D  1003               	clrc
  3886  057E  0DF6               	rlf	SD_Card_Crc7@c,f
  3887  057F                     l1666:	
  3888  057F  3001               	movlw	1
  3889  0580  00F2               	movwf	??_SD_Card_Crc7
  3890  0581  0872               	movf	??_SD_Card_Crc7,w
  3891  0582  07F7               	addwf	SD_Card_Crc7@j,f
  3892  0583  3008               	movlw	8
  3893  0584  0277               	subwf	SD_Card_Crc7@j,w
  3894  0585  1C03               	skipc
  3895  0586  2D88               	goto	u921
  3896  0587  2D89               	goto	u920
  3897  0588                     u921:	
  3898  0588  2D70               	goto	l1658
  3899  0589                     u920:	
  3900  0589                     l1668:	
  3901  0589  3001               	movlw	1
  3902  058A  07F4               	addwf	SD_Card_Crc7@i,f
  3903  058B  3000               	movlw	0
  3904  058C  3DF5               	addwfc	SD_Card_Crc7@i+1,f
  3905  058D                     l189:	
  3906  058D  0871               	movf	SD_Card_Crc7@len,w
  3907  058E  00F2               	movwf	??_SD_Card_Crc7
  3908  058F  01F3               	clrf	??_SD_Card_Crc7+1
  3909  0590  0873               	movf	??_SD_Card_Crc7+1,w
  3910  0591  0275               	subwf	SD_Card_Crc7@i+1,w
  3911  0592  1D03               	skipz
  3912  0593  2D96               	goto	u935
  3913  0594  0872               	movf	??_SD_Card_Crc7,w
  3914  0595  0274               	subwf	SD_Card_Crc7@i,w
  3915  0596                     u935:	
  3916  0596  1C03               	skipc
  3917  0597  2D99               	goto	u931
  3918  0598  2D9A               	goto	u930
  3919  0599                     u931:	
  3920  0599  2D64               	goto	l1648
  3921  059A                     u930:	
  3922  059A                     l1670:	
  3923                           
  3924                           ;SD.c: 98: };SD.c: 99: };SD.c: 100: crc <<= 1;
  3925  059A  1003               	clrc
  3926  059B  0DF8               	rlf	SD_Card_Crc7@crc,f
  3927  059C                     l1672:	
  3928                           
  3929                           ;SD.c: 101: return ++crc;
  3930  059C  3001               	movlw	1
  3931  059D  00F2               	movwf	??_SD_Card_Crc7
  3932  059E  0872               	movf	??_SD_Card_Crc7,w
  3933  059F  07F8               	addwf	SD_Card_Crc7@crc,f
  3934  05A0  0878               	movf	SD_Card_Crc7@crc,w
  3935  05A1                     l195:	
  3936  05A1  0008               	return
  3937  05A2                     __end_of_SD_Card_Crc7:	
  3938                           
  3939                           	psect	text16
  3940  06C0                     __ptext16:	
  3941 ;; *************** function _SD_Card_Enable *****************
  3942 ;; Defined at:
  3943 ;;		line 50 in file "SD.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, pclath, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3957 ;;      Params:         0       0       0       0
  3958 ;;      Locals:         0       0       0       0
  3959 ;;      Temps:          0       0       0       0
  3960 ;;      Totals:         0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    4
  3964 ;; This function calls:
  3965 ;;		_SD_Card_WaitIfBusy
  3966 ;;		_SD_SPI_Clock
  3967 ;; This function is called by:
  3968 ;;		_SD_Card_Init
  3969 ;;		_SD_Card_RWInit
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _SD_Card_Enable
  3975  06C0                     _SD_Card_Enable:	
  3976  06C0                     l1676:	
  3977                           ;incstack = 0
  3978                           ; Regs used in _SD_Card_Enable: [wreg+status,2+status,0+pclath+cstack]
  3979                           
  3980                           
  3981                           ;SD.c: 51: SD_SPI_Clock(8);
  3982  06C0  3008               	movlw	8
  3983  06C1  3186  266E  3186   	fcall	_SD_SPI_Clock
  3984  06C4                     l1678:	
  3985                           
  3986                           ;SD.c: 52: PORTAbits.RA4 = 0;
  3987  06C4  0020               	movlb	0	; select bank0
  3988  06C5  120C               	bcf	12,4	;volatile
  3989                           
  3990                           ;SD.c: 55: SD_SPI_Clock(1);
  3991  06C6  3001               	movlw	1
  3992  06C7  3186  266E  3186   	fcall	_SD_SPI_Clock
  3993                           
  3994                           ;SD.c: 56: SD_Card_WaitIfBusy();
  3995  06CA  3186  2624  3186   	fcall	_SD_Card_WaitIfBusy
  3996  06CD                     l175:	
  3997  06CD  0008               	return
  3998  06CE                     __end_of_SD_Card_Enable:	
  3999                           
  4000                           	psect	text17
  4001  0624                     __ptext17:	
  4002 ;; *************** function _SD_Card_WaitIfBusy *****************
  4003 ;; Defined at:
  4004 ;;		line 214 in file "SD.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  i               1    4[COMMON] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4018 ;;      Params:         0       0       0       0
  4019 ;;      Locals:         1       0       0       0
  4020 ;;      Temps:          1       0       0       0
  4021 ;;      Totals:         2       0       0       0
  4022 ;;Total ram usage:        2 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    3
  4025 ;; This function calls:
  4026 ;;		_SD_SPI_Read
  4027 ;; This function is called by:
  4028 ;;		_SD_Card_Enable
  4029 ;;		_SD_Card_RWStartMulti
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _SD_Card_WaitIfBusy
  4035  0624                     _SD_Card_WaitIfBusy:	
  4036  0624                     l1630:	
  4037                           ;incstack = 0
  4038                           ; Regs used in _SD_Card_WaitIfBusy: [wreg+status,2+status,0+pclath+cstack]
  4039                           
  4040                           
  4041                           ;SD.c: 215: for(uint8_t i=0; i<250; i++) {
  4042  0624  01F4               	clrf	SD_Card_WaitIfBusy@i
  4043  0625                     l1636:	
  4044                           
  4045                           ;SD.c: 216: if(SD_SPI_Read() != 0x00) return;
  4046  0625  3186  26CE  3186   	fcall	_SD_SPI_Read
  4047  0628  3A00               	xorlw	0
  4048  0629  1903               	skipnz
  4049  062A  2E2C               	goto	u891
  4050  062B  2E2D               	goto	u890
  4051  062C                     u891:	
  4052  062C  2E2E               	goto	l1640
  4053  062D                     u890:	
  4054  062D  2E40               	goto	l248
  4055  062E                     l1640:	
  4056                           
  4057                           ;SD.c: 217: _delay((unsigned long)((1)*(32000000/4000.0)));
  4058  062E  300B               	movlw	11
  4059  062F  00F3               	movwf	??_SD_Card_WaitIfBusy
  4060  0630  3062               	movlw	98
  4061  0631                     u1797:	
  4062  0631  0B89               	decfsz	9,f
  4063  0632  2E31               	goto	u1797
  4064  0633  0BF3               	decfsz	??_SD_Card_WaitIfBusy,f
  4065  0634  2E31               	goto	u1797
  4066  0635  3200               	nop2
  4067  0636                     l1642:	
  4068  0636  3001               	movlw	1
  4069  0637  00F3               	movwf	??_SD_Card_WaitIfBusy
  4070  0638  0873               	movf	??_SD_Card_WaitIfBusy,w
  4071  0639  07F4               	addwf	SD_Card_WaitIfBusy@i,f
  4072  063A                     l1644:	
  4073  063A  30FA               	movlw	250
  4074  063B  0274               	subwf	SD_Card_WaitIfBusy@i,w
  4075  063C  1C03               	skipc
  4076  063D  2E3F               	goto	u901
  4077  063E  2E40               	goto	u900
  4078  063F                     u901:	
  4079  063F  2E25               	goto	l1636
  4080  0640                     u900:	
  4081  0640                     l248:	
  4082  0640  0008               	return
  4083  0641                     __end_of_SD_Card_WaitIfBusy:	
  4084                           
  4085                           	psect	text18
  4086  06CE                     __ptext18:	
  4087 ;; *************** function _SD_SPI_Read *****************
  4088 ;; Defined at:
  4089 ;;		line 43 in file "SD.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  response        1    2[COMMON] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      unsigned char 
  4096 ;; Registers used:
  4097 ;;		wreg, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4103 ;;      Params:         0       0       0       0
  4104 ;;      Locals:         1       0       0       0
  4105 ;;      Temps:          1       0       0       0
  4106 ;;      Totals:         2       0       0       0
  4107 ;;Total ram usage:        2 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    2
  4110 ;; This function calls:
  4111 ;;		_SD_SPI_Write
  4112 ;; This function is called by:
  4113 ;;		_loop
  4114 ;;		_SD_Card_Command
  4115 ;;		_SD_Card_ReadReg16
  4116 ;;		_SD_Card_ProcessCRC
  4117 ;;		_SD_Card_WaitIfBusy
  4118 ;;		_SD_Card_WaitStartToken
  4119 ;;		_SD_Card_RWStopMulti
  4120 ;;		_SD_Card_ReadBlock
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _SD_SPI_Read
  4126  06CE                     _SD_SPI_Read:	
  4127  06CE                     l1614:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _SD_SPI_Read: [wreg+pclath+cstack]
  4130                           
  4131  06CE  0024               	movlb	4	; select bank4
  4132  06CF  0811               	movf	17,w	;volatile
  4133  06D0                     l1616:	
  4134                           
  4135                           ;SD.c: 46: response = SD_SPI_Write(0xFF);
  4136  06D0  30FF               	movlw	255
  4137  06D1  3186  26D9  3186   	fcall	_SD_SPI_Write
  4138  06D4  00F1               	movwf	??_SD_SPI_Read
  4139  06D5  0871               	movf	??_SD_SPI_Read,w
  4140  06D6  00F2               	movwf	SD_SPI_Read@response
  4141  06D7                     l1618:	
  4142                           
  4143                           ;SD.c: 47: return response;
  4144  06D7  0872               	movf	SD_SPI_Read@response,w
  4145  06D8                     l172:	
  4146  06D8  0008               	return
  4147  06D9                     __end_of_SD_SPI_Read:	
  4148                           
  4149                           	psect	text19
  4150  06E3                     __ptext19:	
  4151 ;; *************** function _SD_Card_Disable *****************
  4152 ;; Defined at:
  4153 ;;		line 59 in file "SD.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4167 ;;      Params:         0       0       0       0
  4168 ;;      Locals:         0       0       0       0
  4169 ;;      Temps:          0       0       0       0
  4170 ;;      Totals:         0       0       0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    3
  4174 ;; This function calls:
  4175 ;;		_SD_SPI_Clock
  4176 ;; This function is called by:
  4177 ;;		_SD_Card_Init
  4178 ;;		_SD_Card_RWInit
  4179 ;;		_SD_Card_RWEnd
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _SD_Card_Disable
  4185  06E3                     _SD_Card_Disable:	
  4186  06E3                     l1680:	
  4187                           ;incstack = 0
  4188                           ; Regs used in _SD_Card_Disable: [wreg+status,2+status,0+pclath+cstack]
  4189                           
  4190                           
  4191                           ;SD.c: 60: PORTAbits.RA4 = 1;
  4192  06E3  0020               	movlb	0	; select bank0
  4193  06E4  160C               	bsf	12,4	;volatile
  4194  06E5                     l1682:	
  4195                           
  4196                           ;SD.c: 61: SD_SPI_Clock(1);
  4197  06E5  3001               	movlw	1
  4198  06E6  3186  266E  3186   	fcall	_SD_SPI_Clock
  4199  06E9                     l178:	
  4200  06E9  0008               	return
  4201  06EA                     __end_of_SD_Card_Disable:	
  4202                           
  4203                           	psect	text20
  4204  066E                     __ptext20:	
  4205 ;; *************** function _SD_SPI_Clock *****************
  4206 ;; Defined at:
  4207 ;;		line 31 in file "SD.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  count           1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  count           1    2[COMMON] unsigned char 
  4212 ;;  i               1    3[COMMON] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, pclath, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4222 ;;      Params:         0       0       0       0
  4223 ;;      Locals:         2       0       0       0
  4224 ;;      Temps:          1       0       0       0
  4225 ;;      Totals:         3       0       0       0
  4226 ;;Total ram usage:        3 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    2
  4229 ;; This function calls:
  4230 ;;		_SD_SPI_Write
  4231 ;; This function is called by:
  4232 ;;		_SD_Card_Enable
  4233 ;;		_SD_Card_Disable
  4234 ;;		_SD_Card_RWStopMulti
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function _SD_SPI_Clock
  4240  066E                     _SD_SPI_Clock:	
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _SD_SPI_Clock: [wreg+status,2+status,0+pclath+cstack]
  4244                           ;SD_SPI_Clock@count stored from wreg
  4245  066E  00F2               	movwf	SD_SPI_Clock@count
  4246  066F                     l1622:	
  4247                           
  4248                           ;SD.c: 32: for(uint8_t i=0; i!=count; i++) {
  4249  066F  01F3               	clrf	SD_SPI_Clock@i
  4250  0670  2E79               	goto	l1628
  4251  0671                     l1624:	
  4252                           
  4253                           ;SD.c: 33: SD_SPI_Write(0xFF);
  4254  0671  30FF               	movlw	255
  4255  0672  3186  26D9  3186   	fcall	_SD_SPI_Write
  4256  0675                     l1626:	
  4257  0675  3001               	movlw	1
  4258  0676  00F1               	movwf	??_SD_SPI_Clock
  4259  0677  0871               	movf	??_SD_SPI_Clock,w
  4260  0678  07F3               	addwf	SD_SPI_Clock@i,f
  4261  0679                     l1628:	
  4262  0679  0873               	movf	SD_SPI_Clock@i,w
  4263  067A  0672               	xorwf	SD_SPI_Clock@count,w
  4264  067B  1D03               	skipz
  4265  067C  2E7E               	goto	u881
  4266  067D  2E7F               	goto	u880
  4267  067E                     u881:	
  4268  067E  2E71               	goto	l1624
  4269  067F                     u880:	
  4270  067F                     l163:	
  4271  067F  0008               	return
  4272  0680                     __end_of_SD_SPI_Clock:	
  4273                           
  4274                           	psect	text21
  4275  06D9                     __ptext21:	
  4276 ;; *************** function _SD_SPI_Write *****************
  4277 ;; Defined at:
  4278 ;;		line 37 in file "SD.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  byte            1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  byte            1    0[COMMON] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      unsigned char 
  4285 ;; Registers used:
  4286 ;;		wreg
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4292 ;;      Params:         0       0       0       0
  4293 ;;      Locals:         1       0       0       0
  4294 ;;      Temps:          0       0       0       0
  4295 ;;      Totals:         1       0       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_loop
  4303 ;;		_SD_SPI_Clock
  4304 ;;		_SD_SPI_Read
  4305 ;;		_SD_Card_Command
  4306 ;;		_SD_Card_RWInit
  4307 ;;		_SD_Card_RWStartMulti
  4308 ;;		_SD_Card_WriteBlock
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function _SD_SPI_Write
  4314  06D9                     _SD_SPI_Write:	
  4315                           
  4316                           ;incstack = 0
  4317                           ; Regs used in _SD_SPI_Write: [wreg]
  4318                           ;SD_SPI_Write@byte stored from wreg
  4319  06D9  00F0               	movwf	SD_SPI_Write@byte
  4320  06DA                     l1608:	
  4321                           
  4322                           ;SD.c: 38: SSP1BUF = byte;
  4323  06DA  0870               	movf	SD_SPI_Write@byte,w
  4324  06DB  0024               	movlb	4	; select bank4
  4325  06DC  0091               	movwf	17	;volatile
  4326  06DD                     l166:	
  4327                           ;SD.c: 39: while(!SSP1STATbits.BF);
  4328                           
  4329  06DD  1C14               	btfss	20,0	;volatile
  4330  06DE  2EE0               	goto	u871
  4331  06DF  2EE1               	goto	u870
  4332  06E0                     u871:	
  4333  06E0  2EDD               	goto	l166
  4334  06E1                     u870:	
  4335  06E1                     l1610:	
  4336                           
  4337                           ;SD.c: 40: return SSP1BUF;
  4338  06E1  0811               	movf	17,w	;volatile
  4339  06E2                     l169:	
  4340  06E2  0008               	return
  4341  06E3                     __end_of_SD_SPI_Write:	
  4342                           
  4343                           	psect	intentry
  4344  0004                     __pintentry:	
  4345 ;; *************** function _isr *****************
  4346 ;; Defined at:
  4347 ;;		line 66 in file "init.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		None
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4361 ;;      Params:         0       0       0       0
  4362 ;;      Locals:         0       0       0       0
  4363 ;;      Temps:          0       0       0       0
  4364 ;;      Totals:         0       0       0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		Interrupt level 1
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374  0004                     _isr:	
  4375                           
  4376                           ;incstack = 0
  4377  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4378                           
  4379                           ; Regs used in _isr: []
  4380  0005  3180               	pagesel	$
  4381  0006                     i1l122:	
  4382  0006  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4383  0007  0009               	retfie
  4384  0008                     __end_of_isr:	
  4385  007E                     btemp	set	126	;btemp
  4386  007E                     int$flags	set	126
  4387  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      71
    BANK1            80      0      16
    BANK2            80      0       0

Pointer List with Targets:

    SD_Card_ReadReg16@dst	PTR unsigned char  size(1) Largest target is 16
		 -> SD_CSD(BANK0[16]), SD_CID(BANK1[16]), 

    SD_Card_Crc7@data	PTR unsigned char  size(1) Largest target is 5
		 -> SD_Card_Command@payload(BANK0[5]), 

    loop@p	PTR unsigned char  size(1) Largest target is 4
		 -> loop@cardSize(BANK0[4]), 


Critical Paths under _main in COMMON

    _SD_Card_RWStopMulti->_SD_Card_ProcessCRC
    _SD_Card_RWStartMulti->_SD_Card_WaitIfBusy
    _SD_Card_RWStartMulti->_SD_Card_WaitStartToken
    _SD_Card_RWInit->_SD_Card_Command
    _SD_Card_RWEnd->_SD_Card_Command
    _SD_Card_ProcessCRC->_SD_SPI_Read
    _SD_Card_Init->_SD_Card_ReadReg16
    _SD_Card_ReadReg16->_SD_Card_Command
    _SD_Card_WaitStartToken->_SD_SPI_Read
    _SD_Card_Command->_SD_Card_Crc7
    _SD_Card_Enable->_SD_Card_WaitIfBusy
    _SD_Card_WaitIfBusy->_SD_SPI_Read
    _SD_SPI_Read->_SD_SPI_Write
    _SD_Card_Disable->_SD_SPI_Clock
    _SD_SPI_Clock->_SD_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_SD_Card_RWInit
    _SD_Card_RWInit->_SD_Card_Command
    _SD_Card_RWEnd->_SD_Card_Command
    _SD_Card_Init->_SD_Card_ReadReg16
    _SD_Card_ReadReg16->_SD_Card_Command

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11904
                       _SD_Card_Init
                        _SD_SPI_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                33    33      0    7755
                                             21 BANK0     33    33      0
                    _SD_Card_GetSize
                   _SD_Card_IsActive
                      _SD_Card_RWEnd
                     _SD_Card_RWInit
               _SD_Card_RWStartMulti
                _SD_Card_RWStopMulti
                        _SD_SPI_Read
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SD_Card_RWStopMulti                                  2     2      0     191
                                             10 COMMON     2     2      0
                 _SD_Card_ProcessCRC
                       _SD_SPI_Clock
                        _SD_SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SD_Card_RWStartMulti                                 0     0      0     206
                 _SD_Card_WaitIfBusy
             _SD_Card_WaitStartToken
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SD_Card_RWInit                                       6     0      6    4498
                                             15 BANK0      6     0      6
                    _SD_Card_Command
                    _SD_Card_Disable
                     _SD_Card_Enable
             _SD_Card_WaitStartToken
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SD_Card_RWEnd                                        4     4      0    1848
                                             15 BANK0      4     4      0
                    _SD_Card_Command
                    _SD_Card_Disable
                 _SD_Card_ProcessCRC
 ---------------------------------------------------------------------------------
 (3) _SD_Card_ProcessCRC                                   7     5      2      70
                                              3 COMMON     7     5      2
                        _SD_SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SD_Card_IsActive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Card_GetSize                                     27    23      4      92
                                              0 COMMON    12     8      4
                                              0 BANK0     15    15      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SD_SPI_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SD_Card_Init                                         6     6      0    4149
                                             18 BANK0      6     6      0
                    _SD_Card_Command
                    _SD_Card_Disable
                     _SD_Card_Enable
                  _SD_Card_ReadReg16
 ---------------------------------------------------------------------------------
 (2) _SD_Card_ReadReg16                                    4     3      1    2059
                                             13 COMMON     1     0      1
                                             15 BANK0      3     3      0
                    _SD_Card_Command
             _SD_Card_WaitStartToken
                        _SD_SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Card_WaitStartToken                               2     2      0      92
                                              3 COMMON     2     2      0
                        _SD_SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Card_Command                                     19    15      4    1678
                                              9 COMMON     4     0      4
                                              0 BANK0     15    15      0
                       _SD_Card_Crc7
                        _SD_SPI_Read
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SD_Card_Crc7                                         9     7      2     338
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) _SD_Card_Enable                                       0     0      0     160
                 _SD_Card_WaitIfBusy
                       _SD_SPI_Clock
 ---------------------------------------------------------------------------------
 (3) _SD_Card_WaitIfBusy                                   2     2      0      92
                                              3 COMMON     2     2      0
                        _SD_SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SD_SPI_Read                                          2     2      0      46
                                              1 COMMON     2     2      0
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_Card_Disable                                      0     0      0      68
                       _SD_SPI_Clock
 ---------------------------------------------------------------------------------
 (3) _SD_SPI_Clock                                         3     3      0      68
                                              1 COMMON     3     3      0
                       _SD_SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SD_SPI_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_Card_Init
     _SD_Card_Command
       _SD_Card_Crc7
       _SD_SPI_Read
         _SD_SPI_Write
       _SD_SPI_Write
     _SD_Card_Disable
       _SD_SPI_Clock
         _SD_SPI_Write
     _SD_Card_Enable
       _SD_Card_WaitIfBusy
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_SPI_Clock
         _SD_SPI_Write
     _SD_Card_ReadReg16
       _SD_Card_Command
         _SD_Card_Crc7
         _SD_SPI_Read
           _SD_SPI_Write
         _SD_SPI_Write
       _SD_Card_WaitStartToken
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_SPI_Read
         _SD_SPI_Write
   _SD_SPI_Init
   _init
   _loop
     _SD_Card_GetSize
     _SD_Card_IsActive
     _SD_Card_RWEnd
       _SD_Card_Command
         _SD_Card_Crc7
         _SD_SPI_Read
           _SD_SPI_Write
         _SD_SPI_Write
       _SD_Card_Disable
         _SD_SPI_Clock
           _SD_SPI_Write
       _SD_Card_ProcessCRC
         _SD_SPI_Read
           _SD_SPI_Write
     _SD_Card_RWInit
       _SD_Card_Command
         _SD_Card_Crc7
         _SD_SPI_Read
           _SD_SPI_Write
         _SD_SPI_Write
       _SD_Card_Disable
         _SD_SPI_Clock
           _SD_SPI_Write
       _SD_Card_Enable
         _SD_Card_WaitIfBusy
           _SD_SPI_Read
             _SD_SPI_Write
         _SD_SPI_Clock
           _SD_SPI_Write
       _SD_Card_WaitStartToken
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_SPI_Write
     _SD_Card_RWStartMulti
       _SD_Card_WaitIfBusy
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_Card_WaitStartToken
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_SPI_Write
     _SD_Card_RWStopMulti
       _SD_Card_ProcessCRC
         _SD_SPI_Read
           _SD_SPI_Write
       _SD_SPI_Clock
         _SD_SPI_Write
       _SD_SPI_Read
         _SD_SPI_Write
     _SD_SPI_Read
       _SD_SPI_Write
     _SD_SPI_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      65       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     36      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      10       8       20.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      65      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 17:04:19 2019

                 ??_SD_Card_RWEnd 007D           ?_SD_Card_WaitStartToken 0070                  ??_SD_Card_RWInit 007D  
                ??_SD_Card_Enable 0075                       __CFG_CP$OFF 0000                                l52 0098  
                              l55 00FF                                l49 006C                                l68 0196  
                              l69 01F0                                l86 02B6                 ??_SD_Card_Disable 0074  
               ??_SD_Card_GetSize 0020                               l212 03E9                               l117 06B0  
                             l230 05E0                               l214 042D                               l224 046B  
                             l234 03AB                               l242 06F4                               l163 067F  
                             l219 0451                 _SD_Card_RWEnd$860 0031                               l172 06D8  
                             l260 055F                               l157 066D                               l166 06DD  
                             l254 0623                               l175 06CD                               l239 065A  
                             l248 0640                               l169 06E2                               l273 0606  
                             l178 06E9                               l186 04F7                               l290 0690  
                             l195 05A1                               l189 058D                               l294 06A0  
               ??_SD_Card_Command 0020                               _GIE 005F                      __CFG_CPD$OFF 0000  
                             u900 0640                               u901 063F                               u910 0579  
                             u911 0578                               u920 0589                               u921 0588  
                             u930 059A                               u931 0599                               u940 0480  
                             u870 06E1                               u950 0493                               u871 06E0  
                             u935 0596                               u880 067F                               u960 04A6  
                             u881 067E                               u945 047C                               u890 062D  
                             u970 04D9                               u891 062C                               u971 04D8  
                             u955 048F                               u980 04EB                               u981 04EA  
                             u965 04A2                               u990 04F6                               u991 04F5  
                             _isr 0004                      __CFG_BORV$LO 0000                               wreg 0009  
               ?_SD_Card_IsActive 0070                ??_SD_Card_IsActive 0070                      __CFG_LVP$OFF 0000  
                            l2000 00F2                              l2002 00F6                              l1220 06A1  
                            l2020 012C                              l2004 00FC                              l1230 06AB  
                            l1222 06A4                              l2110 0234                              l2102 0223  
                            l2030 014B                              l2022 0130                              l2014 011A  
                            l2006 0113                              l1240 0668                              l1232 06AD  
                            l1224 06A5                              l2120 0253                              l2104 0227  
                            l2040 0164                              l2016 011E                              l2008 0117  
                            l2024 0133                              l1242 066C                              l1234 06AE  
                            l1226 06A7                              l2130 0262                              l2122 0255  
                            l2114 023A                              l2050 0179                              l2034 0155  
                            l2042 0167                              l2026 0136                              l2018 0123  
                            l1236 06AF                              l1228 06A9                              l2140 027B  
                            l2108 022D                              l2116 023D                              l2052 0184  
                            l2044 0171                              l2060 01A4                              l2036 015F  
                            l2028 0148                              l1238 065B                              l2150 0291  
                            l2142 027E                              l2134 026C                              l2126 025C  
                            l2118 0240                              l2070 01CB                              l2062 01B9  
                            l2054 0190                              l2046 0172                              l2160 02B0  
                            l2152 0292                              l2136 0276                              l2128 025F  
                            l2080 01DF                              l1610 06E1                              l2146 0284  
                            l2090 0208                              l2082 01E2                              l2074 01D5  
                            l2066 01C5                              l2058 0197                              l2170 06B1  
                            l1700 04C4                              l2164 02B7                              l2156 0299  
                            l2148 0287                              l2084 01E7                              l2076 01D9  
                            l2068 01C8                              l2172 06B7                              l1622 066F  
                            l1614 06CE                              l1630 0624                              l1710 04D3  
                            l2158 02A4                              l2166 02C4                              l2094 020F  
                            l2086 01ED                              l2174 06BA                              l1608 06DA  
                            l1624 0671                              l1616 06D0                              l1640 062E  
                            l1720 04DF                              l1712 04D9                              l2168 02D0  
                            l2096 0216                              l2088 0205                              l1626 0675  
                            l1618 06D7                              l1642 0636                              l1650 056B  
                            l1730 04F6                              l1722 04E6                              l1714 04DD  
                            l1706 04C6                              l1810 05E1                              l1802 055B  
                            l2098 0219                              l1628 0679                              l1644 063A  
                            l1636 0625                              l1660 0572                              l1652 056F  
                            l1708 04CE                              l1740 0608                              l1900 03ED  
                            l1820 05F7                              l1812 05E6                              l1804 055E  
                            l1670 059A                              l1662 0579                              l1646 0561  
                            l1726 04EC                              l1734 0607                              l1910 0405  
                            l1750 0641                              l1822 0603                              l1814 05E9  
                            l1680 06E3                              l1672 059C                              l1664 057D  
                            l1648 0564                              l1728 04F0                              l1744 0611  
                            l1920 0428                              l1912 0415                              l1840 03A3  
                            l1752 0656                              l1816 05EE                              l1808 05E1  
                            l1760 04F8                              l1682 06E5                              l1666 057F  
                            l1658 0570                              l1690 0486                              l1746 0619  
                            l1930 0446                              l1922 0431                              l1914 041A  
                            l1906 03F1                              l1834 0341                              l1826 02DE  
                            l1818 05F3                              l1770 0510                              l1762 04FB  
                            l1850 0691                              l1676 06C0                              l1668 0589  
                            l1692 0499                              l1684 046E                              l1748 061D  
                            l1860 05B5                              l1932 0449                              l1916 041C  
                            l1908 0401                              l1836 034A                              l1828 02E8  
                            l1756 06F0                              l1772 0521                              l1764 0501  
                            l1844 0680                              l1852 0694                              l1940 001E  
                            l1678 06C4                              l1694 04AC                              l1686 046E  
                            l1870 05BE                              l1862 05B8                              l1934 0455  
                            l1918 0425                              l1766 0506                              l1846 0685  
                            l1854 0699                              l1942 0026                              l1696 04B0  
                            l1688 0473                              l1872 05CA                              l1864 05BD  
                            l1936 0466                              l1928 0435                              l1880 03B0  
                            l1776 0523                              l1768 050B                              l1784 0539  
                            l1848 068D                              l1960 0069                              l1944 0032  
                            l1698 04C0                              l1874 05CE                              l1858 05A4  
                            l1938 0468                              l1890 03C4                              l1882 03BC  
                            l1786 053E                              l1794 054B                              l1778 0534  
                            l1970 0087                              l1962 0080                              l1954 0057  
                            l1946 0040                              l1876 05D4                              l1892 03D5  
                            l1884 03BF                              l1796 0557                              l1980 00BC  
                            l1972 008C                              l1956 005B                              l1948 0054  
                            l1894 03D8                              l1878 03AC                              l1974 0095  
                            l1958 0060                              l1896 03E1                              l1976 00AC  
                            l1968 0083                              l1898 03E4                              l1994 00E3  
                            l1986 00C0                              l1978 00B8                              l1996 00E7  
                            l1988 00E1                              l1998 00EC                              ?_isr 0070  
                            u1000 0610                              u1001 060F                              u1010 0623  
                            u1011 0622                              u1020 050B                              u1021 050A  
                            u1110 032F                              u1030 0510                              u1031 050F  
                            u1200 05D4                              u1120 0336                              u1040 0521  
                            u1201 05D3                              u1105 02FF                              u1041 0520  
                            u1210 03D5                              u1130 034A                              u1050 0534  
                            u1211 03D4                              u1131 0349                              u1115 032B  
                            u1051 0533                              u1300 0455                              u1220 03E9  
                            u1140 036A                              u1060 053E                              u1301 0454  
                            u1221 03E8                              u1125 0332                              u1061 053D  
                            u1230 03ED                              u1150 038D                              u1070 05E6  
                            u1310 0026                              u1231 03EC                              u1071 05E5  
                            u1311 0025                              u1240 0405                              u1160 0394  
                            u1080 05EE                              u1400 00FC                              u1320 0030  
                            u1241 0404                              u1145 0366                              u1081 05ED  
                            u1401 00FB                              u1321 002D                              u1250 041A  
                            u1090 02E8                              u1170 0685                              u1410 0113  
                            u1251 0419                              u1155 0389                              u1091 02E7  
                            u1171 0684                              u1411 0112                              u1260 042D  
                            u1180 0699                              u1500 01C4                              u1420 012C  
                            u1340 0054                              u1261 042C                              u1165 0390  
                            u1181 0698                              u1501 01C3                              u1421 012B  
                            u1341 0053                              _LATA 010C                              u1190 05B5  
                            u1270 0431                              u1510 01D4                              u1430 0148  
                            u1350 0069                              u1334 0032                              u1191 05B4  
                            u1271 0430                              u1511 01D3                              u1431 0147  
                            u1351 0068                              u1280 0446                              u1600 0298  
                            u1520 01ED                              u1440 0154                              u1360 0080  
                            u1281 0445                              u1601 0297                              u1521 01EC  
                            u1441 0153                              u1361 007F                              u1290 0451  
                            u1610 02A2                              u1530 0205                              u1450 0171  
                            u1370 0095                              u1291 0450                              u1611 029F  
                            u1531 0204                              u1451 0170                              u1371 0094  
                            u1540 020E                              u1460 0178                              u1380 00AC  
                            u1541 020D                              u1461 0177                              u1381 00AB  
                            u1630 02CE                              u1550 0222                              u1470 0182  
                            u1390 00F2                              u1631 02CB                              u1551 0221  
                            u1471 017F                              u1391 00F1                              u1624 02A4  
                            u1560 0253                              u1561 0252                              u1570 025B  
                            u1490 01B9                              u1571 025A                              u1491 01B8  
                            u1707 018A                              u1644 02D0                              u1580 026B  
                            u1484 0184                              u1581 026A                              u1717 019D  
                            u1590 0291                              u1727 02AA                              u1591 0290  
                            u1737 02BD                              u1747 02D6                              u1757 03B6  
                            u1767 03DC                              u1777 0420                              u1697 0038  
                            u1787 0614                              _PEIE 005E                              u1797 0631  
                    __CFG_WRT$OFF 0000                              _main 06B1                              _init 06A1  
                            _loop 001E                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E                     __CFG_BOREN$ON 0000  
                            start 0008                     __CFG_IESO$OFF 0000    __end_of_SD_Card_WaitStartToken 0624  
                           ??_isr 0070                     __CFG_PLLEN$ON 0000                 _SD_Card_ReadReg16 05A2  
                           ?_main 0070                             ?_init 0070                             ?_loop 0070  
                   __CFG_WDTE$OFF 0000                             i1l122 0006                ?_SD_Card_ReadReg16 007D  
                           _TRISA 008C                     __CFG_PWRTE$ON 0000                    __CFG_FCMEN$OFF 0000  
             ??_SD_Card_ReadReg16 002F                             loop@i 003F                             loop@j 004F  
                           loop@p 0055             SD_Card_ProcessCRC@crc 0078                             status 0003  
                           wtemp0 007E         SD_Card_GetSize@c_size_845 0074                    __CFG_MCLRE$OFF 0000  
                 __initialization 000A                      __end_of_main 06C0                      __end_of_init 06B1  
                    __end_of_loop 02DE         __end_of_SD_Card_ReadReg16 05E1                            ??_main 007E  
                          ??_init 0070                            ??_loop 0035               SD_Card_WaitIfBusy@i 0074  
                          _ANSELA 018C                            _OSCCON 0099                  SD_Card_Crc7@data 0070  
                          _TMR0IE 005D                            _SD_CID 00A0                            _SD_CSD 0057  
                  __CFG_STVREN$ON 0000                      ?_SD_SPI_Init 0070                      ?_SD_SPI_Read 0070  
              _SD_Card_WaitIfBusy 0624                  SD_Card_Command@a 0079                  SD_Card_Command@i 002E  
             _SD_Card_RWStopMulti 0691               ?_SD_Card_WaitIfBusy 0070                _SD_Card_ProcessCRC 0641  
         __end_of__initialization 001A              ?_SD_Card_RWStopMulti 0070                   _SD_Card_Disable 06E3  
                 _SD_Card_GetSize 02DE               ?_SD_Card_ProcessCRC 0073                   _SD_Card_Command 046C  
                  __pcstackCOMMON 0070              ??_SD_Card_WaitIfBusy 0073      __end_of_SD_Card_RWStartMulti 0691  
      __size_of_SD_Card_ReadReg16 003F        SD_Card_GetSize@c_size_mult 007B              ??_SD_Card_ProcessCRC 0075  
                      __pbssBANK0 0056                        __pbssBANK1 00A0             ??_SD_Card_RWStopMulti 007A  
       __size_of_SD_Card_IsActive 0005                        __pmaintext 06B1                        __pintentry 0004  
           __end_of_SD_Card_RWEnd 0607                           _OSCTUNE 0098                 SD_SPI_Clock@count 0072  
                         _SSP1BUF 0211           __end_of_SD_Card_Disable 06EA           __end_of_SD_Card_GetSize 03AC  
         __end_of_SD_Card_Command 04F8            SD_Card_Command@payload 0026                           __ptext1 001E  
                         __ptext2 0691                           __ptext3 0680                           __ptext4 04F8  
                         __ptext5 05E1                           __ptext6 0641                           __ptext7 06F0  
                         __ptext8 02DE                           __ptext9 06A1              __size_of_SD_SPI_Init 0013  
            __size_of_SD_SPI_Read 000B                     ?_SD_SPI_Clock 0070                      __size_of_isr 0004  
                   ?_SD_SPI_Write 0070           __size_of_SD_Card_RWInit 0068           __size_of_SD_Card_Enable 000E  
                   ?_SD_Card_Crc7 0070                     ?_SD_Card_Init 0070                           clrloop0 06EB  
            _SD_Card_RWStartMulti 0680              end_of_initialization 001A                           loop@sum 0037  
      SD_Card_GetSize@read_bl_len 007A                 SD_Card_Init@i_755 0035                 SD_Card_Init@i_757 0037  
                       _PORTAbits 000C                    ??_SD_SPI_Clock 0071                    ??_SD_SPI_Write 0070  
                __CFG_FOSC$INTOSC 0000                         _TRISAbits 008C                    ??_SD_Card_Crc7 0072  
                  ??_SD_Card_Init 0032             ?_SD_Card_RWStartMulti 0070                  ?_SD_Card_Disable 0070  
                ?_SD_Card_GetSize 0070          ??_SD_Card_WaitStartToken 0073                  ?_SD_Card_Command 0079  
                _SD_Card_IsActive 06F0               start_initialization 000A           SD_Card_WaitStartToken@i 0074  
                     __end_of_isr 0008              SD_Card_Command@i_734 002D                   SD_Card_Crc7@crc 0078  
                 SD_Card_Crc7@len 0071                      loop@cardSize 003B       __size_of_SD_Card_WaitIfBusy 001D  
                  _SD_Card_RWInit 04F8                         ___latbits 0001                    _SD_Card_Enable 06C0  
                   __pcstackBANK0 0020       __size_of_SD_Card_ProcessCRC 001A            ??_SD_Card_RWStartMulti 0075  
     __end_of_SD_Card_RWStopMulti 06A1   __size_of_SD_Card_WaitStartToken 001D              __end_of_SD_SPI_Clock 0680  
            __end_of_SD_SPI_Write 06E3              __end_of_SD_Card_Crc7 05A2              __end_of_SD_Card_Init 046C  
          __end_of_SD_Card_RWInit 0560            __end_of_SD_Card_Enable 06CE            __size_of_SD_Card_RWEnd 0026  
                       clear_ram0 06EA                          _SD_FLAGS 0056                     ??_SD_SPI_Init 0070  
                   ??_SD_SPI_Read 0071            _SD_Card_WaitStartToken 0607                   ?_SD_Card_RWInit 002F  
                 ?_SD_Card_Enable 0070          __end_of_SD_Card_IsActive 06F5           SD_Card_Command@response 002C  
                      _APFCONbits 011D                SD_Card_RWInit@addr 002F                     _SD_Card_RWEnd 05E1  
                       loop@i_310 0041                         loop@i_320 0049                         loop@i_313 0043  
                       loop@i_322 004B                         loop@i_315 0045                         loop@i_325 004D  
                       loop@i_317 0047                         loop@i_326 0052                         loop@i_318 0050  
                       loop@j_321 0054                         loop@j_324 0051                         loop@j_319 0053  
             __end_of_SD_SPI_Init 066E               __end_of_SD_SPI_Read 06D9                     SD_SPI_Clock@i 0073  
                        __ptext10 065B                          __ptext11 03AC                          __ptext20 066E  
                        __ptext12 05A2                          __ptext21 06D9                          __ptext13 0607  
                        __ptext14 046C                          __ptext15 0560                          __ptext16 06C0  
                        __ptext17 0624                          __ptext18 06CE                          __ptext19 06E3  
                    _SSP1CON1bits 0215             __size_of_SD_SPI_Clock 0012             __size_of_SD_SPI_Write 000A  
                   __size_of_main 000F                     __size_of_init 0010                     __size_of_loop 02C0  
           __size_of_SD_Card_Crc7 0042             __size_of_SD_Card_Init 00C0              SD_Card_Init@response 0036  
        __size_of_SD_Card_Disable 0007          __size_of_SD_Card_GetSize 00CE          __size_of_SD_Card_Command 008C  
                        int$flags 007E                    ?_SD_Card_RWEnd 0070                      _SSP1STATbits 0214  
                SD_SPI_Write@byte 0070              SD_Card_ReadReg16@dst 007D              SD_Card_ReadReg16@reg 0030  
                    _SD_SPI_Clock 066E  SD_Card_RWInit@singleOrMultiBlock 0034                      _SD_SPI_Write 06D9  
                   SD_Card_Crc7@c 0076                     SD_Card_Crc7@i 0074                     SD_Card_Crc7@j 0077  
              SD_Card_Command@cmd 0025                SD_Card_Command@crc 002B                     SD_Card_Init@i 0034  
                    _SD_Card_Crc7 0560                      _SD_Card_Init 03AC                          intlevel1 0000  
                        loop@sum2 0039                 __CFG_CLKOUTEN$OFF 0000        __end_of_SD_Card_WaitIfBusy 0641  
                     _SD_SPI_Init 065B                       _SD_SPI_Read 06CE                        _OPTION_REG 0095  
      __end_of_SD_Card_ProcessCRC 065B               SD_SPI_Read@response 0072             SD_Card_GetSize@c_size 0078  
              SD_Card_ReadReg16@i 0031         SD_Card_RWInit@readOrWrite 0033     __size_of_SD_Card_RWStartMulti 0011  
    __size_of_SD_Card_RWStopMulti 0010  
